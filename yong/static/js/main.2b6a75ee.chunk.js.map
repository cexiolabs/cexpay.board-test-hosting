{"version":3,"sources":["app/pages/home/settings/gateway/GatewayConstruct/index.module.scss","app/layout/NavbarMenu/index.module.scss","app/pages/common/components/ChipElement/index.module.scss","app/layout/index.module.scss","app/pages/home/settings/limits/index.module.scss","app/pages/common/components/ErrorRender/index.module.scss","app/pages/home/settings/gateway/StepperIntegrationFlow/index.module.scss","app/layout/FooterLayout/index.module.scss","app/pages/common/components/PaginationActivity/index.module.scss","app/pages/home/settings/index.module.scss","app/utils/helper.ts","app/api/ApiCall.ts","app/api/DashboardApi.ts","app/api/DashboardApiBase.ts","app/api/ApiClient.ts","constants.ts","app/api/CryptoPayClient.ts","app/pages/home/accounts/components/AccountsTable.tsx","app/pages/common/components/LinkPermissions.tsx","app/store/ducks/accounts.duck.ts","app/store/ducks/merchants.duck.ts","app/store/ducks/order.duck.ts","app/pages/home/orders/components/OrdersTable.tsx","app/store/ducks/orders.duck.ts","app/store/ducks/general.duck.ts","app/store/ducks/account.duck.ts","app/store/ducks/i18n.duck.ts","app/store/ducks/gateway.duck.ts","app/store/ducks/layout.duck.ts","app/store/ducks/limits.duck.ts","app/store/ducks/subscriptions.duck.ts","app/store/rootDuck.ts","app/store/store.ts","app/pages/home/account/components/TransactionsTable.tsx","app/pages/home/account/components/TransactionsFilter.tsx","app/pages/common/components/PaginationActivity/PaginationActivity.tsx","app/pages/home/account/Account.tsx","app/pages/common/components/ChipElement/index.ts","app/pages/common/components/ChipElement/ChipElement.tsx","app/pages/home/accounts/components/AccountsFilter.tsx","app/pages/common/components/FilterByMerchant.tsx","app/pages/common/components/FilterByCurrency.tsx","app/pages/common/components/PaginationActivity/index.ts","app/pages/common/components/TableColumnSettings.tsx","app/pages/home/accounts/Accounts.tsx","app/pages/home/merchant/overview/OverviewMerchant.tsx","app/pages/home/merchant/Merchant.tsx","app/pages/home/merchants/components/MerchantsTable.tsx","app/utils/dateUtil.ts","app/pages/common/components/FilterByDate.tsx","app/pages/home/merchants/Merchants.tsx","app/pages/home/order/Order.tsx","app/utils/dataToCsv.ts","app/pages/home/orders/components/OrdersFilter.tsx","app/pages/home/orders/Orders.tsx","app/pages/home/order/components/OrderWorkflow.tsx","app/pages/home/settings/gateway/GatewaysList/GatewaysList.tsx","app/pages/home/settings/gateway/StepperIntegrationFlow/StepperIntegrationFlow.tsx","app/pages/home/settings/gateway/GatewayConstruct/GatewayConstruct.tsx","app/pages/home/settings/gateway/Gateway.tsx","app/pages/home/settings/gateway/index.ts","app/pages/home/settings/general/index.ts","app/pages/home/settings/general/General.tsx","app/pages/home/settings/limits/Limits.tsx","app/pages/home/settings/limits/index.ts","app/pages/home/settings/subscriptions/SubscriptionsList.tsx","app/pages/home/settings/subscriptions/SubscriptionForm.tsx","app/pages/home/settings/subscriptions/index.tsx","app/pages/home/settings/users/index.ts","app/pages/home/settings/users/Users.tsx","app/pages/home/settings/Settings.tsx","app/pages/home/settings/index.ts","app/layout/LayoutContext.js","app/pages/home/HomePage.tsx","app/layout/NavbarMenu/NavbarMenu.tsx","app/layout/NavbarMenu/index.ts","app/pages/common/components/CopyRight.tsx","app/layout/FooterLayout/FooterLayout.tsx","app/layout/FooterLayout/index.ts","app/layout/Layout.tsx","app/utils/utils.js","app/router/RouterHelpers.js","app/pages/common/components/ErrorRender/ErrorRender.tsx","app/pages/common/components/ErrorRender/index.ts","app/router/Routes.js","app/i18n/I18nProvider.js","app/layout/InitialLayout.tsx","App.tsx","index.tsx"],"names":["module","exports","parseObjectToQueryParams","object","urlSearchParams","URLSearchParams","key","hasOwnProperty","value","undefined","Date","set","toISOString","Array","isArray","length","join","toString","convertCurrenciesForAutocomplite","currencies","result","currency","currenciesPriorityDict","push","console","warn","type","priority","USD","EUR","GBP","RUB","ATOM","ADA","BAT","BCH","BTC","BTT","DASH","ETH","GAS","LTC","MHC","NEO","ONG","ONT","TRX","TST","USDT","XLM","XTZ","XRP","method","url","body","decoder","encoder","overrideInit","a","urlStr","req","JSON","stringify","Typifier","decode","headers","Object","keys","fetchInit","cache","credentials","mode","redirect","fetch","response","status","HttpStatusError","statusText","contentType","get","includes","json","rsp","ApiCallError","message","code","reason","Error","inner","msg","InnerError","DashboardApi","gatewayId","this","authCall","CreateGatewayResponse","data","SubscriptionWithSecret","SubscriptionData","subscriptionId","apiAccountId","Account","FilterSettingsAccounts","filter","helper","Accounts","GatewaysList","MerchantChildren","MerchantLimits","FilterSettingsMerchants","Merchants","TopicInfoList","SubscriptionList","apiOrderId","Order","OrderWorkflowTicks","Orders","FilterSettingsOrders","OrdersListCsv","Transactions","limit","options","encoded","encode","_","chain","toPairs","map","k","v","encodeURIComponent","_options","path","init","apicall","URL","apiBaseUrl","setAuthHeaders","call","innerError","CEXPAY_PROCESSING_V2_API_URL","envName","process","pathname","endsWith","ParseUrlFromEnvs","log","cps","AccountsColumn","LinkPermissions","to","props","label","Component","connector","connect","state","permissions","ActionTypes","AccountsColumnsLabels","NAME","ACCOUNT_ID","CLIENT_ACCOUNT_ID","CURRENCY","DESCRIPTION","BALANCE","MERCHANT","TAGS","DEPOSIT_ADDRESS","CREATED_AT","UPDATED_AT","AccountsColumnsArray","AccountsTable","Table","responsive","className","columns","name","index","accounts","account","permission","DashboardPermission","AccountView","balance","clientAccountId","createdAt","depositAddress","description","merchantName","accountName","tags","updatedAt","saga","workerGetAccountsList","workerGetAccountsSettings","initialState","filterSettings","columnSettings","activeColumns","loadAccountsListAction","LOAD_ACCOUNTS_LIST","payload","loadAccountsSettingsAction","settings","LOAD_ACCOUNTS_SETTINGS","reducer","previousState","action","CLEAR_ACCOUNTS_LIST_STORAGE","assign","UPDATE_ACCOUNTS_COLUMNS","GET_ACCOUNTS_SETTINGS","GET_ACCOUNTS_LIST","takeEvery","loadingAccountsListData","put","handleErrorAction","loadingFilterSettings","getAccountsFilterSettings","getAccountsList","workerGetMerchantsSettings","workerGetMerchantsList","merchants","loadMerchantsListAction","LOAD_MERCHANTS_LIST","loadMerchantsSettingsAction","LOAD_MERCHANTS_SETTINGS","CLEAR_MERCHANTS_LIST_STORAGE","GET_MERCHANTS_LIST","GET_MERCHANTS_SETTINGS","loadingSettings","loadingMerchantsList","getMerchantsFilterSettings","getMerchantsList","workerGetOrder","loadOrderAction","orderData","LOAD_ORDER","CLEAR_ORDER_STORAGE","GET_ORDER","loadingOrder","orderId","order","getOrder","OrdersColumn","OrdersColumnsLabels","AMOUNT_FROM","AMOUNT_TO","CLIENT_ORDER_ID","CURRENCY_FROM","CURRENCY_TO","INSTRUMENT","FEE_TOTAL","ORDER_ID","REJECT_REASON","STATE","STATUS","OrdersColumnsArray","OrdersTable","viewBadgeForStatus","orders","merchant","OrderView","clientOrderId","instrument","Badge","variant","rejectReason","from","amount","workerGetOrdersList","workerGetOrdersSettings","loadOrdersListAction","LOAD_ORDERS_LIST","loadOrdersSettingsAction","LOAD_ORDERS_SETTINGS","CLEAR_ORDERS_LIST_STORAGE","UPDATE_ORDERS_COLUMNS","GET_ORDERS_LIST","GET_ORDERS_SETTINGS","loadingOrdersListData","getOrdersFilterSettings","getOrdersList","workerCheckAppVersion","workerClearStorage","workerHandleError","appVersion","error","messageToDisplay","HANDLE_ERROR","saveErrorAction","SAVE_ERROR","setAppVersionAction","SET_APP_VERSION","persistReducer","storage","CLEAR_STORAGE","CHECK_APP_VERSION","select","getAppVersion","CLEAR_ACCOUNT_STORAGE","general","workerGetAccount","workerGetTransaction","workerGetTransactionsList","accountData","transactionsFilter","dateFrom","dateTo","count","page","transactions","selectedTransaction","loadAccountAction","LOAD_ACCOUNT","loadTransactionsListAction","LOAD_TRANSACTIONS_LIST","GET_ACCOUNT","GET_TRANSACTION","GET_TRANSACTIONS_LIST","loadingAccount","accountId","loadingTransactionsList","getAccount","getTransactionsList","Languages","lang","en","SET_LANGUAGE","workerGetGatewaysList","getGatewaysListAction","GET_GATEWAYS_LIST","loadGatewaysListAction","gateways","LOAD_GATEWAYS_LIST","gatewaysList","CLEAR_GATEWAY_STORAGE","loadingGatewaysList","getGatewaysList","NavElement","workerUpdateNavElements","setNavElementsAction","navElements","SET_NAV_ELEMENT","UPDATE_NAV_ELEMENTS","AccountList","MerchantList","MerchantView","OrderList","ACCOUNTS","MERCHANTS","HOME","SETTINGS","ORDERS","f","workerGetMerchantLimits","workerUpdateMerchantLimit","getMerchantLimitsAction","GET_MERCHANT_LIMITS","loadMerchantLimitsAction","limits","LOAD_MERCHANT_LIMITS","CLEAR_LIMITS_STORAGE","UPDATE_MERCHANT_LIMIT","loadingMerchantLimits","updatingMerchantLimit","limitData","getMerchantLimits","updateMerchantLimit","fetchNotificationTopicList","fetchSubscriptionList","createingSubscription","deletingSubscription","notificationTopicList","subscriptionList","putNotificationTopicList","topicList","PUT_NOTIFICATION_TOPIC_LIST","LOAD_NOTIFICATION_TOPIC_LIST","LOAD_SUBSCRIPTION_LIST","CREATE_SUBSCRIPTION","DELETE_SUBSCRIPTION","loadingNotificationTopicList","getNotificationTopicInfoList","loadingSubscriptionList","subsciptionList","PUT_SUBSCRIPTION_LIST","getNotificationSubscriptionList","createsSubscription","subscription","createNotificationSubscription","deletesSubscription","id","deleteNotificationSubscription","rootSaga","rootReducer","combineReducers","gateway","i18n","layout","subscriptions","all","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","persistor","persistStore","run","TransactionsTable","transaction","apiTransactionId","PaginationActivity","onClickPaginationHandler","submitPagination","countOnPage","onClickCountHandler","isItemsLengthActive","setState","countMax","activePage","maxPage","Math","ceil","listItems","i","itemsLength","styles","pagination_div","pagination_buttons","disabled","button_active","button_inactive","onClick","alt","src","button_number_selected","button_number","count_items","items_title","choose_block","item_block","item_choose","sub_menu","element","_loadAccountData","_parseQueryParamsToFilter","history","location","search","replace","getAccountAction","getTransactionsListAction","updateTransactionsFilter","newFilterData","searchParams","typeStr","dateFromStr","dateToStr","countStr","pageStr","models","ensure","Number","parseInt","params","match","prevProps","prevState","Row","Col","xs","md","Container","CRYPTO","CRYPTO_DEPOSIT","address","apiOrderUuid","network","countTransactions","mapDispatch","getTransactionAction","transactionId","ChipElement","chip_element","delete_variant","add_variant","AccountsFilter","disableActions","onChangeTagsHandler","tag","changeFilter","onChangeBalanceCondition","condition","balanceCondition","onChangeTextFieldHandler","event","charCode","target","sm","tagsSettings","TextField","fullWidth","size","placeholder","defaultValue","onKeyPress","onBlur","InputGroup","Prepend","Checkbox","aria-label","checked","onChange","Text","FilterByMerchant","onChangeMerchantInput","selectedMerchant","submitSelectedMerchant","filterMerchants","slice","onDeleteMerchantHandler","item","array","onSelectAllMerchants","isFilterMerchantsEmpty","Autocomplete","renderInput","Button","FilterByCurrency","onChangeCurrencyAutocomplete","selectedCurrency","submitSelectedCurrency","filterCurrencies","onDeleteCurrencyHandler","onSelectAllCurrencies","isFilterCurrenciesEmpty","sort","b","groupBy","option","getOptionLabel","TableColumnSettings","columnDeleteHandler","updateActiveColumns","column","labels","defaultFilter","parseQueryParamsToFilter","split","changeDataFilterHandler","filterPart","getAccountsSettingsAction","filterByParams","getAccountsListAction","Accordion","defaultActiveKey","Card","Header","Toggle","as","eventKey","Collapse","Body","updateAccountsColumnsAction","countAccounts","OverviewMerchnat","chartCountOrdersRef","React","createRef","chartTurnover","context","chartCountOrdersContext","current","getContext","Chart","title","display","tooltips","intersect","xPadding","yPadding","caretPadding","legend","maintainAspectRatio","scales","xAxes","stacked","yAxes","padding","left","right","top","bottom","chartTurnoverContext","datasets","createChartTurnover","ref","CardColumns","Img","Title","Footer","bg","text","backgroundColor","Merchant","MerchantsTable","merchantsToShow","Fragment","merchantProvider","financial","turnover","fee","startDay","date","_checkDate","setHours","endDay","lastMonth","setDate","lastYear","setMonth","dayToDate","getDate","weekToDate","monthToDate","getMonth","yearToDate","setFullYear","getFullYear","FilterByDate","chooseLazyDateHandler","changeDateHandler","dateName","clickDateFilterHandler","isDateRequired","errorHandler","utils","DateFnsUtils","Box","justifyContent","alignItems","margin","format","autoOk","KeyboardButtonProps","Link","dateUtil","nextProps","merchantsStr","currenciesStr","changeFilterDataHendler","getMerchantsSettingsAction","getMerchantsListAction","countMerchants","withdrawal","deposit","clientOrderTag","expiredAt","model","span","offset","rate","symbol","initial","exchange","href","addressExplorerUrl","rel","kind","networkFeeLevel","ListGroup","Item","txHash","txHashExplorerUrl","withdrawalId","confirmations","uri","paidStatus","depositId","downloadCSV","fileName","linkToDownload","document","createElement","style","csv","Parser","parse","dataToCSV","blob","Blob","window","createObjectURL","download","appendChild","click","removeChild","fieldsCsvForOrder","OrdersFilter","onChangeAutocompleteHandler","onChangeDateHandler","HTMLInputElement","onClickExecuteFilterHandler","onClickClearFilterHandler","cleanFilter","currencyFrom","currencyTo","cryptoAddress","onClickDownloadCsvHandler","downloadCsv","downloadCsvHandler","filterToRequest","getOrdersListForCsv","dataToCsv","fields","now","instruments","statuses","states","textAlign","ButtonGroup","sortBy","sortIn","getOrdersSettingsAction","getOrdersListAction","updateOrdersColumnsAction","countOrders","OrderWorkflow","executedFromStr","executedToStr","executedFrom","executedTo","getOrderWorkflowTicks","then","write","close","e","isShowPopUp","gatewayUuid","Form","Check","enabled","getStepContent","step","REQ_BODY_DEFAULT","StepperIntegrationFlow","_STEPS","onClickSendRequest","showWidgetHandler","paywidget","cryptopay","gate","gateUrl","gateUIPrefix","showWidget","handleNext","activeStep","handleBack","reqBody","passphrase","timestamp","signature","reqOrderBody","paymentPageUrl","alert","origin","_setUpGateUrl","stepper_integration_flow","Stepper","alternativeLabel","Step","StepLabel","sif_div_context","sif_div_title_context","sif_inner_div_context","sif_li_headers","sif_div_headers_inline","allowUnsignedRequests","sif_div_exapmle_popover","OverlayTrigger","trigger","placement","overlay","Popover","sif_popover_example","Content","sif_btn_example_popover","sif_textarea_body","rows","sif_div_btn_control","onClickClosePopUp","sif_btn_right","sif_btn_like_link","Typography","URL_VALIDATOR_CONFIG_GATEWAY","protocols","require_protocol","GatewayConstruct","_setGatewayState","find","dirtyDomain","domainWhitelist","config","callbackMethod","callbackConfig","callbackUrl","callbackCaCert","rootCertificate","onBlurDomainHandler","validator","isURL","onBlurCallbackUrlHandler","onClickAddDomainHandler","onClickDeleteDomainHandler","domain","onClickCreateGateway","createGateway","respData","isEdit","onClickGenerateSecretsGateway","changeGatewaySecrets","onClickDemoOrder","showDemoOrderPopup","onClickUpdateGateway","updateGateway","onClickCloseRespPopUp","isUUID","gateway_construct","gate_description_textarea","FormControl","Append","DropdownButton","Dropdown","onSelect","Post","Get","gate_ca_cert_textarea","gate_activity_buttons_div","gate_button","Gateway","isGatewayExists","component","General","Limits","isEditMode","instrumentName","modelName","pairName","editLimit","pair","clickEditModeHandler","pairData","clickChangeLimitHandler","clickUpdateLimitHandler","updateMerchantLimitAction","clickCancellUpdateLimitHandler","changeInputHandler","expirationSeconds","paidMinFactor","paidMinFixed","paidMaxFactor","paidMaxFixed","overpaidFactor","overpaidFixed","orderMin","orderMax","exchangeFeeFactor","exchangeFeeFixed","orderFeeFactor","orderFeeFixed","merchant_limits","colSpan","ml_td_text_center","rowSpan","ml_tr","ml_td_input","ml_td_active_input","ml_input","SubscriptionsList","handleDeleteSubscription","deleteSubscription","loadSubscriptionList","TableHead","TableRow","TableCell","TableBody","topic","trustedCACertificatePEM","color","startIcon","Delete","SubscriptionForm","validURL","str","RegExp","test","handleChange","handleTopicChange","topics","selectedTopic","selectedTopicDescription","handleCreate","trim","certificate","createSubscription","loadNotificationTopicList","minWidth","InputLabel","Select","labelId","MenuItem","TextareaAutosize","rowsMin","cols","subscption","Subscriptions","Users","Settings","pathArray","activeMenu","parsePathToActiveMenu","direction","nav_content","nav_item_active","nav_item","content","LayoutContext","State","createContext","Dispatch","actionTypes","splashScreen","refs","nextRefs","LayoutContextProvider","children","useReducer","dispatch","splashScreenRefs","splashScreenVisible","useMemo","useEffect","getElementById","classList","remove","add","timeout","setTimeout","clearTimeout","Provider","LayoutSplashScreen","visible","useContext","random","HomePage","fallback","NavbarMenu","priorityNavElements","newActiveMenu","Cookies","brand_div","Navbar","navbar_menu","expand","aria-controls","Nav","nav_link","nav_link_active","nav_link_passive","withRouter","CopyRight","footer_content","FooterLayout","Layout","footer","removeStorage","localStorage","setItem","getStorage","expiresIn","getItem","abs","saveLastLocation","lastLocation","localStorateLocations","_useLocations","indexOf","acceptLocation","expires","schedule","getLastLocation","_userLocations","pop","ErrorRender","closeErrorHandler","isActive","hideTimer","ms","err_render","hide_err_render","cl_err_render","Routes","routerHelpers","useLastLocation","userLastLocation","useSelector","auth","shallowEqual","allMessages","de","es","fr","ja","zh","I18nProvider","locale","messages","InitialLayout","_checkAppVersion","checkAppVersionAction","App","Suspense","basename","ReactDOM","render"],"mappings":"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","file":"static/js/main.2b6a75ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gateway_construct_popup\":\"GatewayConstruct_gateway_construct_popup__3kwoq\",\"cg_popup_close\":\"GatewayConstruct_cg_popup_close__A7cE0\",\"gateway_construct\":\"GatewayConstruct_gateway_construct__q6igj\",\"gate_ca_cert_textarea\":\"GatewayConstruct_gate_ca_cert_textarea__17cnm\",\"gate_description_textarea\":\"GatewayConstruct_gate_description_textarea__VbXwS\",\"gate_activity_buttons_div\":\"GatewayConstruct_gate_activity_buttons_div__3Vn7x\",\"gate_button\":\"GatewayConstruct_gate_button__3aKbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brand_div\":\"NavbarMenu_brand_div__2WTek\",\"navbar_menu\":\"NavbarMenu_navbar_menu__3PQ_A\",\"nav_link\":\"NavbarMenu_nav_link__3-4TP\",\"nav_link_active\":\"NavbarMenu_nav_link_active__2tEeA\",\"nav_link_passive\":\"NavbarMenu_nav_link_passive__2Tlv8\",\"nav_text\":\"NavbarMenu_nav_text__dX9L0\",\"dropdown_merchant\":\"NavbarMenu_dropdown_merchant__14oMs\",\"dropdown_item\":\"NavbarMenu_dropdown_item__3gHid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chip_element\":\"ChipElement_chip_element__1R6uF\",\"add_variant\":\"ChipElement_add_variant__1nyGZ\",\"delete_variant\":\"ChipElement_delete_variant__3k43u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__o4yzk\",\"context\":\"layout_context__2PnbT\",\"content\":\"layout_content__37Xaw\",\"footer\":\"layout_footer__3S5sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"merchant_limits\":\"limits_merchant_limits__1HydD\",\"ml_td_text_center\":\"limits_ml_td_text_center__1wh_o\",\"ml_td_input\":\"limits_ml_td_input__stCvV\",\"ml_input\":\"limits_ml_input__3dTcn\",\"ml_td_active_input\":\"limits_ml_td_active_input__1AcXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"err_render\":\"ErrorRender_err_render__16M2q\",\"cl_err_render\":\"ErrorRender_cl_err_render__2ixww\",\"hide_err_render\":\"ErrorRender_hide_err_render__3LX51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepper_integration_flow\":\"StepperIntegrationFlow_stepper_integration_flow__22Vi6\",\"sif_btn_close\":\"StepperIntegrationFlow_sif_btn_close__6dwkQ\",\"sif_textarea_body\":\"StepperIntegrationFlow_sif_textarea_body__3X6gH\",\"sif_div_context\":\"StepperIntegrationFlow_sif_div_context__mtQFM\",\"sif_div_title_context\":\"StepperIntegrationFlow_sif_div_title_context__Zq4Eq\",\"sif_inner_div_context\":\"StepperIntegrationFlow_sif_inner_div_context__1TXqt\",\"sif_li_headers\":\"StepperIntegrationFlow_sif_li_headers__34S2l\",\"sif_div_headers_inline\":\"StepperIntegrationFlow_sif_div_headers_inline__3mss-\",\"sif_btn_like_link\":\"StepperIntegrationFlow_sif_btn_like_link__3K_tb\",\"sif_div_exapmle_popover\":\"StepperIntegrationFlow_sif_div_exapmle_popover__1NXWF\",\"sif_btn_example_popover\":\"StepperIntegrationFlow_sif_btn_example_popover__1k0yq\",\"sif_div_btn_control\":\"StepperIntegrationFlow_sif_div_btn_control__37Nrl\",\"sif_btn_right\":\"StepperIntegrationFlow_sif_btn_right__R7ulE\",\"sif_popover_example\":\"StepperIntegrationFlow_sif_popover_example__1cpee\",\"sif_textarea_example\":\"StepperIntegrationFlow_sif_textarea_example__1gVNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_content\":\"FooterLayout_footer_content__1V4d0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination_div\":\"PaginationActivity_pagination_div__3rZEx\",\"pagination_buttons\":\"PaginationActivity_pagination_buttons__1MOkz\",\"button_number\":\"PaginationActivity_button_number__T2mS_\",\"button_number_selected\":\"PaginationActivity_button_number_selected__2rWWs\",\"button_inactive\":\"PaginationActivity_button_inactive__2EMAC\",\"button_active\":\"PaginationActivity_button_active__3PyLZ\",\"count_items\":\"PaginationActivity_count_items__p3Trd\",\"items_title\":\"PaginationActivity_items_title__3JLI2\",\"choose_block\":\"PaginationActivity_choose_block__15OPY\",\"item_block\":\"PaginationActivity_item_block__2vKG8\",\"item_choose\":\"PaginationActivity_item_choose__3rBRP\",\"value\":\"PaginationActivity_value__3a4T9\",\"active\":\"PaginationActivity_active__TWbWZ\",\"sub_menu\":\"PaginationActivity_sub_menu__3oMKv\",\"element\":\"PaginationActivity_element__7PqXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"direction\":\"settings_direction__2XA14\",\"nav_content\":\"settings_nav_content__HWAFB\",\"nav_item\":\"settings_nav_item__3eNrR\",\"nav_item_active\":\"settings_nav_item_active__j6Qkt\",\"content\":\"settings_content__ijhJQ\"};","export function parseObjectToQueryParams(object: any): string {\n\tconst urlSearchParams = new URLSearchParams();\n\tfor (const key in object) {\n\t\tif (object.hasOwnProperty(key)) {\n\t\t\tconst value = object[key];\n\t\t\tif (value !== null && value !== undefined) {\n\t\t\t\tif (value instanceof Date) {\n\t\t\t\t\turlSearchParams.set(key, value.toISOString());\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tif (value.length > 0) {\n\t\t\t\t\t\turlSearchParams.set(key, value.join(\",\"));\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== \"\") {\n\t\t\t\t\turlSearchParams.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst escapedSearchPath: string = urlSearchParams.toString();\n\treturn escapedSearchPath;\n}\n\nexport function convertCurrenciesForAutocomplite(currencies: Array<string>): Array<CurrencyPriority> {\n\tlet result: Array<CurrencyPriority> = [];\n\tfor (const currency of currencies) {\n\t\tif (currenciesPriorityDict[currency]) {\n\t\t\tresult.push(currenciesPriorityDict[currency]);\n\t\t} else {\n\t\t\tconsole.warn(`Unknown currency ${currency}. Please add it to \"currenciesPriorityDict\".`);\n\t\t\tresult.push({\n\t\t\t\ttype: \"UNKNOWN\",\n\t\t\t\tvalue: currency,\n\t\t\t\tpriority: 101\n\t\t\t});\n\t\t}\n\n\t}\n\treturn result;\n}\nexport interface CurrencyPriority {\n\ttype: string;\n\tvalue: string;\n\tpriority: number;\n}\nexport const currenciesPriorityDict: {\n\t[currency: string]: CurrencyPriority\n} = {\n\t// for fiat currencies use priority < 10 (first in Autocomplite)\n\tUSD: {\n\t\ttype: \"FIAT\",\n\t\tvalue: \"USD\",\n\t\tpriority: 1\n\t},\n\tEUR: {\n\t\ttype: \"FIAT\",\n\t\tvalue: \"EUR\",\n\t\tpriority: 2\n\t},\n\tGBP: {\n\t\ttype: \"FIAT\",\n\t\tvalue: \"GBP\",\n\t\tpriority: 3\n\t},\n\tRUB: {\n\t\ttype: \"FIAT\",\n\t\tvalue: \"RUB\",\n\t\tpriority: 4\n\t},\n\t// for crypto currencies use 10 < priority < 100\n\tATOM: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"ATOM\",\n\t\tpriority: 100\n\t},\n\tADA: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"ADA\",\n\t\tpriority: 100\n\t},\n\tBAT: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"BAT\",\n\t\tpriority: 100\n\t},\n\tBCH: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"BCH\",\n\t\tpriority: 12\n\t},\n\tBTC: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"BTC\",\n\t\tpriority: 10\n\t},\n\tBTT: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"BTT\",\n\t\tpriority: 100\n\t},\n\tDASH: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"DASH\",\n\t\tpriority: 100\n\t},\n\tETH: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"ETH\",\n\t\tpriority: 11\n\t},\n\tGAS: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"GAS\",\n\t\tpriority: 100\n\t},\n\tLTC: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"LTC\",\n\t\tpriority: 15\n\t},\n\tMHC: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"MHC\",\n\t\tpriority: 40\n\t},\n\tNEO: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"NEO\",\n\t\tpriority: 41\n\t},\n\tONG: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"ONG\",\n\t\tpriority: 51\n\t},\n\tONT: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"ONT\",\n\t\tpriority: 50\n\t},\n\tTRX: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"TRX\",\n\t\tpriority: 20\n\t},\n\tTST: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"TST\",\n\t\tpriority: 80\n\t},\n\tUSDT: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"USDT\",\n\t\tpriority: 15\n\t},\n\tXLM: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"XLM\",\n\t\tpriority: 19\n\t},\n\tXTZ: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"XTZ\",\n\t\tpriority: 99\n\t},\n\tXRP: {\n\t\ttype: \"CRYPTO\",\n\t\tvalue: \"XRP\",\n\t\tpriority: 18\n\t}\n};\n","\nimport { Typifier } from \"@cryptopay/dashboard-contract\";\nimport { InnerError } from \"@cexiolabs/cryptopay.errors\";\nimport * as t from \"io-ts\";\n\nexport async function apicall<E extends t.Any, D extends t.Any>(\n\tmethod: string, url: URL,\n\tbody?: t.TypeOf<E>, decoder?: D,\n\tencoder?: E,\n\toverrideInit?: {\n\t\treadonly credentials?: RequestCredentials;\n\t\treadonly headers?: { readonly [key: string]: string };\n\t}\n\n): Promise<t.TypeOf<D>> {\n\n\tconst urlStr: string = url.toString();\n\n\ttry {\n\t\tlet req: string | null = null;\n\n\t\tif (body) {\n\t\t\tif (encoder) {\n\t\t\t\treq = JSON.stringify(Typifier.decode(encoder, body, \"body\"));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treq = JSON.stringify(body);\n\t\t\t}\n\t\t}\n\n\t\tconst headers: { [key: string]: string } = {};\n\t\theaders[\"Content-Type\"] = \"application/json\";\n\t\tif (overrideInit !== undefined && overrideInit.headers !== undefined) {\n\t\t\tfor (const key of Object.keys(overrideInit.headers)) {\n\t\t\t\tconst value: string = overrideInit.headers[key];\n\t\t\t\theaders[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tconst fetchInit: RequestInit = {\n\t\t\tcache: 'no-cache',\n\t\t\t//credentials: 'omit',\n\t\t\tcredentials: 'include',\n\t\t\tmode: \"cors\",\n\t\t\tredirect: \"follow\",\n\t\t\tmethod,\n\t\t\theaders\n\t\t};\n\n\t\tif (overrideInit !== undefined && overrideInit.credentials !== undefined) {\n\t\t\tfetchInit.credentials = overrideInit.credentials;\n\t\t}\n\n\t\tfetchInit.body = req;\n\n\t\tconst response = await fetch(urlStr, fetchInit);\n\n\t\tif (response.status < 200 || response.status > 299) {\n\t\t\tthrow new HttpStatusError(`Status ${response.status}: ${response.statusText}`, response.status, response.statusText);\n\t\t}\n\n\t\tconst contentType = response.headers.get(\"Content-Type\");\n\t\tif (contentType && contentType.includes(\"application/json\")) {\n\t\t\tconst rsp = await response.json();\n\n\t\t\tif (!decoder) {\n\t\t\t\treturn rsp;\n\t\t\t}\n\t\t\treturn Typifier.decode(decoder, rsp, \"body\");\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\n\t} catch (e) {\n\t\tthrow new ApiCallError(undefined, e, urlStr, method);\n\t}\n}\n\nexport class HttpStatusError extends Error {\n\n\tpublic readonly code: number;\n\tpublic readonly reason?: string;\n\n\tconstructor(message: string, code: number, reason?: string) {\n\t\tsuper(message);\n\t\tthis.code = code;\n\t\tthis.reason = reason;\n\t}\n}\n\nexport class ApiCallError extends InnerError {\n\n\tpublic readonly url?: string;\n\tpublic readonly method?: string;\n\n\tconstructor(message?: string, inner?: Error, url?: string, method?: string) {\n\n\t\tlet msg = `Api call ${url ? url : \"\"} ${method ? `(${method})` : \"\"} failed.`;\n\n\t\tif (message) {\n\t\t\tmsg += \" \" + message;\n\t\t}\n\t\telse {\n\t\t\tif (inner) {\n\t\t\t\tmsg += \" \" + inner.message;\n\t\t\t}\n\t\t}\n\n\t\tsuper(msg, inner);\n\n\t\tthis.url = url;\n\t\tthis.method = method;\n\t}\n}\n\n","import * as helper from \"../utils/helper\";\nimport {\n\tAccount,\n\tAccounts,\n\tCreateGatewayRequest,\n\tCreateGatewayResponse,\n\tGatewaysList,\n\tFilterAccounts,\n\tFilterMerchants,\n\tFilterOrderWorkflowTick,\n\tFilterOrders,\n\tFilterSettingsAccounts,\n\tFilterSettingsMerchants,\n\tFilterSettingsOrders,\n\tFilterTransactions,\n\tMerchantLimits,\n\tMerchants,\n\tOrder,\n\tOrderWorkflowTicks,\n\tOrdersListCsv,\n\tOrders,\n\tSubscription,\n\tSubscriptionData,\n\tSubscriptionList,\n\tSubscriptionWithSecret,\n\tTopicInfoList,\n\tTransactions,\n\tUpdateGatewayRequest,\n\tUpdateLimitData, IDashboardApi, MerchantChildren\n} from \"@cryptopay/dashboard-contract\";\n\nimport { DashboardApiBase } from \"./DashboardApiBase\";\n\nexport class DashboardApi extends DashboardApiBase implements IDashboardApi {\n\n\tpublic async changeGatewaySecrets(\n\t\tgatewayId: string\n\t): Promise<CreateGatewayResponse> {\n\t\treturn await this.authCall(\n\t\t\t\"POST\",\n\t\t\t`dashboard/settings/gateway/${gatewayId}/secrets`,\n\t\t\tundefined,\n\t\t\tCreateGatewayResponse\n\t\t);\n\t}\n\n\tpublic async createGateway(\n\t\tbody: CreateGatewayRequest\n\t): Promise<CreateGatewayResponse> {\n\t\treturn this.authCall(\n\t\t\t\"POST\",\n\t\t\t`dashboard/settings/gateway`,\n\t\t\tbody,\n\t\t\tCreateGatewayResponse\n\t\t);\n\t}\n\n\tpublic async createNotificationSubscription(\n\t\tdata: SubscriptionData\n\t): Promise<SubscriptionWithSecret> {\n\t\treturn await this.authCall(\n\t\t\t\"POST\",\n\t\t\t`dashboard/notification/subscription`,\n\t\t\tdata,\n\t\t\tSubscriptionWithSecret,\n\t\t\tSubscriptionData\n\t\t);\n\t}\n\n\tpublic async deleteNotificationSubscription(\n\t\tsubscriptionId: Subscription[\"subscriptionId\"]\n\t): Promise<void> {\n\t\tawait this.authCall(\n\t\t\t\"DELETE\",\n\t\t\t`dashboard/notification/subscription/${subscriptionId}`,\n\t\t\tundefined,\n\t\t\tundefined\n\t\t);\n\t}\n\n\tpublic async getAccount(\n\t\tapiAccountId: string\n\t): Promise<Account> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/account/${apiAccountId}`,\n\t\t\tundefined,\n\t\t\tAccount\n\t\t);\n\t}\n\n\tpublic async getAccountsFilterSettings(): Promise<FilterSettingsAccounts> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/account/filter-settings`,\n\t\t\tundefined,\n\t\t\tFilterSettingsAccounts\n\t\t);\n\t}\n\n\tpublic async getAccountsList(\n\t\tfilter: FilterAccounts\n\t): Promise<Accounts> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/account?${helper.parseObjectToQueryParams(filter)}`,\n\t\t\tundefined,\n\t\t\tAccounts\n\t\t);\n\t}\n\n\tpublic async getGatewaysList(): Promise<GatewaysList> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/settings/gateway`,\n\t\t\tundefined,\n\t\t\tGatewaysList\n\t\t);\n\t}\n\n\tpublic async getAuthMerchantChildren(): Promise<MerchantChildren> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/merchant/children`,\n\t\t\tundefined,\n\t\t\tMerchantChildren\n\t\t);\n\t}\n\n\tpublic async getMerchantLimits(): Promise<MerchantLimits> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/settings/limit`,\n\t\t\tundefined,\n\t\t\tMerchantLimits\n\t\t);\n\t}\n\n\tpublic async getMerchantsFilterSettings(): Promise<FilterSettingsMerchants> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/merchant/filter-settings`,\n\t\t\tundefined,\n\t\t\tFilterSettingsMerchants\n\t\t);\n\t}\n\n\tpublic async getMerchantsList(\n\t\tfilter: FilterMerchants\n\t): Promise<Merchants> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/merchant?${helper.parseObjectToQueryParams(filter)}`,\n\t\t\tundefined,\n\t\t\tMerchants\n\t\t);\n\t}\n\n\tpublic async getNotificationTopicInfoList(): Promise<TopicInfoList> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/notification/topic`,\n\t\t\tundefined,\n\t\t\tTopicInfoList\n\t\t);\n\t}\n\n\tpublic async getNotificationSubscriptionList(): Promise<SubscriptionList> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/notification/subscription`,\n\t\t\tundefined,\n\t\t\tSubscriptionList\n\t\t);\n\t}\n\n\tpublic async getOrder(\n\t\tapiOrderId: string\n\t): Promise<Order> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/order/${apiOrderId}`,\n\t\t\tundefined,\n\t\t\tOrder\n\t\t);\n\t}\n\n\tpublic async getOrderWorkflowTicks(\n\t\tapiOrderId: string,\n\t\tfilter: FilterOrderWorkflowTick\n\t): Promise<OrderWorkflowTicks> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/order/${apiOrderId}/workflow?${helper.parseObjectToQueryParams(filter)}`,\n\t\t\tundefined,\n\t\t\tOrderWorkflowTicks\n\t\t);\n\t}\n\n\tpublic async getOrdersList(\n\t\tfilter: FilterOrders\n\t): Promise<Orders> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/order?${helper.parseObjectToQueryParams(filter)}`,\n\t\t\tundefined,\n\t\t\tOrders\n\t\t);\n\t}\n\n\tpublic async getOrdersFilterSettings(): Promise<FilterSettingsOrders> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/order/filter-settings`,\n\t\t\tundefined,\n\t\t\tFilterSettingsOrders\n\t\t);\n\t}\n\n\tpublic async getOrdersListForCsv(\n\t\tfilter: FilterOrders\n\t): Promise<OrdersListCsv> {\n\t\treturn this.authCall(\"GET\",\n\t\t\t`dashboard/order/download?${helper.parseObjectToQueryParams(filter)}`,\n\t\t\tundefined,\n\t\t\tOrdersListCsv\n\t\t);\n\t}\n\n\tpublic async getTransactionsList(\n\t\tapiAccountId: string,\n\t\tfilter: FilterTransactions\n\t): Promise<Transactions> {\n\t\treturn this.authCall(\n\t\t\t\"GET\",\n\t\t\t`dashboard/account/${apiAccountId}/transaction?${helper.parseObjectToQueryParams(filter)}`,\n\t\t\tundefined,\n\t\t\tTransactions\n\t\t);\n\t}\n\n\tpublic async updateGateway(\n\t\tgatewayId: string,\n\t\tbody: UpdateGatewayRequest\n\t): Promise<void> {\n\t\treturn this.authCall(\n\t\t\t\"PUT\",\n\t\t\t`dashboard/settings/gateway/${gatewayId}`,\n\t\t\tbody\n\t\t);\n\t}\n\n\tpublic async updateMerchantLimit(\n\t\tlimit: UpdateLimitData\n\t): Promise<MerchantLimits> {\n\t\treturn this.authCall(\n\t\t\t\"PUT\",\n\t\t\t`dashboard/settings/limit`,\n\t\t\tlimit\n\t\t);\n\t}\n}\n","import _ from \"lodash\";\nimport Cookies from \"js-cookie\";\nimport * as t from \"io-ts\";\n\nimport { Typifier } from \"@cryptopay/dashboard-contract\";\nimport { ApiClient, ApiClientOptions } from \"./ApiClient\";\nimport {\n\tAuthTokens, AuthRequest, AuthResponse,\n\tAuthResult, AuthChallengeRequest, AuthChallengeKind\n} from \"@cryptopay/dashboard-contract\";\n\nexport class DashboardApiBase extends ApiClient {\n\n\t// private readonly _authProvider: AuthProvider | null;\n\t// private readonly _onAuthorized: AuthorizedHandler | null;\n\n\tpublic constructor(options: ApiClientOptions\n\t\t// , authProvider?: AuthProvider, onAuthorized?: AuthorizedHandler\n\t) {\n\t\tsuper(options);\n\t\t// this._authProvider = authProvider !== undefined ? authProvider : null;\n\t\t// this._onAuthorized = onAuthorized !== undefined ? onAuthorized : null;\n\t}\n\n\t// protected async tryReAuth(): Promise<boolean> {\n\n\t// \tif (this._authProvider === null) {\n\t// \t\treturn false;\n\t// \t}\n\n\t// \tconst authData = this._authProvider();\n\n\t// \tif (!authData || !authData.tokens.refreshToken) {\n\t// \t\treturn false;\n\t// \t}\n\n\t// \ttry {\n\t// \t\tconst result = await this.login({ refreshToken: authData.tokens.refreshToken, username: undefined, password: undefined });\n\t// \t\treturn !!result.result;\n\t// \t} catch (e) {\n\t// \t\tconsole.error(e);\n\t// \t\t//TODO: Handle this exception somehow\n\t// \t\treturn false;\n\t// \t}\n\t// }\n\n\tprotected async setAuthHeaders(headers: { [key: string]: string }) {\n\n\t\t// if (this._authProvider === null) {\n\t\t// \tthrow new Error(\"Auth data loader should be provided for authorized calls.\");\n\t\t// }\n\n\t\t// const authData = this._authProvider();\n\n\t\t// if (!authData) {\n\t\t// \treturn;\n\t\t// }\n\n\t\t// const impersonateMerchant: string | undefined = Cookies.get(\"XSRF-TOKEN\");\n\t\t// if (impersonateMerchant === undefined) {\n\t\t// \tthrow new Error(\"Cannot get cookie XSRF-TOKEN.\");\n\t\t// }\n\t\t// headers[\"CP-DASHBOARD-XSRF-TOKEN\"] = impersonateMerchant;\n\t}\n\n\t//TODO: Should be used for query params generation\n\tpublic toQueryParams<E extends t.Any>(encoder: E, data: t.TypeOf<E>): string {\n\n\t\tconst encoded = Typifier.encode(encoder, data, \"query\");\n\n\t\tconst query = _.chain(encoded)\n\t\t\t.toPairs()\n\t\t\t.map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v.toString())}`)\n\t\t\t.value()\n\t\t\t.join(\"&\");\n\n\t\treturn query;\n\t}\n\n\t// public async login(request: AuthRequest): Promise<AuthResponse> {\n\n\t// \ttry {\n\t// \t\tconst result = await this.call(\"POST\", \"dashboard/login\",\n\t// \t\t\trequest, AuthResponse, AuthRequest,\n\t// \t\t\tObject.freeze({ credentials: \"include\" })\n\t// \t\t);\n\n\t// \t\tif (this._onAuthorized !== null) {\n\t// \t\t\tif (result.result) {\n\t// \t\t\t\tawait this._onAuthorized(result.result);\n\t// \t\t\t} else {\n\t// \t\t\t\t// Case when challenges arrived while authorization.\n\t// \t\t\t\t// Previous login should be cleaned\n\t// \t\t\t\tawait this._onAuthorized(null);\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\treturn result;\n\t// \t} catch (e) {\n\n\t// \t\tif (this._onAuthorized !== null) {\n\t// \t\t\tthis._onAuthorized(null);\n\t// \t\t}\n\t// \t\tthrow e;\n\t// \t}\n\t// }\n\n\t// public async changePassword(session: string, username: string, password: string): Promise<AuthResponse> {\n\n\t// \ttry {\n\t// \t\tconst request: AuthChallengeRequest = {\n\t// \t\t\tsession,\n\t// \t\t\tchallenge: {\n\t// \t\t\t\tkind: AuthChallengeKind.NewPassword,\n\t// \t\t\t\tusername: username,\n\t// \t\t\t\tnewPassword: password\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tconst result = await this.call(\"POST\", \"dashboard/challenge\", request, AuthResponse, AuthChallengeRequest);\n\n\t// \t\tif (this._onAuthorized !== null) {\n\t// \t\t\tif (result.result) {\n\t// \t\t\t\tthis._onAuthorized(result.result);\n\t// \t\t\t} else {\n\t// \t\t\t\t// Case when challenges arrived while authorization.\n\t// \t\t\t\t// Previous login should be cleaned\n\t// \t\t\t\tthis._onAuthorized(null);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\treturn result;\n\t// \t} catch (e) {\n\n\t// \t\tif (this._onAuthorized !== null) {\n\t// \t\t\tthis._onAuthorized(null);\n\t// \t\t}\n\n\t// \t\tthrow e;\n\t// \t}\n\t// }\n}\n\n//export type AuthProvider = () => { tokens: AuthTokens } | null;\nexport type AuthorizedHandler = (data: AuthResult | null) => Promise<void>;","import { apicall, HttpStatusError, ApiCallError } from \"./ApiCall\";\nimport * as t from \"io-ts\";\n\nexport abstract class ApiClient {\n\n\tprivate readonly _options: ApiClientOptions;\n\n\tpublic get options(): ApiClientOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic constructor(options: ApiClientOptions) {\n\n\t\tthis._options = options;\n\t}\n\n\t// protected abstract async tryReAuth(): Promise<boolean>\n\n\tprotected abstract setAuthHeaders(headers: { [key: string]: string }): void\n\n\tpublic call<E extends t.Any, D extends t.Any>(method: string, path: string, body?: t.TypeOf<E>, decoder?: D, encoder?: E, init?: {\n\t\treadonly credentials?: RequestCredentials;\n\t\treadonly headers?: { readonly [key: string]: string };\n\t}): Promise<t.TypeOf<D>> {\n\n\t\tconst apiUrl: URL = new URL(path, this.options.apiBaseUrl);\n\n\t\treturn apicall(method, apiUrl, body, decoder, encoder, init);\n\t}\n\n\tpublic async authCall<E extends t.Any, D extends t.Any>(\n\t\tmethod: string,\n\t\tpath: string,\n\t\tbody?: t.TypeOf<E>,\n\t\tdecoder?: D,\n\t\tencoder?: E,\n\t\toverrideInit?: {\n\t\t\treadonly credentials?: RequestCredentials;\n\t\t\treadonly headers?: { readonly [key: string]: string };\n\t\t}\n\t): Promise<D extends undefined ? void : t.TypeOf<D>> {\n\n\t\tconst init: {\n\t\t\tcredentials?: RequestCredentials;\n\t\t\theaders: { [key: string]: string };\n\t\t} = overrideInit !== undefined\n\t\t\t\t? { ...overrideInit, headers: { ...overrideInit.headers } }\n\t\t\t\t: { headers: {} };\n\n\t\ttry {\n\n\t\t\tthis.setAuthHeaders(init.headers);\n\t\t\treturn await this.call(method, path, body, decoder, encoder, init);\n\n\t\t} catch (mainerr) {\n\t\t\ttry {\n\t\t\t\tif (mainerr instanceof ApiCallError && mainerr.innerError instanceof HttpStatusError && mainerr.innerError.code === 401) {\n\t\t\t\t\t// Looks like auth error appears, trying to reauthorize silently\n\t\t\t\t\t// const result = await this.tryReAuth();\n\t\t\t\t\t// if (!result) {\n\t\t\t\t\t\tthrow mainerr;\n\t\t\t\t\t// }\n\t\t\t\t} else {\n\t\t\t\t\tthrow mainerr;\n\t\t\t\t}\n\n\t\t\t\t// this.setAuthHeaders(init.headers);\n\t\t\t\t// return await this.call(method, path, body, decoder, encoder, init);\n\t\t\t} catch (mainerrReconect) {\n\t\t\t\tthrow mainerr;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface ApiClientOptions {\n\tapiBaseUrl: URL;\n}\n","function ParseUrlFromEnvs(envName: string): URL {\n\tconst urlStr: string | undefined = process.env[envName];\n\tif (urlStr === undefined) { throw new Error(`An ${envName} is not set`); }\n\tconst url = new URL(urlStr);\n\tif (url.pathname.endsWith(\"/\")) {\n\t\treturn url;\n\t} else {\n\t\tconst normalizedUrl: URL = new URL(urlStr + \"/\");\n\t\treturn normalizedUrl;\n\t}\n}\n\nexport const CEXPAY_PROCESSING_V2_API_URL: URL = ParseUrlFromEnvs(\"REACT_APP_CEXPAY_PROCESSING_V2_API_URL\");\n\nconsole.log(\"CEXPAY_PROCESSING_V2_API_URL\", CEXPAY_PROCESSING_V2_API_URL);\n","import { DashboardApi } from \"./DashboardApi\";\nimport { HttpStatusError } from \"./ApiCall\";\n// import * as auth from \"../store/ducks/auth.duck\";\nimport store from \"../store/store\"\nimport { AuthRequest, AuthResponse, AuthResult, IDashboardApi } from \"@cryptopay/dashboard-contract\";\n\nimport { CEXPAY_PROCESSING_V2_API_URL } from \"../../constants\";\n\n//TODO: Read from config\nexport const cps: IDashboardApi = new DashboardApi(\n\t{\n\t\tapiBaseUrl: resolveApiHost(),\n\t},\n\t// () => {\n\t// \t// const authData = store.getState().auth;\n\t// \t// if (!authData.tokens) {\n\t// \t\treturn null;\n\t// \t// }\n\n\t// \t// //const impersonateMerchant = \n\n\t// \t// return {\n\t// \t// \ttokens: authData.tokens\n\t// \t// }\n\t// },\n\t// async (data: AuthResult | null) => {\n\n\t// \t// if (!data) {\n\t// \t// \tconsole.info(\"Authorization recalled by DashboardApi.\");\n\t// \t// \tstore.dispatch({ type: auth.ActionTypes.LOGOUT, data: { error: \"Authorization recalled by DashboardApi.\" } });\n\t// \t// \treturn;\n\t// \t// }\n\n\t// \t// const oldAuth = store.getState().auth;\n\n\t// \t// if (oldAuth.tokens) {\n\t// \t// \tconsole.info(\"Authorization refreshed.\");\n\t// \t// \tstore.dispatch({ type: auth.ActionTypes.AUTHORIZATION, payload: { data } });\n\t// \t// } else {\n\t// \t// \tconsole.info(\"Authorization success.\");\n\t// \t// \tstore.dispatch({ type: auth.ActionTypes.AUTHORIZATION, payload: { data } });\n\t// \t// }\n\t// }\n);\n\nexport function getHost() { return (cps as DashboardApi).options.apiBaseUrl; }\n\nfunction resolveApiHost(): URL {\n\treturn CEXPAY_PROCESSING_V2_API_URL;\n\n\t\n\t// const windowOrigin: URL = new URL(window.location.origin);\n\t// const windowOriginHostname: string = windowOrigin.hostname;\n\n\n\n\t// switch (windowOriginHostname) {\n\t// \tcase \"localhost\":\n\t// \tcase \"127.0.0.1\":\n\t// \tcase \"::1\":\n\t// \t\treturn new URL(\"http://127.0.0.1:38080/v2/\");\n\t// \tcase \"board-evolution-cexpay.dev.kube\":\n\t// \t\treturn new URL(\"https://api-evolution-cexpay.dev.kube/v2/\");\n\t// \tcase \"board-presentation-cexpay.dev.kube\":\n\t// \t\treturn new URL(\"https://api-presentation-cexpay.dev.kube/v2/\");\n\t// \tcase \"board.pay-cex-test.net\":\n\t// \t\treturn new URL(\"https://api.pay-cex-test.net/v2/\");\n\t// \tcase \"board.cexpay.io\":\n\t// \t\treturn new URL(\"https://api.cexpay.io/v2/\");\n\t// \tdefault:\n\t// \t\treturn new URL(\"/v2/\", windowOrigin);\n\t// }\n}\n\n// export async function performLogin(request: AuthRequest): Promise<AuthResponse> {\n// \ttry {\n// \t\tconst response = await (cps as DashboardApi).login(request);\n\n// \t\t//if (!response.result) {\n// \t\t//\tthrow new Error(\"Server respons with authorization challenge. Not supported.\");\n// \t\t//}\n\n// \t\treturn response;\n\n// \t} catch (e) {\n\n// \t\tlet i18n = \"GENERAL.ERROR\";\n\n// \t\tif (e.innerError && e.innerError.message === \"Failed to fetch\") {\n// \t\t\ti18n = \"GENERAL.ERROR.NO.CONNECTION\";\n// \t\t}\n\n// \t\tif (e.innerError instanceof HttpStatusError\n// \t\t\t&& e.innerError.code === 400\n// \t\t\t&& e.innerError.reason === \"Incorrect username or password.\") {\n// \t\t\ti18n = \"AUTH.VALIDATION.INVALID_LOGIN\";\n// \t\t}\n\n// \t\t//TODO: Improve interaction \n// \t\te.i18n = i18n;\n// \t\tthrow e;\n// \t}\n// }\n\n// export async function changePassword(session: string, username: string, password: string): Promise<AuthResponse> {\n// \ttry {\n// \t\tconst response = await (cps as DashboardApi).changePassword(session, username, password);\n\n// \t\tif (!response.result) {\n// \t\t\tthrow new Error(\"Server respons with change password challenge. Not supported.\");\n// \t\t}\n\n// \t\treturn response;\n\n// \t} catch (e) {\n\n// \t\tlet i18n = \"GENERAL.ERROR\";\n\n// \t\tif (e.innerError && e.innerError.message === \"Failed to fetch\") {\n// \t\t\ti18n = \"GENERAL.ERROR.NO.CONNECTION\";\n// \t\t}\n\n// \t\tif (e.innerError instanceof HttpStatusError\n// \t\t\t&& e.innerError.code === 400\n// \t\t\t&& e.innerError.reason === \"Incorrect username or password.\") {\n// \t\t\ti18n = \"AUTH.VALIDATION.INVALID_LOGIN\";\n// \t\t}\n\n// \t\t//TODO: Improve interaction \n// \t\te.i18n = i18n;\n// \t\tthrow e;\n// \t}\n// }\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { AccountsData } from \"@cryptopay/dashboard-contract/models\";\nimport LinkPermissions from \"../../../common/components/LinkPermissions\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\n\nexport enum AccountsColumn {\n\tACCOUNT_ID = \"ACCOUNT_ID\",\n\tBALANCE = \"BALANCE\",\n\tCLIENT_ACCOUNT_ID = \"CLIENT_ACCOUNT_ID\",\n\tCREATED_AT = \"CREATED_AT\",\n\tCURRENCY = \"CURRENCY\",\n\tDEPOSIT_ADDRESS = \"DEPOSIT_ADDRESS\",\n\t//INCOME = \"INCOME\",\n\tDESCRIPTION = \"DESCRIPTION\",\n\tMERCHANT = \"MERCHANT\",\n\tNAME = \"NAME\",\n\t//ORDER_ID = \"ORDER_ID\",\n\t//OUTCOME = \"OUTCOME\",\n\tTAGS = \"TAGS\",\n\t//TRANSACTIONS = \"TRANSACTIONS\",\t\n\tUPDATED_AT = \"UPDATED_AT\"\n}\n\nexport const AccountsColumnsLabels: { [key in AccountsColumn]: string } = {\n\tNAME: \"Name\",\n\tACCOUNT_ID: \"Account Id\",\n\tCLIENT_ACCOUNT_ID: \"Client Account Id\",\n\t//ORDER_ID: \"Order Id\",\n\tCURRENCY: \"Currency\",\n\tDESCRIPTION: \"Description\",\n\t//INCOME: \"Income\",\n\t//OUTCOME: \"Outcome\",\n\tBALANCE: \"Balance\",\n\t//TRANSACTIONS: \"Transactions\",\n\tMERCHANT: \"Merchant\",\n\tTAGS: \"Tags\",\n\tDEPOSIT_ADDRESS: \"Deposit Address\",\n\tCREATED_AT: \"Created At\",\n\tUPDATED_AT: \"Updated At\"\n}\n\nexport const AccountsColumnsArray: Array<AccountsColumn> = [AccountsColumn.ACCOUNT_ID, AccountsColumn.CLIENT_ACCOUNT_ID,\nAccountsColumn.NAME, AccountsColumn.CURRENCY, AccountsColumn.DESCRIPTION,\nAccountsColumn.MERCHANT, AccountsColumn.TAGS, AccountsColumn.BALANCE,\nAccountsColumn.CREATED_AT, AccountsColumn.UPDATED_AT,\nAccountsColumn.DEPOSIT_ADDRESS\n];\n\ntype State = {\n}\n\ntype Props = {\n\taccounts: Array<AccountsData>;\n\tcolumns: Array<string>;\n\tpermissions: DashboardPermission[];\n}\n\nexport default class AccountsTable extends Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<Table responsive className=\"table-hover text-center\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.columns.map((name, index) => {\n\t\t\t\t\t\t\t\treturn (<th key={name}>{AccountsColumnsLabels[name as AccountsColumn]}</th>);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.accounts.map((account, index) => {\n\t\t\t\t\t\t\treturn (<tr key={`account-${account.apiAccountId}-${index}`}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.columns.map((name, index) => {\n\t\t\t\t\t\t\t\t\t\tswitch (name) {\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.ACCOUNT_ID:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td key={`${name}-${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LinkPermissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission={DashboardPermission.AccountView}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${account.apiAccountId}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={account.apiAccountId !== null ? account.apiAccountId : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.BALANCE:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.balance}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.CLIENT_ACCOUNT_ID:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.clientAccountId}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.CREATED_AT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{new Date(account.createdAt).toISOString()}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.CURRENCY:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.currency}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.DEPOSIT_ADDRESS:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.depositAddress}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.DESCRIPTION:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.description}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.MERCHANT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.merchantName}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.NAME:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.accountName}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.TAGS:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.tags.toString()}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase AccountsColumn.UPDATED_AT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{account.updatedAt ? new Date(account.updatedAt).toISOString() : \"\"}</td>);\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(`Cann't find view for column ${name}`);\n\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</tr>)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n\n","import React, { Component, Fragment } from \"react\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\nimport { Link } from \"react-router-dom\";\nimport { RootState } from \"../../../store/rootDuck\";\nimport { connect } from \"react-redux\";\n\ntype State = {\n};\n\ntype Props = {\n\tpermissions: Array<DashboardPermission>;\n\tpermission: DashboardPermission;\n\tto: string;\n\tlabel: string;\n}\n\nexport class LinkPermissions extends Component<Props, State> {\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{\n\t\t\t\t\t<Link to={this.props.to}>{this.props.label}</Link>\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tpermissions: []//state.auth.permissions,\n});\n\nconst mapDispatch = {\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(LinkPermissions);","import storage from \"redux-persist/lib/storage\";\nimport { put, call, takeEvery } from \"redux-saga/effects\";\nimport { cps } from '../../api/CryptoPayClient'\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { ColumnSettings } from \"../../pages/common/components/TableColumnSettings\";\nimport { AccountsColumn } from \"../../pages/home/accounts/components/AccountsTable\";\nimport { handleErrorAction } from \"./general.duck\";\n\n/**\n * State of Accounts\n */\nexport interface AccountsState {\n\tfilterSettings: models.FilterSettingsAccounts | null;\n\taccounts: models.Accounts | null;\n\tcolumnSettings: ColumnSettings;\n}\n\nexport const initialState: AccountsState = {\n\tfilterSettings: null,\n\taccounts: null,\n\tcolumnSettings: {\n\t\tactiveColumns: [AccountsColumn.ACCOUNT_ID, AccountsColumn.MERCHANT, AccountsColumn.CURRENCY,\n\t\t\tAccountsColumn.BALANCE, AccountsColumn.TAGS, AccountsColumn.DESCRIPTION\n\t\t]\n\t}\n}\n\n// actions types:\nexport enum ActionTypes {\n\tCLEAR_ACCOUNTS_LIST_STORAGE = \"CLEAR_ACCOUNTS_LIST_STORAGE\",\n\n\tGET_ACCOUNTS_LIST = \"GET_ACCOUNTS_LIST\",\n\tGET_ACCOUNTS_SETTINGS = \"GET_ACCOUNTS_SETTINGS\",\n\n\tLOAD_ACCOUNTS_LIST = \"LOAD_ACCOUNTS_LIST\",\n\tLOAD_ACCOUNTS_SETTINGS = \"LOAD_ACCOUNTS_SETTINGS\",\n\n\tUPDATE_ACCOUNTS_COLUMNS = \"UPDATE_ACCOUNTS_COLUMNS\",\n};\n\n\nexport interface ClearAccountsListStorageAction {\n\ttype: ActionTypes.CLEAR_ACCOUNTS_LIST_STORAGE;\n}\nexport function clearAccountsListStorageAction(): AccountsListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_ACCOUNTS_LIST_STORAGE\n\t}\n}\n\nexport interface GetAccountsListAction {\n\ttype: ActionTypes.GET_ACCOUNTS_LIST;\n\tpayload: { filter: models.FilterAccounts }\n}\nexport function getAccountsListAction(filter: models.FilterAccounts): AccountsListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_ACCOUNTS_LIST,\n\t\tpayload: { filter }\n\t}\n}\n\nexport interface GetAccountsSettingsAction {\n\ttype: ActionTypes.GET_ACCOUNTS_SETTINGS;\n}\nexport function getAccountsSettingsAction(): AccountsListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_ACCOUNTS_SETTINGS\n\t}\n}\n\nexport interface LoadAccountsListAction {\n\ttype: ActionTypes.LOAD_ACCOUNTS_LIST;\n\tpayload: {\n\t\taccounts: models.Accounts | null\n\t}\n}\nexport function loadAccountsListAction (accounts: models.Accounts | null): AccountsListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_ACCOUNTS_LIST,\n\t\tpayload: { accounts }\n\t}\n}\n\nexport interface LoadAccountsSettingsAction {\n\ttype: ActionTypes.LOAD_ACCOUNTS_SETTINGS;\n\tpayload: {\n\t\tsettings: models.FilterSettingsAccounts | null\n\t}\n}\nexport function loadAccountsSettingsAction (settings: models.FilterSettingsAccounts | null): AccountsListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_ACCOUNTS_SETTINGS,\n\t\tpayload: { settings }\n\t}\n}\n\nexport interface UpdateAccountsColumnsAction {\n\ttype: ActionTypes.UPDATE_ACCOUNTS_COLUMNS;\n\tpayload: {\n\t\tactiveColumns: Array<string>;\n\t}\n}\nexport function updateAccountsColumnsAction(activeColumns: Array<string>): AccountsListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.UPDATE_ACCOUNTS_COLUMNS,\n\t\tpayload: { activeColumns }\n\t}\n}\n\nexport type AccountsListActionTypes = ClearAccountsListStorageAction\n\t| GetAccountsListAction\n\t| GetAccountsSettingsAction\n\t| LoadAccountsListAction\n\t| LoadAccountsSettingsAction\n\t| UpdateAccountsColumnsAction;\n\nexport function accountsReducer(previousState = initialState, action: AccountsListActionTypes): AccountsState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_ACCOUNTS_LIST_STORAGE:\n\t\t\treturn initialState;\n\t\tcase ActionTypes.LOAD_ACCOUNTS_SETTINGS:\n\t\t\treturn Object.assign({}, previousState, {\n\t\t\t\tfilterSettings: action.payload.settings,\n\t\t\t});\n\t\tcase ActionTypes.LOAD_ACCOUNTS_LIST:\n\t\t\treturn Object.assign({}, previousState, {\n\t\t\t\taccounts: action.payload.accounts\n\t\t\t});\n\t\tcase ActionTypes.UPDATE_ACCOUNTS_COLUMNS:\n\t\t\treturn Object.assign({}, previousState, {\n\t\t\t\tcolumnSettings: { activeColumns: action.payload.activeColumns }\n\t\t\t});\n\t\tcase ActionTypes.GET_ACCOUNTS_SETTINGS:\n\t\tcase ActionTypes.GET_ACCOUNTS_LIST:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = accountsReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_ACCOUNTS_LIST, workerGetAccountsList);\n\n\tyield takeEvery(ActionTypes.GET_ACCOUNTS_SETTINGS, workerGetAccountsSettings);\n}\n\nexport function* workerGetAccountsList(action: GetAccountsListAction) {\n\ttry {\n\t\tconst accounts: models.Accounts = yield call(loadingAccountsListData, action.payload.filter);\n\t\tyield put(loadAccountsListAction(accounts));\n\t} catch (e) {\n\t\tyield put(loadAccountsListAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport function* workerGetAccountsSettings(action: GetAccountsSettingsAction) {\n\ttry {\n\t\tconst settings: models.FilterSettingsAccounts = yield call(loadingFilterSettings);\n\t\tyield put(loadAccountsSettingsAction(settings));\n\t} catch (e) {\n\t\tyield put(loadAccountsSettingsAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport async function loadingFilterSettings(): Promise<models.FilterSettingsAccounts> {\n\treturn await cps.getAccountsFilterSettings();\n}\n\nexport async function loadingAccountsListData(filter: models.FilterAccounts): Promise<models.Accounts> {\n\treturn await cps.getAccountsList(filter);\n}","import storage from \"redux-persist/lib/storage\";\nimport { put, call, takeEvery } from \"redux-saga/effects\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { cps } from \"../../api/CryptoPayClient\";\nimport { handleErrorAction } from \"./general.duck\";\n\n\n\n/**\n * State of merchants\n */\nexport interface MerchantsState {\n\tsettings: models.FilterSettingsMerchants | null;\n\tmerchants: models.Merchants | null;\n}\n\nexport const initialState: MerchantsState = {\n\tsettings: null,\n\tmerchants: null\n}\n\n// actions types:\nexport enum ActionTypes {\n\tCLEAR_MERCHANTS_LIST_STORAGE = \"CLEAR_MERCHANTS_LIST_STORAGE\",\n\n\tGET_MERCHANTS_LIST = \"GET_MERCHANTS_LIST\",\n\tGET_MERCHANTS_SETTINGS = \"GET_MERCHANTS_SETTINGS\",\n\n\tLOAD_MERCHANTS_LIST = \"LOAD_MERCHANTS_LIST\",\n\tLOAD_MERCHANTS_SETTINGS = \"LOAD_MERCHANTS_SETTINGS\",\n\n};\n\nexport interface ClearMerchantsListAction {\n\ttype: ActionTypes.CLEAR_MERCHANTS_LIST_STORAGE;\n}\nexport function clearMerchantsListAction(): MerchantsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_MERCHANTS_LIST_STORAGE\n\t}\n}\n\nexport interface GetMerchantsListAction {\n\ttype: ActionTypes.GET_MERCHANTS_LIST;\n\tpayload: { filter: models.FilterMerchants }\n}\nexport function getMerchantsListAction(filter: models.FilterMerchants): MerchantsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_MERCHANTS_LIST,\n\t\tpayload: { filter }\n\t}\n}\n\nexport interface GetMerchantsSettingsAction {\n\ttype: ActionTypes.GET_MERCHANTS_SETTINGS;\n}\nexport function getMerchantsSettingsAction(): MerchantsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_MERCHANTS_SETTINGS\n\t}\n}\n\n\nexport interface LoadMerchantsListAction {\n\ttype: ActionTypes.LOAD_MERCHANTS_LIST;\n\tpayload: {\n\t\tmerchants: models.Merchants | null\n\t}\n}\nexport function loadMerchantsListAction (merchants: models.Merchants | null): MerchantsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_MERCHANTS_LIST,\n\t\tpayload: { merchants }\n\t}\n}\n\nexport interface LoadMerchantsSettingsAction {\n\ttype: ActionTypes.LOAD_MERCHANTS_SETTINGS;\n\tpayload: {\n\t\tsettings: models.FilterSettingsMerchants | null\n\t}\n}\nexport function loadMerchantsSettingsAction (settings: models.FilterSettingsMerchants | null): LoadMerchantsSettingsAction {\n\treturn {\n\t\ttype: ActionTypes.LOAD_MERCHANTS_SETTINGS,\n\t\tpayload: { settings }\n\t}\n}\n\nexport type MerchantsActionTypes = ClearMerchantsListAction \n\t| GetMerchantsListAction \n\t| GetMerchantsSettingsAction  \n\t| LoadMerchantsListAction\n\t| LoadMerchantsSettingsAction;\n\nexport function merchantsReducer(previousState = initialState, action: MerchantsActionTypes): MerchantsState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_MERCHANTS_LIST_STORAGE:\n\t\t\treturn initialState;\n\t\tcase ActionTypes.LOAD_MERCHANTS_LIST:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tmerchants: action.payload.merchants\n\t\t\t}\n\t\tcase ActionTypes.LOAD_MERCHANTS_SETTINGS:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tsettings: action.payload.settings\n\t\t\t}\n\t\tcase ActionTypes.GET_MERCHANTS_LIST:\n\t\tcase ActionTypes.GET_MERCHANTS_SETTINGS:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = merchantsReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_MERCHANTS_SETTINGS, workerGetMerchantsSettings);\n\tyield takeEvery(ActionTypes.GET_MERCHANTS_LIST, workerGetMerchantsList);\n}\n\nexport function* workerGetMerchantsSettings(action: LoadMerchantsSettingsAction) {\n\ttry {\n\t\tconst settings = yield call(loadingSettings);\n\t\tyield put(loadMerchantsSettingsAction(settings));\n\t} catch (e) {\n\t\tyield put(loadMerchantsSettingsAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n\t\n}\n\nexport function* workerGetMerchantsList(action: GetMerchantsListAction) {\n\ttry {\n\t\tconst merchants = yield call(loadingMerchantsList, action.payload.filter);\n\t\tyield put(loadMerchantsListAction(merchants));\n\t} catch (e) {\n\t\tyield put(loadMerchantsListAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport async function loadingSettings(): Promise<models.FilterSettingsMerchants> {\n\treturn await cps.getMerchantsFilterSettings();\n}\n\nexport async function loadingMerchantsList(filter: models.FilterMerchants): Promise<models.Merchants> {\n\treturn await cps.getMerchantsList(filter);\n}","import storage from \"redux-persist/lib/storage\";\nimport { put, call, takeEvery } from \"redux-saga/effects\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { cps } from '../../api/CryptoPayClient'\nimport { handleErrorAction } from \"./general.duck\";\n\nexport interface OrderState {\n\torderData: models.DepositOrder | models.WithdrawalOrder | null;\n}\n\n// actions\nexport enum ActionTypes {\n\tCLEAR_ORDER_STORAGE = \"CLEAR_ORDER_STORAGE\",\n\tGET_ORDER = \"GET_ORDER\",\n\tLOAD_ORDER = \"LOAD_ORDER\"\n};\n\n\nexport interface ClearOrderStorageAction {\n\ttype: typeof ActionTypes.CLEAR_ORDER_STORAGE;\n}\nexport function clearOrderStorageAction(): ClearOrderStorageAction {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_ORDER_STORAGE\n\t};\n}\n\nexport interface GetOrderAction {\n\ttype: typeof ActionTypes.GET_ORDER;\n\tpayload: { orderId: string }\n}\nexport function getOrderAction(orderId: string): OrderActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_ORDER,\n\t\tpayload: { orderId }\n\t};\n}\n\nexport interface LoadOrderAction {\n\ttype: typeof ActionTypes.LOAD_ORDER;\n\tpayload: { orderData: models.DepositOrder | models.WithdrawalOrder | null }\n}\nexport function loadOrderAction(orderData: models.DepositOrder | models.WithdrawalOrder | null): OrderActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_ORDER,\n\t\tpayload: { orderData }\n\t};\n}\n\nexport type OrderActionTypes = ClearOrderStorageAction | GetOrderAction | LoadOrderAction;\n\nexport const initialState: OrderState = {\n\torderData: null\n}\n\nexport function orderReducer(previousState = initialState, action: OrderActionTypes): OrderState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_ORDER_STORAGE:\n\t\t\treturn initialState;\n\t\tcase ActionTypes.LOAD_ORDER: {\n\t\t\tconst state = Object.assign({}, previousState)\n\t\t\tstate.orderData = action.payload.orderData;\n\t\t\treturn state;\n\t\t}\n\t\tcase ActionTypes.GET_ORDER:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = orderReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_ORDER, workerGetOrder);\n}\n\nexport function* workerGetOrder(action: GetOrderAction) {\n\ttry {\n\t\tconst order = yield call(loadingOrder, action.payload.orderId);\n\t\tyield put(loadOrderAction(order));\n\t} catch (e) {\n\t\tyield put(loadOrderAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n\n}\n\nexport async function loadingOrder(apiOrderId: string): Promise<models.DepositOrder | models.WithdrawalOrder> {\n\treturn await cps.getOrder(apiOrderId);\n}\n","import React, { Component } from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport LinkPermissions from \"../../../common/components/LinkPermissions\";\n\n\nexport enum OrdersColumn {\n\tAMOUNT_FROM = \"AMOUNT_FROM\",\n\tAMOUNT_TO = \"AMOUNT_TO\",\n\tCLIENT_ORDER_ID = \"CLIENT_ORDER_ID\",\n\tCREATED_AT = \"CREATED_AT\",\n\tCURRENCY_FROM = \"CURRENCY_FROM\",\n\tCURRENCY_TO = \"CURRENCY_TO\",\n\tINSTRUMENT = \"INSTRUMENT\",\n\tFEE_TOTAL = \"FEE_TOTAL\",\n\tMERCHANT = \"MERCHANT\",\n\tORDER_ID = \"ORDER_ID\",\n\tREJECT_REASON = \"REJECT_REASON\",\n\tSTATE = \"STATE\",\n\tSTATUS = \"STATUS\",\n\tUPDATED_AT = \"UPDATED_AT\"\n}\n\n\nexport const OrdersColumnsLabels: { [column in OrdersColumn]: string } = {\n\tAMOUNT_FROM: \"Amount From\",\n\tAMOUNT_TO: \"Amount To\",\n\tCLIENT_ORDER_ID: \"Client Order Id\",\n\tCREATED_AT: \"Created at\",\n\tCURRENCY_FROM: \"Currency From\",\n\tCURRENCY_TO: \"Currency To\",\n\tINSTRUMENT: \"Instrument\",\n\tFEE_TOTAL: \"Total Fee\",\n\tMERCHANT: \"Merchant\",\n\tORDER_ID: \"Order Id\",\n\tREJECT_REASON: \"Rejection Reason\",\n\tSTATE: \"State\",\n\tSTATUS: \"Status\",\n\tUPDATED_AT: \"Updated At\"\n}\n\nexport const OrdersColumnsArray: Array<OrdersColumn> = [OrdersColumn.MERCHANT, OrdersColumn.ORDER_ID,\nOrdersColumn.CLIENT_ORDER_ID, OrdersColumn.INSTRUMENT, OrdersColumn.STATE, OrdersColumn.STATUS,\nOrdersColumn.AMOUNT_FROM, OrdersColumn.CURRENCY_FROM, OrdersColumn.AMOUNT_TO, OrdersColumn.CURRENCY_TO,\nOrdersColumn.FEE_TOTAL, OrdersColumn.REJECT_REASON, OrdersColumn.CREATED_AT, OrdersColumn.UPDATED_AT\n];\n\ntype State = {\n}\n\ntype Props = {\n\torders: models.Orders[\"orders\"];\n\tactiveColumns: Array<string>;\n\tpermissions: DashboardPermission[];\n}\n\nexport default class OrdersTable extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n\n\tviewBadgeForStatus = (status: string): \"danger\" | \"warning\" | \"success\" | undefined => {\n\t\tswitch (status) {\n\t\t\tcase 'REJECTED':\n\t\t\tcase 'CANCELED':\n\t\t\t\treturn 'danger';\n\t\t\tcase 'PENDING':\n\t\t\tcase 'SLEEPING':\n\t\t\t\treturn 'warning';\n\t\t\tcase 'ACCEPTED':\n\t\t\t\treturn 'success';\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table responsive className=\"table-hover\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.activeColumns.map((name, index) => {\n\t\t\t\t\t\t\t\treturn (<th key={name}>{OrdersColumnsLabels[name as OrdersColumn]}</th>);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.orders.map((order, index) => {\n\t\t\t\t\t\t\treturn (<tr key={`order-${index}`}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.activeColumns.map((name, index) => {\n\t\t\t\t\t\t\t\t\t\tswitch (name) {\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.MERCHANT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.merchant}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.ORDER_ID:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LinkPermissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission={DashboardPermission.OrderView}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/order/${order.apiOrderId}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={order.apiOrderId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.CLIENT_ORDER_ID:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.clientOrderId}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.INSTRUMENT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.instrument}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.CREATED_AT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.createdAt.toISOString()}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.UPDATED_AT:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.updatedAt !== null && order.updatedAt.toISOString()}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.STATUS:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}><Badge variant={this.viewBadgeForStatus(order.status)}>{order.status}</Badge></td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.STATE:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.state}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.FEE_TOTAL:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}></td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.REJECT_REASON:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.rejectReason}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.CURRENCY_FROM:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.from.currency}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.AMOUNT_FROM:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.from.amount}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.CURRENCY_TO:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.to.currency}</td>);\n\t\t\t\t\t\t\t\t\t\t\tcase OrdersColumn.AMOUNT_TO:\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<td key={`${name}-${index}`}>{order.to.amount}</td>);\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</tr>);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}","import storage from \"redux-persist/lib/storage\";\nimport { put, call, takeEvery } from \"redux-saga/effects\";\n\nimport * as models from \"@cryptopay/dashboard-contract/models\";\n\nimport { cps } from '../../api/CryptoPayClient'\nimport { handleErrorAction } from \"./general.duck\";\nimport { OrdersColumn } from \"../../pages/home/orders/components/OrdersTable\";\n\n/**\n * State of orders\n */\nexport interface OrdersState {\n\tfilterSettings: models.FilterSettingsOrders | null;\n\torders: models.Orders | null;\n\tactiveColumns: Array<string>;\n}\n\nexport enum ActionTypes {\n\tCLEAR_ORDERS_LIST_STORAGE = \"CLEAR_ORDERS_LIST_STORAGE\",\n\n\tGET_ORDERS_LIST = \"GET_ORDERS_LIST\",\n\tGET_ORDERS_SETTINGS = \"GET_ORDERS_SETTINGS\",\n\t\n\tLOAD_ORDERS_LIST = \"LOAD_ORDERS_LIST\",\n\tLOAD_ORDERS_SETTINGS = \"LOAD_ORDERS_SETTINGS\",\n\n\tUPDATE_ORDERS_COLUMNS = \"UPDATE_ORDERS_COLUMNS\"\n};\n\nexport interface ClearOrdersListStorageAction {\n\ttype: ActionTypes.CLEAR_ORDERS_LIST_STORAGE\n}\nexport function clearOrdersListStorageAction(): OrdersListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_ORDERS_LIST_STORAGE\n\t}\n}\n\nexport interface GetOrdersListAction {\n\ttype: ActionTypes.GET_ORDERS_LIST;\n\tpayload: { filter: models.FilterOrders }\n}\nexport function getOrdersListAction(filter: models.FilterOrders): OrdersListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_ORDERS_LIST,\n\t\tpayload: { filter }\n\t}\n}\n\nexport interface GetOrdersSettingsAction {\n\ttype: ActionTypes.GET_ORDERS_SETTINGS;\n}\nexport function getOrdersSettingsAction(): OrdersListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_ORDERS_SETTINGS\n\t}\n}\n\nexport interface LoadOrdersListAction {\n\ttype: ActionTypes.LOAD_ORDERS_LIST;\n\tpayload: {\n\t\torders: models.Orders | null\n\t}\n}\nexport function loadOrdersListAction (orders: models.Orders | null): OrdersListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_ORDERS_LIST,\n\t\tpayload: { orders }\n\t}\n}\n\nexport interface LoadOrdersSettingsAction {\n\ttype: ActionTypes.LOAD_ORDERS_SETTINGS;\n\tpayload: {\n\t\tsettings: models.FilterSettingsOrders | null\n\t}\n}\nexport function loadOrdersSettingsAction (settings: models.FilterSettingsOrders | null): OrdersListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_ORDERS_SETTINGS,\n\t\tpayload: { settings }\n\t}\n}\n\nexport interface UpdateOrdersColumnsAction {\n\ttype: ActionTypes.UPDATE_ORDERS_COLUMNS;\n\tpayload: {\n\t\tactiveColumns: Array<string>;\n\t}\n}\nexport function updateOrdersColumnsAction(activeColumns: Array<string>): OrdersListActionTypes {\n\treturn {\n\t\ttype: ActionTypes.UPDATE_ORDERS_COLUMNS,\n\t\tpayload: { activeColumns }\n\t}\n}\n\n\nexport type OrdersListActionTypes = ClearOrdersListStorageAction\n\t| GetOrdersListAction\n\t| GetOrdersSettingsAction\n\t| LoadOrdersListAction\n\t| LoadOrdersSettingsAction\n\t| UpdateOrdersColumnsAction;\n\nexport const initialState: OrdersState = {\n\tfilterSettings: null,\n\torders: null,\n\tactiveColumns: [OrdersColumn.MERCHANT, OrdersColumn.ORDER_ID, OrdersColumn.INSTRUMENT, OrdersColumn.STATE,\n\t\tOrdersColumn.STATUS, OrdersColumn.CURRENCY_FROM, OrdersColumn.AMOUNT_FROM,\n\t\tOrdersColumn.CURRENCY_TO, OrdersColumn.AMOUNT_TO, OrdersColumn.CREATED_AT\n\t]\n}\n\nexport function ordersListReducer(previousState = initialState, action: OrdersListActionTypes): OrdersState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_ORDERS_LIST_STORAGE:\n\t\t\treturn initialState;\n\t\tcase ActionTypes.LOAD_ORDERS_LIST:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\torders: action.payload.orders\n\t\t\t}\n\t\tcase ActionTypes.LOAD_ORDERS_SETTINGS:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tfilterSettings: action.payload.settings\n\t\t\t}\n\t\tcase ActionTypes.UPDATE_ORDERS_COLUMNS:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tactiveColumns: action.payload.activeColumns\n\t\t\t}\n\t\tcase ActionTypes.GET_ORDERS_LIST:\n\t\tcase ActionTypes.GET_ORDERS_SETTINGS:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = ordersListReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_ORDERS_LIST, workerGetOrdersList);\n\n\tyield takeEvery(ActionTypes.GET_ORDERS_SETTINGS, workerGetOrdersSettings);\n}\n\nexport function* workerGetOrdersList(action: GetOrdersListAction) {\n\ttry {\n\t\tconst orders = yield call(loadingOrdersListData, action.payload.filter);\n\t\tyield put(loadOrdersListAction(orders));\n\t} catch (e) {\n\t\tyield put(loadOrdersListAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport function* workerGetOrdersSettings(action: GetOrdersSettingsAction) {\n\ttry {\n\t\tconst settings = yield call(loadingFilterSettings);\n\t\tyield put(loadOrdersSettingsAction(settings));\n\t} catch (e) {\n\t\tyield put(loadOrdersSettingsAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n\n}\n\nexport async function loadingFilterSettings(): Promise<models.FilterSettingsOrders> {\n\treturn await cps.getOrdersFilterSettings();\n}\n\nexport async function loadingOrdersListData(filter: models.FilterOrders): Promise<models.Orders> {\n\treturn await cps.getOrdersList(filter);\n}","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { takeEvery, put, select } from \"redux-saga/effects\";\nimport { ApiCallError, HttpStatusError } from \"../../api/ApiCall\";\nimport { RootState } from \"../rootDuck\";\nimport { clearAccountStorageAction } from \"./account.duck\";\nimport { clearAccountsListStorageAction } from \"./accounts.duck\";\nimport { clearMerchantsListAction } from \"./merchants.duck\";\nimport { clearOrderStorageAction } from \"./order.duck\";\nimport { clearOrdersListStorageAction } from \"./orders.duck\";\n//import { clearAuthStorageAction } from \"./auth.duck\";\n//import * as models  from \"@cryptopay/dashboard-contract/models\";\n\nexport type GeneralState = {\n\tappVersion: string | null;\n\terror: ErrorData | null;\n}\nexport const initialState: GeneralState = {\n\tappVersion: null,\n\terror: null\n}\n\nexport type ErrorData = {\n\tmessage: string;\n\terror: Error | null;\n}\n\nexport enum ActionTypes {\n\tCLEAR_STORAGE = \"CLEAR_GENERAL_STORAGE\",\n\tCHECK_APP_VERSION = \"CHECK_APP_VERSION\",\n\tHANDLE_ERROR = \"HANDLE_ERROR\",\n\tSAVE_ERROR = \"SAVE_ERROR\",\n\tSET_APP_VERSION = \"SET_APP_VERSION\"\n};\n\nexport interface CheckAppVersionAction {\n\ttype: ActionTypes.CHECK_APP_VERSION;\n\tpayload: { appVersion: string }\n}\nexport function checkAppVersionAction(appVersion: string): GeneralActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CHECK_APP_VERSION,\n\t\tpayload: { appVersion }\n\t}\n}\n\nexport interface ClearStorageAction {\n\ttype: ActionTypes.CLEAR_STORAGE;\n}\nexport function clearStorageAction(): GeneralActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_STORAGE\n\t}\n}\n\nexport interface HandleErrorAction {\n\ttype: ActionTypes.HANDLE_ERROR;\n\tpayload: { messageToDisplay: string | null, error: Error | null }\n}\nexport function handleErrorAction(messageToDisplay: string | null, error: Error | null): GeneralActionTypes {\n\treturn {\n\t\ttype: ActionTypes.HANDLE_ERROR,\n\t\tpayload: { messageToDisplay, error }\n\t}\n}\n\nexport interface SaveErrorAction {\n\ttype: ActionTypes.SAVE_ERROR;\n\tpayload: { message: string, error: Error | null }\n}\nexport function saveErrorAction(message: string, error: Error | null): GeneralActionTypes {\n\treturn {\n\t\ttype: ActionTypes.SAVE_ERROR,\n\t\tpayload: { message, error }\n\t}\n}\n\nexport interface SetAppVersionAction {\n\ttype: ActionTypes.SET_APP_VERSION;\n\tpayload: { appVersion: string }\n}\nexport function setAppVersionAction(appVersion: string): GeneralActionTypes {\n\treturn {\n\t\ttype: ActionTypes.SET_APP_VERSION,\n\t\tpayload: { appVersion }\n\t}\n}\n\nexport type GeneralActionTypes = CheckAppVersionAction\n\t| ClearStorageAction\n\t| HandleErrorAction\n\t| SaveErrorAction\n\t| SetAppVersionAction;\n\nexport function generalReducer(previousState = initialState, action: GeneralActionTypes): GeneralState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_STORAGE:\n\t\t\treturn initialState;\n\t\tcase ActionTypes.SAVE_ERROR:\n\t\t\tconst error: ErrorData = {\n\t\t\t\tmessage: action.payload.message,\n\t\t\t\terror: action.payload.error\n\t\t\t}\n\t\t\tconst state: GeneralState = Object.assign({}, previousState);\n\t\t\tstate.error = error;\n\t\t\treturn state;\n\t\tcase ActionTypes.SET_APP_VERSION:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tappVersion: action.payload.appVersion\n\t\t\t}\n\t\tcase ActionTypes.HANDLE_ERROR:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = persistReducer({ storage, key: \"general\" }, generalReducer);\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.CHECK_APP_VERSION, workerCheckAppVersion);\n\tyield takeEvery(ActionTypes.CLEAR_STORAGE, workerClearStorage);\n\tyield takeEvery(ActionTypes.HANDLE_ERROR, workerHandleError);\n}\n\nexport function* workerCheckAppVersion(action: CheckAppVersionAction) {\n\n\tconst appVersion = yield select(getAppVersion);\n\tif (appVersion === null || appVersion !== action.payload.appVersion) {\n\t\tyield put(clearStorageAction());\n\t\tyield put(setAppVersionAction(action.payload.appVersion));\n\t}\n}\n\nexport function* workerClearStorage() {\n\tyield put(clearAccountStorageAction());\n\tyield put(clearAccountsListStorageAction());\n\tyield put(clearMerchantsListAction());\n\t//yield put(clearAuthStorageAction());\n\tyield put(clearOrderStorageAction());\n\tyield put(clearOrdersListStorageAction());;\n}\n\nexport function* workerHandleError(action: HandleErrorAction) {\n\n\tconsole.error(`Error, message: ${action.payload.messageToDisplay}, error: ${action.payload.error}`)\n\n\tif (action.payload.messageToDisplay !== null) {\n\t\tyield put(saveErrorAction(action.payload.messageToDisplay, action.payload.error));\n\t\treturn;\n\t}\n\n\tif (action.payload.error instanceof ApiCallError) {\n\t\tconst innerError = action.payload.error.innerError\n\t\tif (innerError instanceof HttpStatusError) {\n\t\t\tconst code = innerError.code;\n\t\t\tswitch (code) {\n\t\t\t\tcase 400:\n\t\t\t\tcase 401:\n\t\t\t\tcase 403:\n\t\t\t\tcase 404:\n\t\t\t\tcase 500:\n\t\t\t\tcase 503:\n\t\t\t\t\tyield put(saveErrorAction(innerError.message, action.payload.error));\n\t\t\t\t\treturn;\n\t\t\t\tdefault:\n\t\t\t\t\tyield put(saveErrorAction(\"Received api error\", action.payload.error));\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tyield put(saveErrorAction(\"Received api error\", action.payload.error));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tyield put(saveErrorAction(\"Received error\", action.payload.error));\n}\n\nexport const getAppVersion = (state: RootState) => state.general.appVersion;\n","import storage from \"redux-persist/lib/storage\";\nimport { put, call, takeEvery } from \"redux-saga/effects\";\nimport { cps } from '../../api/CryptoPayClient'\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { handleErrorAction } from \"./general.duck\";\nimport { RootState } from \"../rootDuck\";\n\n/**\n * State of Accounts\n */\nexport interface AccountState {\n\n\taccountData: models.Account | null;\n\ttransactionsFilter: models.FilterTransactions;\n\tselectedTransaction: any | null;\n\ttransactions: models.Transactions | null;\n}\n\nexport const initialState: AccountState = {\n\taccountData: null,\n\ttransactionsFilter: {\n\t\ttype: undefined,\n\t\tstatus: undefined,\n\t\tdateFrom: undefined,\n\t\tdateTo: undefined,\n\t\tcount: 10,\n\t\tpage: 1\n\t},\n\ttransactions: null,\n\tselectedTransaction: null\n}\n\n// actions types:\nexport enum ActionTypes {\n\tCLEAR_ACCOUNT_STORAGE = \"CLEAR_ACCOUNT_STORAGE\",\n\tGET_ACCOUNT = \"GET_ACCOUNT\",\n\tGET_TRANSACTION = \"GET_TRANSACTION\",\n\tGET_TRANSACTIONS_LIST = \"GET_TRANSACTIONS_LIST\",\n\tLOAD_ACCOUNT = \"LOAD_ACCOUNT\",\n\tLOAD_TRANSACTION = \"LOAD_TRANSACTION\",\n\tLOAD_TRANSACTIONS_LIST = \"LOAD_TRANSACTIONS_LIST\"\n};\n\nexport interface ClearAccountStorageAction {\n\ttype: ActionTypes.CLEAR_ACCOUNT_STORAGE;\n}\nexport function clearAccountStorageAction(): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_ACCOUNT_STORAGE\n\t}\n}\n\nexport interface GetAccountAction {\n\ttype: ActionTypes.GET_ACCOUNT;\n\tpayload: { accountId: string }\n}\nexport function getAccountAction(accountId: string): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_ACCOUNT,\n\t\tpayload: { accountId }\n\t}\n}\n\nexport interface GetTransactionAction {\n\ttype: ActionTypes.GET_TRANSACTION;\n\tpayload: { transactionId: string }\n}\nexport function getTransactionAction(transactionId: string): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_TRANSACTION,\n\t\tpayload: { transactionId }\n\t}\n}\n\nexport interface GetTransactionsListAction {\n\ttype: ActionTypes.GET_TRANSACTIONS_LIST;\n\tpayload: { apiAccountId: string, filter: models.FilterTransactions }\n}\nexport function getTransactionsListAction(\n\tapiAccountId: string,\n\tfilter: models.FilterTransactions\n): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_TRANSACTIONS_LIST,\n\t\tpayload: { apiAccountId, filter }\n\t}\n}\n\nexport interface LoadAccountAction {\n\ttype: ActionTypes.LOAD_ACCOUNT;\n\tpayload: { account: models.Account | null }\n}\nexport function loadAccountAction(\n\taccount: models.Account | null\n): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_ACCOUNT,\n\t\tpayload: { account }\n\t}\n}\n\nexport interface LoadTransactionAction {\n\ttype: ActionTypes.LOAD_TRANSACTION;\n\tpayload: { transaction: any | null }\n}\nexport function loadTransactionAction(\n\ttransaction: any | null\n): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_TRANSACTION,\n\t\tpayload: { transaction }\n\t}\n}\n\nexport interface LoadTransactionsListAction {\n\ttype: ActionTypes.LOAD_TRANSACTIONS_LIST;\n\tpayload: {\n\t\ttransactions: models.Transactions | null;\n\t\tfilter: models.FilterTransactions;\n\t}\n}\nexport function loadTransactionsListAction(\n\ttransactions: models.Transactions | null,\n\tfilter: models.FilterTransactions\n): AccountActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_TRANSACTIONS_LIST,\n\t\tpayload: { transactions, filter }\n\t}\n}\n\nexport type AccountActionTypes = ClearAccountStorageAction\n\t| GetAccountAction\n\t| GetTransactionAction\n\t| GetTransactionsListAction\n\t| LoadAccountAction\n\t| LoadTransactionAction\n\t| LoadTransactionsListAction;\n\nexport function accountReducer(previousState = initialState, action: AccountActionTypes): AccountState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_ACCOUNT_STORAGE:\n\t\t\treturn { ...initialState };\n\t\tcase ActionTypes.LOAD_ACCOUNT:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\taccountData: action.payload.account\n\t\t\t}\n\t\tcase ActionTypes.LOAD_TRANSACTIONS_LIST:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\ttransactions: action.payload.transactions,\n\t\t\t\ttransactionsFilter: action.payload.filter\n\t\t\t}\n\t\tcase ActionTypes.GET_ACCOUNT:\n\t\tcase ActionTypes.GET_TRANSACTION:\n\t\tcase ActionTypes.GET_TRANSACTIONS_LIST:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = accountReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_ACCOUNT, workerGetAccount);\n\tyield takeEvery(ActionTypes.GET_TRANSACTION, workerGetTransaction);\n\tyield takeEvery(ActionTypes.GET_TRANSACTIONS_LIST, workerGetTransactionsList);\n}\n\nexport function* workerGetAccount(action: GetAccountAction) {\n\ttry {\n\t\tconst account: models.Account = yield call(loadingAccount, action.payload.accountId);\n\t\tyield put(loadAccountAction(account));\n\t} catch (e) {\n\t\tyield put(loadAccountAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport function* workerGetTransaction(action: GetTransactionAction) {\n\ttry {\n\t\tthrow new Error(\"get transaction not implemented yet!\");\n\t} catch (e) {\n\t\tyield put(handleErrorAction(\"Get transaction action not implemented yet\", e));\n\t}\n}\n\nexport function* workerGetTransactionsList(action: GetTransactionsListAction) {\n\ttry {\n\t\tconst transactions: models.Transactions = yield call(loadingTransactionsList, action.payload.apiAccountId, action.payload.filter);\n\t\tyield put(loadTransactionsListAction(transactions, action.payload.filter));\n\t} catch (e) {\n\t\tyield put(loadTransactionsListAction(null, action.payload.filter));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport async function loadingAccount(accountId: string): Promise<models.Account> {\n\treturn await cps.getAccount(accountId);\n}\n\nexport async function loadingTransactionsList(accountId: string, filter: models.FilterTransactions): Promise<models.Transactions> {\n\treturn await cps.getTransactionsList(accountId, filter);\n}\n\nexport const getAccountData = (state: RootState) => state.account.accountData;\nexport const getTransactionsFilter = (state: RootState) => state.account.transactionsFilter;","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport interface State {\n\tlang: Languages;\n}\n\nexport enum Languages {\n\ten = \"en\"\n}\n\nexport enum ActionTypes {\n\tSET_LANGUAGE = \"SET_LANGUAGE\"\n}\n\nexport interface SetLanguageI18nAction {\n\ttype: ActionTypes.SET_LANGUAGE;\n\tpayload: { lang: Languages; }\n}\nexport function setLanguageI18nAction(lang: Languages): SetLanguageI18nAction {\n\treturn {\n\t\ttype: ActionTypes.SET_LANGUAGE,\n\t\tpayload: { lang }\n\t};\n}\n\nexport type I18nActionTypes = SetLanguageI18nAction;\n\nconst initialState = {\n\tlang: Languages.en\n};\n\nexport function i18nReducer(previousState = initialState, action: I18nActionTypes): State {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SET_LANGUAGE:\n\t\t\treturn { \n\t\t\t\t...previousState,\n\t\t\t\tlang: action.payload.lang\n\t\t\t};\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = persistReducer({ storage, key: \"i18n\" }, i18nReducer);\n\n","import { put, call, takeEvery, select } from \"redux-saga/effects\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { cps } from '../../api/CryptoPayClient';\nimport { handleErrorAction } from \"./general.duck\";\n\nexport interface State {\n\tgatewaysList: models.GatewaysList | null;\n}\n\n// actions\nexport enum ActionTypes {\n\tCLEAR_GATEWAY_STORAGE = \"CLEAR_GATEWAY_STORAGE\",\n\n\t//CREATE_GATEWAY = \"CREATE_GATEWAY\",\n\n\tGET_GATEWAYS_LIST = \"GET_GATEWAYS_LIST\",\n\n\tLOAD_GATEWAYS_LIST = \"LOAD_GATEWAYS_LIST\",\n\n\tSWITCH_GATEWAY = \"SWITCH_GATEWAY\"\n};\n\nexport interface ClearGatewayStorageAction {\n\ttype: typeof ActionTypes.CLEAR_GATEWAY_STORAGE;\n}\nexport function clearGatewayStorageAction(): GatewayActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_GATEWAY_STORAGE\n\t};\n}\n\n\n//export interface CreateGatewayAction {\n//\ttype: typeof ActionTypes.CREATE_GATEWAY;\n//\tpayload: { gateway: models.CreateGatewayRequest }\n//}\n//export function createGatewayAction(gateway: models.CreateGatewayRequest): GatewayActionTypes {\n//\treturn {\n//\t\ttype: ActionTypes.CREATE_GATEWAY,\n//\t\tpayload: { gateway }\n//\t};\n//}\n\nexport interface GetGatewaysListAction {\n\ttype: typeof ActionTypes.GET_GATEWAYS_LIST;\n}\nexport function getGatewaysListAction(): GatewayActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_GATEWAYS_LIST\n\t};\n}\n\nexport interface LoadGatewaysListAction {\n\ttype: typeof ActionTypes.LOAD_GATEWAYS_LIST;\n\tpayload: { gateways: models.GatewaysList | null }\n}\nexport function loadGatewaysListAction(gateways: models.GatewaysList | null): GatewayActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_GATEWAYS_LIST,\n\t\tpayload: { gateways }\n\t};\n}\n\n\nexport type GatewayActionTypes = ClearGatewayStorageAction\n\t//| CreateGatewayAction\n\t| GetGatewaysListAction\n\t| LoadGatewaysListAction;\n\nexport const initialState: State = {\n\tgatewaysList: null\n}\n\nexport function gatewayReducer(previousState = initialState, action: GatewayActionTypes): State {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_GATEWAY_STORAGE:\n\t\t\treturn initialState;\n\t\t//case ActionTypes.CREATE_GATEWAY:\n\t\t//\treturn previousState;\n\t\tcase ActionTypes.LOAD_GATEWAYS_LIST:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tgatewaysList: action.payload.gateways\n\t\t\t}\n\t\tcase ActionTypes.GET_GATEWAYS_LIST:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = gatewayReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_GATEWAYS_LIST, workerGetGatewaysList);\n}\n\nexport function* workerGetGatewaysList (action: GetGatewaysListAction) {\n\ttry {\n\t\tconst gatewaysList = yield call (loadingGatewaysList);\n\t\tyield put (loadGatewaysListAction(gatewaysList));\n\t} catch (e) {\n\t\tyield put (loadGatewaysListAction(null));\n\t\tyield put (handleErrorAction(null, e));\t\n\t}\n}\n\nexport async function loadingGatewaysList(): Promise<models.GatewaysList> {\n\treturn await cps.getGatewaysList();\n}","import { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\nexport enum NavElement {\n\tACCOUNTS = \"ACCOUNTS\",\n\tHOME = \"HOME\",\n\tMERCHANTS = \"MERCHANTS\",\n\tORDERS = \"ORDERS\",\n\tSETTINGS = \"SETTINGS\"\n}\n\nexport interface State {\n\tnavElements: Array<NavElement>;\n}\n\nexport enum ActionTypes {\n\tUPDATE_NAV_ELEMENTS = \"UPDATE_NAV_ELEMENTS\",\n\tSET_NAV_ELEMENT = \"SET_NAV_ELEMENT\"\n}\n\nexport interface SetNavElementsAction {\n\ttype: ActionTypes.SET_NAV_ELEMENT;\n\tpayload: { navElements: Array<NavElement> }\n}\nexport function setNavElementsAction(navElements: Array<NavElement>): LayoutActionTypes {\n\treturn {\n\t\ttype: ActionTypes.SET_NAV_ELEMENT,\n\t\tpayload: { navElements }\n\t};\n}\n\nexport interface UpdateNavElementsAction {\n\ttype: ActionTypes.UPDATE_NAV_ELEMENTS;\n\tpayload: { permissions: DashboardPermission[] }\n}\nexport function updateNavElementsAction(permissions: DashboardPermission[]): LayoutActionTypes {\n\treturn {\n\t\ttype: ActionTypes.UPDATE_NAV_ELEMENTS,\n\t\tpayload: { permissions }\n\t};\n}\n\n\n\nexport type LayoutActionTypes = SetNavElementsAction | UpdateNavElementsAction;\n\nconst initialState = {\n\tnavElements: new Array<NavElement>()\n};\n\nexport function layoutReducer(previousState = initialState, action: LayoutActionTypes): State {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SET_NAV_ELEMENT:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tnavElements: action.payload.navElements\n\t\t\t}\n\t\tcase ActionTypes.UPDATE_NAV_ELEMENTS:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = persistReducer({ storage, key: \"layout\" }, layoutReducer);\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.UPDATE_NAV_ELEMENTS, workerUpdateNavElements);\n}\n\nexport function* workerUpdateNavElements(action: UpdateNavElementsAction) {\n\tconst navElements: Array<NavElement> = new Array<NavElement>();\n\n\tfor (const permission of action.payload.permissions) {\n\t\tswitch (permission) {\n\t\t\tcase DashboardPermission.AccountList:\n\t\t\t\tnavElements.push(NavElement.ACCOUNTS);\n\t\t\t\tbreak;\n\t\t\tcase DashboardPermission.MerchantList:\n\t\t\t\tnavElements.push(NavElement.MERCHANTS);\n\t\t\t\tbreak;\n\t\t\tcase DashboardPermission.MerchantView:\n\t\t\t\tnavElements.push(NavElement.HOME);\n\t\t\t\tnavElements.push(NavElement.SETTINGS);\n\t\t\t\tbreak;\n\t\t\tcase DashboardPermission.OrderList:\n\t\t\t\tnavElements.push(NavElement.ORDERS);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tyield put(setNavElementsAction(navElements));\n}","import storage from \"redux-persist/lib/storage\";\nimport { put, call, takeEvery, select } from \"redux-saga/effects\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { cps } from '../../api/CryptoPayClient'\nimport { handleErrorAction } from \"./general.duck\";\nimport { GetMerchantsListAction } from \"./merchants.duck\";\n\nexport interface State {\n\tlimits: models.MerchantLimits | null;\n}\n\n// actions\nexport enum ActionTypes {\n\tCLEAR_LIMITS_STORAGE = \"CLEAR_LIMITS_STORAGE\",\n\n\tGET_MERCHANT_LIMITS = \"GET_MERCHANT_LIMITS\",\n\tLOAD_MERCHANT_LIMITS = \"LOAD_MERCHANT_LIMITS\",\n\tUPDATE_MERCHANT_LIMIT = \"UPDATE_MERCHANT_LIMIT\"\n};\n\n\nexport interface ClearLimitsStorageAction {\n\ttype: typeof ActionTypes.CLEAR_LIMITS_STORAGE;\n}\nexport function clearLimitsStorageAction(): LimitsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.CLEAR_LIMITS_STORAGE\n\t};\n}\n\nexport interface GetMerchantLimitsAction {\n\ttype: typeof ActionTypes.GET_MERCHANT_LIMITS;\n}\nexport function getMerchantLimitsAction(): LimitsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.GET_MERCHANT_LIMITS\n\t};\n}\n\nexport interface LoadMerchantLimitsAction {\n\ttype: typeof ActionTypes.LOAD_MERCHANT_LIMITS;\n\tpayload: { limits: models.MerchantLimits | null }\n}\nexport function loadMerchantLimitsAction(limits: models.MerchantLimits | null): LimitsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.LOAD_MERCHANT_LIMITS,\n\t\tpayload: { limits }\n\t};\n}\n\nexport interface UpdateMerchantLimitAction {\n\ttype: typeof ActionTypes.UPDATE_MERCHANT_LIMIT;\n\tpayload: { limitData: models.UpdateLimitData }\n}\nexport function updateMerchantLimitAction(limitData: models.UpdateLimitData): LimitsActionTypes {\n\treturn {\n\t\ttype: ActionTypes.UPDATE_MERCHANT_LIMIT,\n\t\tpayload: { limitData }\n\t};\n}\n\nexport type LimitsActionTypes = ClearLimitsStorageAction\n\t| GetMerchantLimitsAction\n\t| LoadMerchantLimitsAction\n\t| UpdateMerchantLimitAction;\n\nexport const initialState: State = {\n\tlimits: null\n}\n\nexport function limitsReducer(previousState = initialState, action: LimitsActionTypes): State {\n\tswitch (action.type) {\n\t\tcase ActionTypes.CLEAR_LIMITS_STORAGE:\n\t\t\treturn initialState;\n\t\tcase ActionTypes.LOAD_MERCHANT_LIMITS:\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tlimits: action.payload.limits\n\t\t\t}\n\t\tcase ActionTypes.GET_MERCHANT_LIMITS:\n\t\tcase ActionTypes.UPDATE_MERCHANT_LIMIT:\n\t\tdefault:\n\t\t\treturn previousState;\n\t}\n}\n\nexport const reducer = limitsReducer;\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.GET_MERCHANT_LIMITS, workerGetMerchantLimits);\n\tyield takeEvery(ActionTypes.UPDATE_MERCHANT_LIMIT, workerUpdateMerchantLimit);\n}\n\nexport function* workerGetMerchantLimits(action: GetMerchantsListAction) {\n\ttry {\n\t\tconst limits = yield call(loadingMerchantLimits);\n\t\tyield put(loadMerchantLimitsAction(limits));\n\t} catch (e) {\n\t\tyield put(loadMerchantLimitsAction(null));\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport function* workerUpdateMerchantLimit(action: UpdateMerchantLimitAction) {\n\ttry {\n\t\tyield call(updatingMerchantLimit, action.payload.limitData);\n\t\t// refresh limits\n\t\tyield put(getMerchantLimitsAction());\n\t} catch (e) {\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nexport async function loadingMerchantLimits(): Promise<models.MerchantLimits> {\n\treturn await cps.getMerchantLimits();\n}\n\nexport async function updatingMerchantLimit(limit: models.UpdateLimitData): Promise<void> {\n\tawait cps.updateMerchantLimit(limit);\n}","import { Subscription, SubscriptionData, SubscriptionList, TopicInfoList } from \"@cryptopay/dashboard-contract\";\nimport storage from \"redux-persist/lib/storage\";\nimport { call, put,takeEvery } from \"redux-saga/effects\";\nimport { cps } from \"../../api/CryptoPayClient\";\nimport { RootState } from \"../rootDuck\";\nimport { handleErrorAction } from \"./general.duck\";\n\nexport interface State {\n\tnotificationTopicList: TopicInfoList;\n\tsubscriptionList: SubscriptionList;\n}\n\nexport enum ActionTypes {\n\tLOAD_NOTIFICATION_TOPIC_LIST = \"LOAD_NOTIFICATION_TOPIC_LIST\",\n\tPUT_NOTIFICATION_TOPIC_LIST = \"PUT_NOTIFICATION_TOPIC_LIST\",\n\tLOAD_SUBSCRIPTION_LIST = \"LOAD_SUBSCRIPTION_TOPIC_LIST\",\n\tPUT_SUBSCRIPTION_LIST = \"PUT_SUBSCRIPTION_TOPIC_LIST\",\n\tCREATE_SUBSCRIPTION = \"CREATE_SUBSCRIPTION\",\n\tDELETE_SUBSCRIPTION = \"DELETE_SUBSCRIPTION\",\n}\n\nexport const initialState: State = {\n\tnotificationTopicList: [],\n\tsubscriptionList: [],\n}\n\nexport interface LoadNotificationTopicList {\n\ttype: ActionTypes.LOAD_NOTIFICATION_TOPIC_LIST;\n}\n\nexport interface PutNotificationTopicList {\n\ttype: ActionTypes.PUT_NOTIFICATION_TOPIC_LIST;\n\tpayload: TopicInfoList;\n}\n\nexport interface LoadSubscriptionList {\n\ttype: ActionTypes.LOAD_SUBSCRIPTION_LIST;\n}\n\nexport interface PutSubscriptionList {\n\ttype: ActionTypes.PUT_SUBSCRIPTION_LIST;\n\tpayload: SubscriptionList;\n}\n\nexport interface CreateSubscription {\n\ttype: ActionTypes.CREATE_SUBSCRIPTION,\n\tpayload: SubscriptionData,\n}\n\nexport interface DeleteSubscription {\n\ttype: ActionTypes.DELETE_SUBSCRIPTION,\n\tpayload: string,\n}\n\nexport function loadNotificationTopicList(): LoadNotificationTopicList {\n\treturn {\n\t\ttype: ActionTypes.LOAD_NOTIFICATION_TOPIC_LIST,\n\t}\n}\n\nexport function putNotificationTopicList(topicList: TopicInfoList): PutNotificationTopicList {\n\treturn {\n\t\ttype: ActionTypes.PUT_NOTIFICATION_TOPIC_LIST,\n\t\tpayload: topicList,\n\t}\n}\n\nexport function loadSubscriptionList(): LoadSubscriptionList {\n\treturn {\n\t\ttype: ActionTypes.LOAD_SUBSCRIPTION_LIST,\n\t}\n}\n\nexport function putSubscriptionList(subscriptionList: SubscriptionList): PutSubscriptionList {\n\treturn {\n\t\ttype: ActionTypes.PUT_SUBSCRIPTION_LIST,\n\t\tpayload: subscriptionList,\n\t}\n}\n\nexport function createSubscription(subscption: SubscriptionData): CreateSubscription {\n\treturn {\n\t\ttype: ActionTypes.CREATE_SUBSCRIPTION,\n\t\tpayload: subscption,\n\t}\n}\n\nexport function deleteSubscription(id: string): DeleteSubscription {\n\treturn {\n\t\ttype: ActionTypes.DELETE_SUBSCRIPTION,\n\t\tpayload: id,\n\t}\n}\n\nexport type CallbacksActionTypes = PutNotificationTopicList | PutSubscriptionList;\n\nexport function callbackReducer(previousState = initialState, action: CallbacksActionTypes) {\n\tswitch (action.type) {\n\t\tcase ActionTypes.PUT_NOTIFICATION_TOPIC_LIST: {\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tnotificationTopicList: action.payload,\n\t\t\t}\n\t\t}\n\t\tcase ActionTypes.PUT_SUBSCRIPTION_LIST: {\n\t\t\treturn {\n\t\t\t\t...previousState,\n\t\t\t\tsubscriptionList: action.payload,\n\t\t\t}\n\t\t}\n\t\tdefault: {\n\t\t\treturn previousState;\n\t\t}\n\t}\n}\n\nexport function* saga() {\n\tyield takeEvery(ActionTypes.LOAD_NOTIFICATION_TOPIC_LIST, fetchNotificationTopicList);\n\tyield takeEvery(ActionTypes.LOAD_SUBSCRIPTION_LIST, fetchSubscriptionList);\n\tyield takeEvery(ActionTypes.CREATE_SUBSCRIPTION, createingSubscription);\n\tyield takeEvery(ActionTypes.DELETE_SUBSCRIPTION, deletingSubscription);\n}\n\nfunction* fetchNotificationTopicList() {\n\ttry {\n\t\tconst topicList = yield call(loadingNotificationTopicList);\n\t\tyield put(putNotificationTopicList(topicList));\n\t} catch (e) {\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nasync function loadingNotificationTopicList() {\n\treturn await cps.getNotificationTopicInfoList();\n}\n\nfunction* fetchSubscriptionList() {\n\ttry {\n\t\tconst subsciptionList = yield call(loadingSubscriptionList);\n\t\tyield put(putSubscriptionList(subsciptionList));\n\t} catch (e) {\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nasync function loadingSubscriptionList() {\n\treturn await cps.getNotificationSubscriptionList();\n}\n\nfunction* createingSubscription({ payload }: CreateSubscription) {\n\ttry {\n\t\tyield call(createsSubscription, payload);\n\t\tyield call(fetchSubscriptionList)\n\t} catch (e) {\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nasync function createsSubscription(subscription: SubscriptionData) {\n\treturn await cps.createNotificationSubscription(subscription);\n}\n\nfunction* deletingSubscription({ payload }: DeleteSubscription) {\n\ttry {\n\t\tyield call(deletesSubscription, payload);\n\t\tyield call(fetchSubscriptionList)\n\t} catch (e) {\n\t\tyield put(handleErrorAction(null, e));\n\t}\n}\n\nasync function deletesSubscription(id: string) {\n\tconsole.log(id);\n\treturn await cps.deleteNotificationSubscription(id as Subscription[\"subscriptionId\"]);\n}\n\nexport const reducer = callbackReducer;\n\nexport const getMerchantState = (state: RootState) => state;","import { all } from \"redux-saga/effects\";\nimport { combineReducers } from \"redux\";\n\nimport * as account from \"./ducks/account.duck\";\nimport * as accounts from \"./ducks/accounts.duck\";\n// import * as auth from \"./ducks/auth.duck\";\nimport * as i18n from \"./ducks/i18n.duck\";\nimport * as gateway from \"./ducks/gateway.duck\";\nimport * as general from \"./ducks/general.duck\";\nimport * as layout from \"./ducks/layout.duck\";\nimport * as limits from \"./ducks/limits.duck\";\nimport * as merchants from \"./ducks/merchants.duck\";\nimport * as order from \"./ducks/order.duck\";\nimport * as orders from \"./ducks/orders.duck\";\nimport * as subscriptions from \"./ducks/subscriptions.duck\";\n\nexport interface RootState {\n\taccount: account.AccountState;\n\taccounts: accounts.AccountsState;\n\t// auth: auth.State;\n\ti18n: i18n.State;\n\tgateway: gateway.State;\n\tgeneral: general.GeneralState;\n\tlayout: layout.State,\n\tlimits: limits.State;\n\tmerchants: merchants.MerchantsState;\n\torder: order.OrderState;\n\torders: orders.OrdersState;\n\tsubscriptions: subscriptions.State;\n}\n\nexport const rootReducer = combineReducers({\n\taccount: account.reducer,\n\taccounts: accounts.reducer,\n\t// auth: auth.reducer,\n\tgateway: gateway.reducer,\n\tgeneral: general.reducer,\n\ti18n: i18n.reducer,\n\tlayout: layout.reducer,\n\tlimits: limits.reducer,\n\tmerchants: merchants.reducer,\n\torder: order.reducer,\n\torders: orders.reducer,\n\tsubscriptions: subscriptions.reducer,\n});\n\nexport function* rootSaga() {\n\tyield all([account.saga(), accounts.saga(),\n\t//auth.saga(),\n\tgateway.saga(), general.saga(),\n\tlayout.saga(), limits.saga(), merchants.saga(), order.saga(), orders.saga(),\n\tsubscriptions.saga()\n\t]);\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\n\nimport { rootReducer, rootSaga } from \"./rootDuck\";\n\nconst composeEnhancers = compose; //window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n\trootReducer,\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\n\n\ntype State = {\n\n}\n\ntype Props = {\n\ttransactions: Array<models.TransactionBase>;\n}\n\nexport default class TransactionsTable extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Table responsive className=\"table-hover\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{/*<th>Type</th>*/}\n\t\t\t\t\t\t\t<th>Transacation Id</th>\n\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t<th>Amount</th>\n\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.transactions.map((transaction, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={`${index}-${transaction.apiTransactionId}`}>\n\t\t\t\t\t\t\t\t\t\t{/*<td>{transaction.type}</td>*/}\n\t\t\t\t\t\t\t\t\t\t<td>{transaction.apiTransactionId}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{transaction.description}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{transaction.status}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{transaction.amount}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{new Date(transaction.createdAt).toISOString()}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { Chip } from \"@material-ui/core\";\nimport { Row, Col } from \"react-bootstrap\";\n\n\ntype State = {\n\n}\n\ntype Props = {\n\n}\n\nexport default class TransactionsFilter extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={4} md={4}>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Day\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Week\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Month\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"All\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={4} md={4}>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Deposits\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Withdrawals\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"All\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={4} md={4}>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Rejected\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Pending\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Chip className=\"m-2\"\n\t\t\t\t\t\t\tvariant=\"outlined\" label=\"Accepted\" color=\"secondary\"\n\t\t\t\t\t\t\tonDelete={() => { }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\n\nimport styles from \"./index.module.scss\";\n\nexport interface PaginationData {\n\tcount: number;\n\tpage: number;\n}\n\ntype PaginationState = {\n\tisItemsLengthActive: boolean;\n};\n\ntype PaginationProps = {\n\tcountMax: number;\n\tcountOnPage: number;\n\tpage: number;\n\titemsLength: number;\n\tsubmitPagination: (filter: PaginationData) => void;\n}\n\nexport default class PaginationActivity extends Component<PaginationProps, PaginationState> {\n\n\tconstructor(props: PaginationProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisItemsLengthActive: false\n\t\t}\n\t}\n\n\tonClickPaginationHandler = (page: number) => () => {\n\t\tthis.props.submitPagination({\n\t\t\tpage,\n\t\t\tcount: this.props.countOnPage\n\t\t});\n\t}\n\n\tonClickCountHandler = (countOnPage: number) => () => {\n\t\tthis.props.submitPagination({\n\t\t\tpage: 1,\n\t\t\tcount: countOnPage\n\t\t});\n\t\tthis.isItemsLengthActive();\n\t}\n\n\tisItemsLengthActive = () => {\n        this.setState({\n            isItemsLengthActive: !this.state.isItemsLengthActive\n        })\n    };\n\n\trender() {\n\t\t// if count of data less than 5 then pagination component will not display.\n\t\tif (this.props.countMax < 5 && this.props.countOnPage >= this.props.countMax) {\n\t\t\treturn null;\n\t\t}\n\t\tconst activePage = this.props.page;\n\n\t\tlet maxPage = Math.ceil(this.props.countMax / this.props.countOnPage);\n\t\tif (maxPage < activePage) {\n\t\t\tmaxPage = activePage;\n\t\t}\n\n\t\tlet listItems: Array<number> = [];\n\t\tfor (let i = (\n\t\t\tactivePage <= this.props.itemsLength) ? 1 : activePage - this.props.itemsLength;\n\t\t\ti <= maxPage && i <= activePage + this.props.itemsLength;\n\t\t\ti++\n\t\t) {\n\t\t\tlistItems.push(i);\n\t\t}\n\t\t//const ellipsisDown: number = (activePage - this.props.itemsLength * 2 < 1) ? 1 : activePage - this.props.itemsLength * 2\n\t\t//const ellipsisUp: number = (activePage + this.props.itemsLength * 2 > maxPage) ? maxPage : activePage + this.props.itemsLength * 2\n\t\treturn (\n\t\t\t<div className={styles.pagination_div}>\n\t\t\t\t<div className={styles.pagination_buttons}>\n\t\t\t\t\t<button disabled={activePage === 1} className={activePage !== 1 ? styles.button_active : styles.button_inactive} onClick={this.onClickPaginationHandler(1)}><img alt=\"\" src=\"images/chevron_left.svg\" /> Prev</button>\n\t\t\t\t\t{\n\t\t\t\t\t\tlistItems.map((value) => {\n\t\t\t\t\t\t\treturn (<button key={`pagination-${value}`} className={value === activePage ? styles.button_number_selected : styles.button_number} onClick={this.onClickPaginationHandler(value)}>{value}</button>);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<button disabled={activePage === maxPage} className={activePage < maxPage ? styles.button_active : styles.button_inactive}>Next <img alt=\"\" src=\"images/chevron_right.svg\" /></button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.count_items}>\n\t\t\t\t\t<div className={styles.items_title}>Show Items</div>\n\t\t\t\t\t<div className={styles.choose_block}>\n\t\t\t\t\t\t<div className={`${styles.item_block}`}>\n\t\t\t\t\t\t\t<div className={styles.item_choose} onClick={this.isItemsLengthActive}>\n\t\t\t\t\t\t\t\t<div className={styles.value}>{this.props.countOnPage}</div>\n\t\t\t\t\t\t\t\t<img src=\"images/arrow.svg\" alt='arrow' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.isItemsLengthActive && <div className={styles.sub_menu}>\n\t\t\t\t\t\t\t\t<div className={styles.element} onClick={this.onClickCountHandler(10)}>10</div>\n\t\t\t\t\t\t\t\t<div className={styles.element} onClick={this.onClickCountHandler(25)}>25</div>\n\t\t\t\t\t\t\t\t<div className={styles.element} onClick={this.onClickCountHandler(50)}>50</div>\n\t\t\t\t\t\t\t\t<div className={styles.element} onClick={this.onClickCountHandler(100)}>100</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport TransactionsFilter from \"./components/TransactionsFilter\";\nimport TransactionsTable from \"./components/TransactionsTable\";\nimport PaginationActivity from \"../../common/components/PaginationActivity/PaginationActivity\";\nimport * as account from \"../../../store/ducks/account.duck\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { RootState } from \"../../../store/rootDuck\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport * as helper from \"../../../utils/helper\";\n\ninterface ParamsAccountPath {\n\taccountId: string;\n}\n\ntype State = {\n\taccountId: string | null;\n}\n\ntype Props = RouteComponentProps<ParamsAccountPath> & ConnectedProps<typeof connector> & {\n\taccountData: account.AccountState[\"accountData\"];\n\ttransactionsFilter: account.AccountState[\"transactionsFilter\"];\n\tselectedTransaction: account.AccountState[\"selectedTransaction\"];\n\ttransactions: account.AccountState[\"transactions\"];\n\tgetAccountAction: typeof account.getAccountAction,\n\tgetTransactionAction: typeof account.getTransactionAction,\n\tgetTransactionsListAction: typeof account.getTransactionsListAction\n}\n\nexport class Account extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccountId: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst params = this.props.match.params;\n\t\tif (params.accountId) {\n\t\t\tif (this.state.accountId !== params.accountId) {\n\t\t\t\tthis.setState({ accountId: params.accountId }, this._loadAccountData);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({ accountId: null });\n\t\t}\n\t\t//const params = this.props.match.params;\n\t\t//if (params.accountId) {\n\t\t//\tthis.setState({ accountId: params.accountId });\n\n\t\t//\tthis.props.getAccountAction(params.accountId);\n\t\t//\tconst filter = this._parseQueryParamsToFilter(this.props);\n\t\t//\tif (this.props.history.location.search === \"\") {\n\t\t//\t\tthis.props.history.replace(`/account/${params.accountId}?${helper.parseObjectToQueryParams(filter)}`);\n\t\t//\t}\n\t\t//\tthis.props.getTransactionsListAction(params.accountId, filter);\n\t\t//} else {\n\t\t//\tthis.setState({ accountId: null });\n\t\t//}\n\t}\n\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tconst params = this.props.match.params;\n\t\tif (params.accountId) {\n\t\t\tif (this.state.accountId !== params.accountId) {\n\t\t\t\tthis.setState({ accountId: params.accountId }, this._loadAccountData);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({ accountId: null });\n\t\t}\n\t\t// maybe move to updateTransactionsFilter\n\t\tif (this.props.transactionsFilter !== prevProps.transactionsFilter) {\n\t\t\tthis.props.history.replace(`/account/${params.accountId}?${helper.parseObjectToQueryParams(this.props.transactionsFilter)}`);\n\t\t}\n\t}\n\n\tprivate _loadAccountData = () => {\n\t\tconst filter = this._parseQueryParamsToFilter(this.props);\n\t\tif (this.state.accountId !== null) {\n\t\t\tif (this.props.history.location.search === \"\") {\n\t\t\t\tthis.props.history.replace(`/account/${this.state.accountId}?${helper.parseObjectToQueryParams(filter)}`);\n\t\t\t}\n\t\t\tthis.props.getAccountAction(this.state.accountId);\n\t\t\tthis.props.getTransactionsListAction(this.state.accountId, filter);\n\t\t}\n\t}\n\n\tupdateTransactionsFilter = (newFilterData: { page: number, count: number } | models.FilterTransactions) => {\n\t\tconst filter: models.FilterTransactions = {\n\t\t\t...this.props.transactionsFilter,\n\t\t\t...newFilterData\n\t\t}\n\t\tif (this.state.accountId !== null) {\n\t\t\tthis.props.getTransactionsListAction(this.state.accountId, filter);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst account: models.Account | null = this.props.accountData;\n\t\tif (account === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<Row className=\"mb-4 mt-4\">\n\t\t\t\t<Col xs={12} md={12} className=\"mt-4 pl-4\">\n\t\t\t\t\t<Container className=\"general_container card\">\n\t\t\t\t\t\t<Row className=\"mb-4 mt-4\">\n\t\t\t\t\t\t\t<Col xs={6} md={4} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Account Id</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.apiAccountId}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Description</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.description}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t(account.type === models.AccountType.CRYPTO || account.type === models.AccountType.CRYPTO_DEPOSIT) &&\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Crypto Address</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>{account.address}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t(account.type === models.AccountType.CRYPTO_DEPOSIT) &&\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Order Id</label>\n\t\t\t\t\t\t\t\t\t\t\t<div><Link to={`/order/${account.apiOrderUuid}`}>{account.apiOrderUuid}</Link></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs={6} md={4} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Client Account Id</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.clientAccountId}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Merchant</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.merchant}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Tags</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.tags}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs={6} md={4} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Account type</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.type}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t(account.type === models.AccountType.CRYPTO || account.type === models.AccountType.CRYPTO_DEPOSIT) &&\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Network</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>{account.network}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Balance</label>\n\t\t\t\t\t\t\t\t\t\t<div>{account.balance} {account.currency}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Created At</label>\n\t\t\t\t\t\t\t\t\t\t<div>{new Date(account.createdAt).toISOString()}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t</Container>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={12} md={12} className=\"mt-4 pl-4\">\n\t\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfalse && // waiting for a beautiful design\n\t\t\t\t\t\t\t<TransactionsFilter />\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t<TransactionsTable\n\t\t\t\t\t\t\ttransactions={this.props.transactions !== null ? this.props.transactions.transactions : []}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.transactions !== null &&\n\t\t\t\t\t\t\t<PaginationActivity\n\t\t\t\t\t\t\t\tcountMax={this.props.transactions.countTransactions}\n\t\t\t\t\t\t\t\tcountOnPage={this.props.transactionsFilter.count}\n\t\t\t\t\t\t\t\tpage={this.props.transactionsFilter.page}\n\t\t\t\t\t\t\t\titemsLength={3}\n\t\t\t\t\t\t\t\tsubmitPagination={this.updateTransactionsFilter}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Container>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\n\tprivate _parseQueryParamsToFilter = (props: Props): models.FilterTransactions => {\n\t\tconst searchParams = new URLSearchParams(props.history.location.search);\n\n\t\tconst typeStr = searchParams.get(\"type\");\n\t\tconst status = searchParams.get(\"status\");\n\t\tconst dateFromStr = searchParams.get(\"dateFrom\");\n\t\tconst dateToStr = searchParams.get(\"dateTo\");\n\t\tconst countStr = searchParams.get(\"count\");\n\t\tconst pageStr = searchParams.get(\"page\");\n\n\t\treturn {\n\t\t\ttype: typeStr !== null ? models.TransactionType.ensure(typeStr) : undefined,\n\t\t\tstatus: status !== null ? (status) : undefined,\n\t\t\tdateFrom: (dateFromStr !== null) ? new Date(dateFromStr) : undefined,\n\t\t\tdateTo: (dateToStr !== null) ? new Date(dateToStr) : undefined,\n\t\t\tcount: (countStr !== null) ? Number.parseInt(countStr) : props.transactionsFilter.count,\n\t\t\tpage: (pageStr !== null) ? Number.parseInt(pageStr) : props.transactionsFilter.page\n\t\t}\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\taccountData: state.account.accountData,\n\ttransactionsFilter: state.account.transactionsFilter,\n\tselectedTransaction: state.account.selectedTransaction,\n\ttransactions: state.account.transactions\n});\n\nconst mapDispatch = {\n\tgetAccountAction: account.getAccountAction,\n\tgetTransactionAction: account.getTransactionAction,\n\tgetTransactionsListAction: account.getTransactionsListAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Account);","import ChipElement from \"./ChipElement\";\n\nexport default ChipElement;","import React, { Component } from \"react\";\n\nimport styles from \"./index.module.scss\";\n\n\ntype State = {\n\n};\n\ntype Props = {\n\tlabel: string,\n\tvariant: \"add\" | \"delete\" | \"disabled\",\n\tonClick?: () => void,\n\tclassName?: string\n}\n\nexport default class ChipElement extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tthis.props.variant === \"add\" &&\n\t\t\t\t\t<div className={`${styles.chip_element} ${styles.delete_variant} ${this.props.className && this.props.className}`}>\n\t\t\t\t\t\t{this.props.label} <img alt=\"close\" onClick={this.props.onClick} src=\"images/close_16x16.png\" />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.variant === \"delete\" &&\n\t\t\t\t\t<div className={`${styles.chip_element} ${styles.add_variant} ${this.props.className && this.props.className}`}>\n\t\t\t\t\t\t{this.props.label} <img alt=\"close\" onClick={this.props.onClick} src=\"images/plus_16x16.png\" />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.variant === \"disabled\" &&\n\t\t\t\t\t<div className={`${styles.chip_element} ${this.props.className && this.props.className}`}>\n\t\t\t\t\t\t{this.props.label}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t</>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Row, Col, InputGroup } from \"react-bootstrap\";\n\nimport ChipElement from \"../../../common/components/ChipElement\";\n\nexport type FilterPartForAccounts = {}\n\t| { balanceCondition: Array<string> }\n\t| { apiAccountId: string }\n\t| { clientAccountId: string }\n\t| { depositAddress: string };\n\nexport type FilterForAccounts = {\n\ttags: Array<string> | undefined;\n\tbalanceCondition: Array<string> | undefined;\n\tapiAccountId: string | undefined;\n\tclientAccountId: string | undefined;\n\tdepositAddress: string | undefined;\n}\ntype State = {\n\tdisableActions: boolean;\n}\n\ntype Props = {\n\ttagsSettings: Array<string>;\n\tfilter: FilterForAccounts;\n\tchangeFilter: (filterPart: FilterPartForAccounts) => void;\n}\n\nexport default class AccountsFilter extends Component<Props, State> {\n\n\tdisableActions: boolean;\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdisableActions: false\n\t\t}\n\t\tthis.disableActions = false;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.disableActions = false;\n\t}\n\n\tonChangeTagsHandler = (tag: string) => () => {\n\t\tif (this.props.filter.tags !== undefined) {\n\t\t\tconst tags = [...this.props.filter.tags];\n\t\t\tif (tags.includes(tag)) {\n\t\t\t\tthis.props.changeFilter({ tags: tags.filter(value => value !== tag) });\n\t\t\t} else {\n\t\t\t\ttags.push(tag);\n\t\t\t\tthis.props.changeFilter({ tags });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.props.changeFilter({ tags: [tag] });\n\t\t}\n\t}\n\n\tonChangeBalanceCondition = (condition: string) => () => {\n\t\tif (this.props.filter.balanceCondition !== undefined) {\n\t\t\tconst balanceCondition = [...this.props.filter.balanceCondition];\n\t\t\tif (balanceCondition.includes(condition)) {\n\t\t\t\tthis.props.changeFilter({ balanceCondition: balanceCondition.filter(value => value !== condition) });\n\t\t\t} else {\n\t\t\t\tbalanceCondition.push(condition);\n\t\t\t\tthis.props.changeFilter({ balanceCondition });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.props.changeFilter({ balanceCondition: [condition] });\n\t\t}\n\t}\n\n\tonChangeTextFieldHandler = (name: string) => (event: any) => {\n\n\t\t// check if click not enter\n\t\tif (event.charCode && event.charCode !== 13) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.disableActions) {\n\t\t\tthis.disableActions = true;\n\n\t\t\tlet value = event.target.value;\n\t\t\tif (value && value.length === 0) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\t\t\tswitch (name) {\n\t\t\t\tcase \"apiAccountId\":\n\t\t\t\t\tif (this.props.filter.apiAccountId !== value) {\n\t\t\t\t\t\tthis.props.changeFilter({ apiAccountId: value });\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase \"depositAddress\":\n\t\t\t\t\tif (this.props.filter.depositAddress !== value) {\n\t\t\t\t\t\tthis.props.changeFilter({ depositAddress: value });\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase \"clientAccountId\":\n\t\t\t\t\tif (this.props.filter.clientAccountId !== value) {\n\t\t\t\t\t\tthis.props.changeFilter({ clientAccountId: value });\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error(`Cann't find handler for TextField name: ${name}`)\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row className=\"align-items-center text-center\">\n\t\t\t\t\t<Col sm={4} xs={12} className=\"my-1\">\n\t\t\t\t\t\t<h6>Tags</h6>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.tagsSettings.map((tag, index) => {\n\t\t\t\t\t\t\t\tif (this.props.filter.tags && this.props.filter.tags.includes(tag)) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\t\t\t\tkey={`${tag}-${index}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={tag}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.onChangeTagsHandler(tag)}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"add\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\t\t\t\tkey={`${tag}-${index}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={tag}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.onChangeTagsHandler(tag)}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"delete\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={5} xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"accountIdFilter\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tlabel=\"Account Id\"\n\t\t\t\t\t\t\tplaceholder=\"Account Id\"\n\t\t\t\t\t\t\tdefaultValue={this.props.filter.apiAccountId}\n\t\t\t\t\t\t\tonKeyPress={this.onChangeTextFieldHandler(\"apiAccountId\")}\n\t\t\t\t\t\t\tonBlur={this.onChangeTextFieldHandler(\"apiAccountId\")}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"depositAddressFilter\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tlabel=\"Deposit Address\"\n\t\t\t\t\t\t\tplaceholder=\"Deposit Address\"\n\t\t\t\t\t\t\tdefaultValue={this.props.filter.depositAddress}\n\t\t\t\t\t\t\tonKeyPress={this.onChangeTextFieldHandler(\"depositAddress\")}\n\t\t\t\t\t\t\tonBlur={this.onChangeTextFieldHandler(\"depositAddress\")}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"clientAccountIdFilter\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tlabel=\"Client Account Id\"\n\t\t\t\t\t\t\tplaceholder=\"Client Account Id\"\n\t\t\t\t\t\t\tdefaultValue={this.props.filter.clientAccountId}\n\t\t\t\t\t\t\tonKeyPress={this.onChangeTextFieldHandler(\"clientAccountId\")}\n\t\t\t\t\t\t\tonBlur={this.onChangeTextFieldHandler(\"clientAccountId\")}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={3} xs={12} className=\"text-center my-1\">\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Checkbox value=\"POSITIVE\" aria-label=\"Positive Balance\" checked={this.props.filter.balanceCondition && this.props.filter.balanceCondition.includes(\"POSITIVE\")} onChange={this.onChangeBalanceCondition(\"POSITIVE\")} />\n\t\t\t\t\t\t\t\t<InputGroup.Text>Positive Balance</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Checkbox value=\"ZERO\" aria-label=\"Zero balance\" checked={this.props.filter.balanceCondition && this.props.filter.balanceCondition.includes(\"ZERO\")} onChange={this.onChangeBalanceCondition(\"ZERO\")} />\n\t\t\t\t\t\t\t\t<InputGroup.Text>Zero balance</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Checkbox value=\"NEGATIVE\" aria-label=\"Negative Balance\" checked={this.props.filter.balanceCondition && this.props.filter.balanceCondition.includes(\"NEGATIVE\")} onChange={this.onChangeBalanceCondition(\"NEGATIVE\")} />\n\t\t\t\t\t\t\t\t<InputGroup.Text>Negative Balance</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component, ChangeEvent } from \"react\";\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from \"@material-ui/core\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport ChipElement from \"./ChipElement\";\n\nexport interface MerchantsList {\n\tmerchants: Array<string>\n}\n\ntype State = {\n\tselectedMerchant?: string;\n}\n\ntype Props = {\n\tmerchants: MerchantsList[\"merchants\"];\n\tfilterMerchants: MerchantsList[\"merchants\"];\n\tchangeFilter: (filterPart: MerchantsList) => void;\n}\n\nexport default class FilterByMerchant extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\n\tonChangeMerchantInput = (event: ChangeEvent<{}>, value: string | null) => {\n\t\tthis.setState({ selectedMerchant: value !== null ? value : undefined });\n\t}\n\n\tsubmitSelectedMerchant = (event: any) => {\n\t\tconst selectedMerchant = this.state.selectedMerchant;\n\t\tconst filterMerchants = this.props.filterMerchants.slice();\n\t\tif (selectedMerchant !== undefined) {\n\t\t\tif (filterMerchants.includes(selectedMerchant)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfilterMerchants.push(selectedMerchant);\n\t\t\tthis.props.changeFilter({ merchants: filterMerchants });\n\t\t}\n\t}\n\n\tonDeleteMerchantHandler = (merchant: string) => () => {\n\t\tlet filterMerchants = this.props.filterMerchants;\n\t\tif (filterMerchants.includes(merchant)) {\n\t\t\tfilterMerchants = filterMerchants.filter((item, index, array) => { return item !== merchant });\n\t\t\tthis.props.changeFilter({ merchants: filterMerchants });\n\t\t}\n\t}\n\tonSelectAllMerchants = () => {\n\t\tthis.props.changeFilter({ merchants: [] });\n\t}\n\n\trender() {\n\t\tconst isFilterMerchantsEmpty = this.props.filterMerchants.length === 0;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t<Col sm={6} xs={12} className=\"my-1\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisFilterMerchantsEmpty &&\n\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\tlabel=\"Selected all\"\n\t\t\t\t\t\t\t\tvariant=\"disabled\"\n\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isFilterMerchantsEmpty &&\n\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\tlabel=\"Select all\"\n\t\t\t\t\t\t\t\tonClick={this.onSelectAllMerchants}\n\t\t\t\t\t\t\t\tvariant=\"delete\"\n\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isFilterMerchantsEmpty &&\n\t\t\t\t\t\t\tthis.props.filterMerchants.map((merchant, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\t\t\tkey={merchant}\n\t\t\t\t\t\t\t\t\t\tlabel={merchant}\n\t\t\t\t\t\t\t\t\t\tonClick={this.onDeleteMerchantHandler(merchant)}\n\t\t\t\t\t\t\t\t\t\tvariant=\"add\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={4} xs={6} className=\"text-center my-1\"> <Autocomplete\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\toptions={this.props.merchants}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Select merchant\" variant=\"outlined\" />}\n\t\t\t\t\t\tonChange={this.onChangeMerchantInput}\n\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={2} xs={6} className=\"text-center my-1\">\n\t\t\t\t\t\t<Button onClick={this.submitSelectedMerchant} variant=\"outline-secondary\">Add Merchant</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component, ChangeEvent } from \"react\";\n\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport ChipElement from \"./ChipElement\";\n\nimport * as helper from \"../../../utils/helper\";\n\nexport interface CurrenciesList {\n\tcurrencies: Array<string>\n}\n\ntype State = {\n\tselectedCurrency?: string;\n}\n\ntype Props = {\n\tcurrencies: CurrenciesList[\"currencies\"];\n\tfilterCurrencies: CurrenciesList[\"currencies\"];\n\tchangeFilter: (filterPart: CurrenciesList) => void;\n}\n\nexport default class FilterByCurrency extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\n\tonChangeCurrencyAutocomplete = (event: ChangeEvent<{}>, value: helper.CurrencyPriority | null) => {\n\t\tif (value !== null) {\n\t\t\tthis.setState({ selectedCurrency: value.value });\n\t\t}\n\t}\n\n\tsubmitSelectedCurrency = (event: any) => {\n\t\tconst selectedCurrency = this.state.selectedCurrency;\n\t\tconst filterCurrencies = this.props.filterCurrencies.slice();\n\t\tif (selectedCurrency !== undefined) {\n\t\t\tif (filterCurrencies.includes(selectedCurrency)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfilterCurrencies.push(selectedCurrency);\n\t\t\tthis.props.changeFilter({ currencies: filterCurrencies });\n\t\t}\n\t}\n\n\tonDeleteCurrencyHandler = (currency: string) => () => {\n\t\tlet filterCurrencies = this.props.filterCurrencies;\n\t\tif (filterCurrencies.includes(currency)) {\n\t\t\tfilterCurrencies = filterCurrencies.filter((item, index, array) => { return item !== currency });\n\t\t\tthis.props.changeFilter({ currencies: filterCurrencies });\n\t\t}\n\t}\n\tonSelectAllCurrencies = () => {\n\t\tthis.props.changeFilter({ currencies: [] });\n\t}\n\n\trender() {\n\t\tconst isFilterCurrenciesEmpty = this.props.filterCurrencies.length === 0;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t<Col sm={6} xs={12} className=\"my-1\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisFilterCurrenciesEmpty &&\n\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\tlabel=\"Selected all\"\n\t\t\t\t\t\t\t\tvariant=\"disabled\"\n\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isFilterCurrenciesEmpty &&\n\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\tlabel=\"Select all\"\n\t\t\t\t\t\t\t\tonClick={this.onSelectAllCurrencies}\n\t\t\t\t\t\t\t\tvariant=\"delete\"\n\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isFilterCurrenciesEmpty &&\n\t\t\t\t\t\t\tthis.props.filterCurrencies.map((currency, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ChipElement\n\t\t\t\t\t\t\t\t\t\tkey={currency}\n\t\t\t\t\t\t\t\t\t\tlabel={currency}\n\t\t\t\t\t\t\t\t\t\tonClick={this.onDeleteCurrencyHandler(currency)}\n\t\t\t\t\t\t\t\t\t\tvariant=\"add\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={4} xs={6} className=\"text-center my-1\">\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\toptions={helper.convertCurrenciesForAutocomplite(this.props.currencies).sort((a, b) => { return a.priority - b.priority })}\n\t\t\t\t\t\t\tgroupBy={(option) => option.type}\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option.value}\n\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Select Currency\" variant=\"outlined\" />}\n\t\t\t\t\t\t\tonChange={this.onChangeCurrencyAutocomplete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={2} xs={6} className=\"text-center my-1\">\n\t\t\t\t\t\t<Button onClick={this.submitSelectedCurrency} variant=\"outline-secondary\">Add Currency</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n//const mapState = (state: RootState) => ({\n//\tcurrencies: state.merchants.settings.currencies,\n//\tfilterCurrencies: state.merchants.filter.currencies,\n//});\n\n//const mapDispatch = {\n//\tupdateMerchantsFilterAction,\n//\tloadMerchantsAction\n//}\n\n//const connector = connect(mapState, mapDispatch);\n\n//export default connector(FilterByCurrency);","import PaginationActivity from \"./PaginationActivity\";\n\nexport default PaginationActivity;","import React, { Component } from \"react\";\n\nimport ChipElement from \"../../common/components/ChipElement\";\n\nexport interface ColumnSettings {\n\tactiveColumns: Array<string>;\n}\ntype State = {\n};\n\ntype Props = {\n\tcolumns: Array<string>;\n\tlabels: { [key: string]: string };\n\tactiveColumns: Array<string>;\n\tupdateActiveColumns: (activeColumns: Array<string>) => void;\n}\n\nexport default class TableColumnSettings extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {}\n\t}\n\n\tcolumnDeleteHandler = (name: string) => () => {\n\t\tlet activeColumns = [...this.props.activeColumns];\n\t\tif (activeColumns.includes(name)) {\n\t\t\tactiveColumns = activeColumns.filter((item, index, array) => { return item !== name });\n\t\t} else {\n\t\t\tactiveColumns.push(name);\n\t\t}\n\t\tthis.props.updateActiveColumns(activeColumns);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.props.activeColumns.map((column, index) => {\n\t\t\t\t\t\tif (this.props.columns.includes(column) && this.props.labels[column]) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ChipElement \n\t\t\t\t\t\t\t\t\tkey={`${column}-${index}`} \n\t\t\t\t\t\t\t\t\tlabel={this.props.labels[column]} \n\t\t\t\t\t\t\t\t\tonClick={this.columnDeleteHandler(column)}\n\t\t\t\t\t\t\t\t\tvariant=\"delete\"\n\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.columns.map((column, index) => {\n\t\t\t\t\t\tif (!this.props.activeColumns.includes(column) && this.props.labels[column]) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ChipElement \n\t\t\t\t\t\t\t\t\tkey={`${column}-${index}`} \n\t\t\t\t\t\t\t\t\tlabel={this.props.labels[column]} \n\t\t\t\t\t\t\t\t\tonClick={this.columnDeleteHandler(column)}\n\t\t\t\t\t\t\t\t\tvariant=\"add\"\n\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport { Accordion, Card, Row, Col } from \"react-bootstrap\";\nimport AccountsFilter, { FilterPartForAccounts } from \"./components/AccountsFilter\";\nimport AccountsTable, { AccountsColumnsLabels, AccountsColumnsArray } from \"./components/AccountsTable\";\nimport FilterByMerchant, { MerchantsList } from \"../../common/components/FilterByMerchant\";\nimport FilterByCurrency, { CurrenciesList } from \"../../common/components/FilterByCurrency\";\nimport PaginationActivity from \"../../common/components/PaginationActivity\";\nimport TableColumnSettings, { ColumnSettings } from \"../../common/components/TableColumnSettings\";\n\nimport { updateAccountsColumnsAction, getAccountsListAction, getAccountsSettingsAction } from \"../../../store/ducks/accounts.duck\";\nimport { RootState } from \"../../../store/rootDuck\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { PaginationData } from \"../../common/components/PaginationActivity/PaginationActivity\";\n\nimport * as helper from \"../../../utils/helper\";\nimport * as _ from \"lodash\";\n\ntype FilterPart = MerchantsList\n\t| CurrenciesList\n\t| PaginationData\n\t| FilterPartForAccounts;\n\ntype State = {\n\tfilter: models.FilterAccounts;\n}\n\ntype Props = RouteComponentProps<{}> &\n\tConnectedProps<typeof connector> & {\n\t\taccounts: models.Accounts | null;\n\t\tcolumnSettings: ColumnSettings;\n\t\tfilterSettings: models.FilterSettingsAccounts | null;\n\t\tpermissions: Array<models.DashboardPermission>;\n\t\t\n\t\tgetAccountsListAction: typeof getAccountsListAction,\n\t\tgetAccountsSettingsAction: typeof getAccountsSettingsAction,\n\t\tupdateAccountsColumnsAction: typeof updateAccountsColumnsAction\n\t}\n\nexport class Accounts extends Component<Props, State> {\n\n\tprivate readonly defaultFilter: models.FilterAccounts = {\n\t\tcurrencies: undefined,\n\t\tmerchants: undefined,\n\t\tbalanceCondition: undefined,\n\t\tapiAccountId: undefined,\n\t\tclientAccountId: undefined,\n\t\ttags: [\"HOT\", \"USER\", \"FEE\"],\n\t\tdepositAddress: undefined,\n\t\tcount: 25,\n\t\tpage: 1\n\t};\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfilter: this.defaultFilter\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getAccountsSettingsAction();\n\n\t\tif (this.props.history.location.search !== \"\") {\n\t\t\tconst filter = this.parseQueryParamsToFilter();\n\t\t\tthis.setState({ filter });\n\t\t} else {\n\t\t\tthis.props.history.replace(`/accounts?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\t\t}\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tif (this.props.history.location.search === \"\") {\n\t\t\t// set default filter\n\t\t\tthis.props.history.replace(`/accounts?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\t\t} else {\n\t\t\tconst filterByParams = this.parseQueryParamsToFilter();\n\t\t\tif (!_.isEqual(filterByParams, this.state.filter)) {\n\t\t\t\tthis.setState({ filter: filterByParams });\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.filter !== prevState.filter) {\n\t\t\tthis.props.getAccountsListAction(this.state.filter);\n\t\t}\n\t}\n\n\tparseQueryParamsToFilter = (): models.FilterAccounts => {\n\t\tconst searchParams = new URLSearchParams(this.props.history.location.search);\n\n\t\tconst merchants = searchParams.get(\"merchants\");\n\t\tconst currencies = searchParams.get(\"currencies\");\n\n\t\tconst balanceCondition = searchParams.get(\"balanceCondition\");\n\t\tconst apiAccountId = searchParams.get(\"apiAccountId\");\n\t\tconst clientAccountId = searchParams.get(\"clientAccountId\");\n\t\tconst tags = searchParams.get(\"tags\");\n\t\tconst depositAddress = searchParams.get(\"depositAddress\");\n\t\tconst countStr = searchParams.get(\"count\");\n\t\tconst pageStr = searchParams.get(\"page\");\n\n\t\treturn {\n\t\t\tmerchants: merchants !== null ? merchants.split(\",\") : undefined,\n\t\t\tcurrencies: currencies !== null ? currencies.split(\",\") : undefined,\n\t\t\tbalanceCondition: balanceCondition !== null ? balanceCondition.split(\",\") : undefined,\n\t\t\tapiAccountId: apiAccountId !== null ? apiAccountId : undefined,\n\t\t\t//apiOrderId: apiOrderId !== null ? apiOrderId : undefined,\n\t\t\tclientAccountId: clientAccountId !== null ? clientAccountId : undefined,\n\t\t\ttags: tags !== null ? (tags).split(\",\") : this.defaultFilter.tags,\n\t\t\tdepositAddress: depositAddress !== null ? depositAddress : undefined,\n\t\t\tcount: (countStr !== null) ? Number.parseInt(countStr) : this.defaultFilter.count,\n\t\t\tpage: (pageStr !== null) ? Number.parseInt(pageStr) : this.defaultFilter.page,\n\t\t}\n\t}\n\n\tchangeDataFilterHandler = (\n\t\tfilterPart: FilterPart\n\t) => {\n\t\tconst filter = {\n\t\t\t...this.state.filter,\n\t\t\t...filterPart\n\t\t};\n\t\tthis.props.history.push(`/accounts?${helper.parseObjectToQueryParams(filter)}`);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Accordion defaultActiveKey=\"0\" className=\"mb-4\">\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t<Row className=\"text-center\">\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"0\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Select Merchants</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"1\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Select Currencies</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"2\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Filter Assets</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"3\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Column Settings</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<FilterByMerchant\n\t\t\t\t\t\t\t\t\tmerchants={this.props.filterSettings !== null ? [...this.props.filterSettings.merchants] : []}\n\t\t\t\t\t\t\t\t\tfilterMerchants={this.state.filter.merchants ? this.state.filter.merchants : []}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeDataFilterHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<FilterByCurrency\n\t\t\t\t\t\t\t\t\tcurrencies={this.props.filterSettings !== null ? [...this.props.filterSettings.currencies] : []}\n\t\t\t\t\t\t\t\t\tfilterCurrencies={this.state.filter.currencies ? this.state.filter.currencies : []}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeDataFilterHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<AccountsFilter\n\t\t\t\t\t\t\t\t\ttagsSettings={this.props.filterSettings ? [...this.props.filterSettings.tags] : []}\n\t\t\t\t\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeDataFilterHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"3\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<TableColumnSettings\n\t\t\t\t\t\t\t\t\tcolumns={AccountsColumnsArray}\n\t\t\t\t\t\t\t\t\tlabels={AccountsColumnsLabels}\n\t\t\t\t\t\t\t\t\tactiveColumns={this.props.columnSettings.activeColumns}\n\t\t\t\t\t\t\t\t\tupdateActiveColumns={this.props.updateAccountsColumnsAction}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t</Card>\n\t\t\t\t</Accordion>\n\n\t\t\t\t<AccountsTable\n\t\t\t\t\taccounts={this.props.accounts !== null ? this.props.accounts.accounts : []}\n\t\t\t\t\tcolumns={this.props.columnSettings.activeColumns}\n\t\t\t\t\tpermissions={this.props.permissions}\n\t\t\t\t/>\n\t\t\t\t<PaginationActivity\n\t\t\t\t\tcountMax={this.props.accounts !== null ? this.props.accounts.countAccounts : 0}\n\t\t\t\t\tcountOnPage={this.state.filter.count}\n\t\t\t\t\tpage={this.state.filter.page}\n\t\t\t\t\titemsLength={3}\n\t\t\t\t\tsubmitPagination={this.changeDataFilterHandler}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\taccounts: state.accounts.accounts,\n\tcolumnSettings: state.accounts.columnSettings,\n\tfilterSettings: state.accounts.filterSettings,\n\tpermissions: []//state.auth.permissions,\n});\n\nconst mapDispatch = {\n\tgetAccountsListAction,\n\tgetAccountsSettingsAction,\n\tupdateAccountsColumnsAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Accounts);","import React, { Component } from \"react\";\nimport { Row, Col, Card, CardColumns } from \"react-bootstrap\";\nimport Chart from \"chart.js\";\n\ntype State = {}\ntype Props = {}\n\nexport default class OverviewMerchnat extends Component<Props, State> {\n\tchartCountOrdersRef = React.createRef<HTMLCanvasElement>();\n\tchartTurnover = React.createRef<HTMLCanvasElement>();\n\n\tcomponentDidMount() {\n\t\tconst chartCountOrdersContext = this.chartCountOrdersRef.current!.getContext(\"2d\");\n\t\tif (chartCountOrdersContext !== null) {\n\t\t\tcreateChartCountOrders(chartCountOrdersContext);\n\t\t}\n\t\tconst chartTurnoverContext = this.chartTurnover.current!.getContext(\"2d\")\n\t\tif (chartTurnoverContext !== null) {\n\t\t\tcreateChartTurnover(chartTurnoverContext);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col sm={6} xs={12} className=\"my-2\">\n\t\t\t\t\t<canvas\n\t\t\t\t\t\tid=\"chartCountOrders\"\n\t\t\t\t\t\tref={this.chartCountOrdersRef}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} xs={12} className=\"my-2\">\n\t\t\t\t\t<canvas\n\t\t\t\t\t\tid=\"chartTurnover\"\n\t\t\t\t\t\tref={this.chartTurnover}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={12} xs={12} className=\"my-2\">\n\t\t\t\t\t<h5 className=\"ml-5\">News?</h5>\n\t\t\t\t\t<CardColumns>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title>Card title that wraps to a new line</Card.Title>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\tThis is a longer card with supporting text below as a natural lead-in to\n\t\t\t\t\t\t\t\t\tadditional content. This content is a little bit longer.\n     \t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card className=\"p-3\">\n\t\t\t\t\t\t\t<blockquote className=\"blockquote mb-0 card-body\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n\t\t\t\t\t\t\t\t\terat a ante.\n     \t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<footer className=\"blockquote-footer\">\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">\n\t\t\t\t\t\t\t\t\t\tSomeone famous in <cite title=\"Source Title\">Source Title</cite>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</footer>\n\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title>Card title</Card.Title>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\tThis card has supporting text below as a natural lead-in to additional\n        \t\t\t\t\t\t\tcontent.{' '}\n\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t<small className=\"text-muted\">Last updated 3 mins ago</small>\n\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card bg=\"primary\" text=\"white\" className=\"text-center p-3\">\n\t\t\t\t\t\t\t<blockquote className=\"blockquote mb-0 card-body\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n\t\t\t\t\t\t\t\t\terat a ante.\n     \t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<footer className=\"blockquote-footer\">\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">\n\t\t\t\t\t\t\t\t\t\tSomeone famous in <cite title=\"Source Title\">Source Title</cite>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</footer>\n\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card className=\"text-center\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title>Card title</Card.Title>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\tThis card has supporting text below as a natural lead-in to additional\n       \t\t\t\t\t\t\t content.{' '}\n\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Last updated 3 mins ago</small>\n\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Img src=\"holder.js/100px160\" />\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card className=\"text-right\">\n\t\t\t\t\t\t\t<blockquote className=\"blockquote mb-0 card-body\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n\t\t\t\t\t\t\t\t\terat a ante.\n      \t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<footer className=\"blockquote-footer\">\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">\n\t\t\t\t\t\t\t\t\t\tSomeone famous in <cite title=\"Source Title\">Source Title</cite>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</footer>\n\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title>Card title</Card.Title>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\tThis is a wider card with supporting text below as a natural lead-in to\n\t\t\t\t\t\t\t\t\tadditional content. This card has even longer content than the first to\n\t\t\t\t\t\t\t\t\tshow that equal height action.\n      \t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Last updated 3 mins ago</small>\n\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardColumns>\n\t\t\t\t</Col>\n\t\t\t</Row >\n\t\t)\n\t}\n}\n\nconst data = {\n\tlabels: [\n\t  \"Label 1\",\n\t  \"Label 2\",\n\t  \"Label 3\",\n\t  \"Label 4\",\n\t  \"Label 5\",\n\t  \"Label 6\",\n\t  \"Label 7\",\n\t  \"Label 8\",\n\t  \"Label 9\",\n\t  \"Label 10\",\n\t  \"Label 11\",\n\t  \"Label 12\",\n\t  \"Label 13\",\n\t  \"Label 14\",\n\t  \"Label 15\",\n\t  \"Label 16\"\n\t],\n\tdatasets: [\n\t  {\n\t\t// label: 'dataset 1',\n\t\tbackgroundColor: \"green\",\n\t\tdata: [15, 20, 25, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20]\n\t  },\n\t  {\n\t\t// label: 'dataset 2',\n\t\tbackgroundColor: \"#f3f3fb\",\n\t\tdata: [10, 12, 10, 30, 25, 20, 15, 20, 25, 30, 25, 20, 15, 10, 15, 20]\n\t  }\n\t]\n  }\n\nfunction createChartCountOrders(context: CanvasRenderingContext2D) {\n\tnew Chart(context, {\n\t\tdata,\n\t\ttype: \"bar\",\n\t\toptions: {\n\t\t  title: { display: false },\n\t\t  tooltips: {\n\t\t\tintersect: false,\n\t\t\tmode: \"nearest\",\n\t\t\txPadding: 10,\n\t\t\tyPadding: 10,\n\t\t\tcaretPadding: 10\n\t\t  },\n\t\t  legend: { display: false },\n\t\t  responsive: true,\n\t\t  maintainAspectRatio: false,\n\t\t//  barRadius: 4,\n\t\t  scales: {\n\t\t\txAxes: [{ display: false, stacked: true }],\n\t\t\tyAxes: [{ display: false, stacked: true }]\n\t\t  },\n\t\t  layout: { padding: { left: 0, right: 0, top: 0, bottom: 0 } }\n\t\t}\n\t  })\n}\n\nfunction createChartTurnover(context: CanvasRenderingContext2D) {\n\tnew Chart(context, {\n\t\ttype: \"line\",\n\t\tdata: {\n\t\t\t//Bring in data\n\t\t\tlabels: [\"Jan\", \"Feb\", \"March\"],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Turnover\",\n\t\t\t\t\tdata: [86, 67, 91],\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\toptions: {\n\t\t\t//Customize chart options\n\t\t}\n\t});\n}","import React, { Component } from \"react\";\n\nimport OverviewMerchant from \"./overview/OverviewMerchant\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../../store/rootDuck\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\n\n\ntype State = {\n}\n\ntype Props = {\n\tpermissions: Array<DashboardPermission>;\n}\n\nexport class Merchant extends Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tcomponentDidMount() {\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<OverviewMerchant />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tpermissions: []//state.auth.permissions\n});\n\nconst mapDispatch = {\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Merchant);","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../../../store/rootDuck\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\n\ntype State = {\n}\n\ntype Props = {\n\tfilterCurrencies: Array<string>;\n\tfilterMerchants: Array<string>;\n\tfilterSettings: models.FilterSettingsMerchants | null;\n\tmerchants: models.Merchants[\"merchants\"];\n\tpermissions: Array<models.DashboardPermission>;\n}\n\nexport class MerchantsTable extends Component<Props, State> {\n\n\trender() {\n\t\tconst merchantsToShow: Array<string> = (this.props.filterMerchants.length > 0)\n\t\t\t? this.props.filterMerchants\n\t\t\t: this.props.filterSettings !== null\n\t\t\t\t? [...this.props.filterSettings.merchants] : []\n\t\treturn (\n\t\t\t<Table responsive className=\"table-hover text-center\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th className=\"border-right\">Merchant Provider</th>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.filterCurrencies.map((currency, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<React.Fragment key={currency}>\n\t\t\t\t\t\t\t\t\t\t<th>Balance {currency}</th>\n\t\t\t\t\t\t\t\t\t\t<th>Turnover {currency}</th>\n\t\t\t\t\t\t\t\t\t\t<th className=\"border-right\">Fee {currency}</th>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tmerchantsToShow.map((merchantName, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={merchantName}>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<p>{merchantName}</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td className=\"border-right\">{this.props.merchants[merchantName]?.merchantProvider}</td>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.props.filterCurrencies.map((currency, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment key={`${merchantName}-${currency}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.props.merchants[merchantName]?.financial[currency] ? this.props.merchants[merchantName]?.financial[currency]?.balance : 0}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.props.merchants[merchantName]?.financial[currency] ? this.props.merchants[merchantName]?.financial[currency]?.turnover : 0}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"border-right\">{this.props.merchants[merchantName]?.financial[currency] ? this.props.merchants[merchantName]?.financial[currency]?.fee : 0}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tfilterSettings: state.merchants.settings,\n\tmerchants: state.merchants.merchants?.merchants ? state.merchants.merchants.merchants : {},\n\tpermissions: []//state.auth.permissions,\n\t\n});\n\nconst connector = connect(mapState);\n\nexport default connector(MerchantsTable);","export function startDay(date?: Date): Date {\n\tconst startDay = new Date (_checkDate(date));\n\tstartDay.setHours(0, 0, 0, 0);\n\treturn startDay;\n}\nexport function endDay(date?: Date): Date {\n\tconst endDay = new Date (_checkDate(date));\n\tendDay.setHours(23, 59, 59, 999);\n\treturn endDay;\n}\nexport function lastMonth(date?: Date): Date {\n\tconst lastMonth = new Date (_checkDate(date));\n\tlastMonth.setDate(1);\n\tlastMonth.setHours(0, 0, 0, 0);\n\treturn lastMonth;\n}\nexport function lastYear(date?: Date): Date {\n\tconst lastYear = new Date (_checkDate(date));\n\tlastYear.setMonth(0);\n\tlastYear.setDate(1);\n\tlastYear.setHours(0, 0, 0, 0);\n\treturn lastYear;\n}\nexport function dayToDate (date?: Date): Date {\n\tconst dayToDate = new Date (_checkDate(date));\n\tdayToDate.setDate(dayToDate.getDate() - 1);\n\treturn dayToDate;\n}\nexport function weekToDate(date?: Date): Date {\n\t\n\tconst weekToDate = new Date (_checkDate(date));\n\tweekToDate.setDate(weekToDate.getDate() - 7);\n\treturn weekToDate;\n}\nexport function monthToDate(date?: Date): Date {\n\tconst monthToDate = new Date (_checkDate(date));\n\tmonthToDate.setMonth(monthToDate.getMonth() - 1);\n\treturn monthToDate;\n}\nexport function yearToDate(date?: Date): Date {\n\tconst yearToDate = new Date (_checkDate(date));\n\tyearToDate.setFullYear(yearToDate.getFullYear() - 1);\n\treturn yearToDate;\n}\n\nfunction _checkDate(date: Date | undefined): Date {\n\treturn (date !== undefined) ? date : new Date();\n}","import React, { Component } from \"react\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Box, Link } from \"@material-ui/core\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport * as dateUtil from \"../../../utils/dateUtil\";\nimport { handleErrorAction } from \"../../../store/ducks/general.duck\";\n\nexport interface DateFilter {\n\tdateFrom?: Date;\n\tdateTo?: Date;\n}\n\ntype State = DateFilter & {\n\n};\n\ntype Props = DateFilter & {\n\tchangeFilter: (filterPart: DateFilter) => void;\n\tisDateRequired?: boolean;\n\terrorHandler?: typeof handleErrorAction;\n};\n\nexport default class FilterByDate extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdateFrom: props.dateFrom,\n\t\t\tdateTo: props.dateTo\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps (nextProps: Props, prevState: State) {\n\t\treturn ({\n\t\t\tdateFrom: nextProps.dateFrom,\n\t\t\tdateTo: nextProps.dateTo\n\t\t})\n\t}\n\n\tchooseLazyDateHandler = (dateFrom: Date, dateTo: Date) => (): void => {\n\t\tthis.props.changeFilter({ dateFrom, dateTo });\n\t}\n\n\tchangeDateHandler = (dateName: keyof State) => (date: Date | null): void => {\n\t\tswitch (dateName) {\n\t\t\tcase \"dateFrom\":\n\t\t\t\tthis.setState ({ dateFrom: date !== null ? date : undefined });\n\t\t\t\treturn;\n\t\t\tcase \"dateTo\":\n\t\t\t\tthis.setState ({ dateTo: date !== null ? date : undefined })\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tclickDateFilterHandler = (): void => {\n\n\t\tif (this.props.isDateRequired) {\n\t\t\tif (!this.state.dateFrom || !this.state.dateTo) {\n\t\t\t\tif (this.props.errorHandler) {\n\t\t\t\t\tthis.props.errorHandler ('Invalid date. \"Date From\" and \"Date To\" are required fields', null);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error ('Invalid date. \"Date From\" and \"Date To\" are required fields');\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.props.changeFilter({\n\t\t\tdateFrom: this.state.dateFrom,\n\t\t\tdateTo: this.state.dateTo\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t<Row className=\"text-center\">\n\t\t\t\t\t<Col sm={6} xs={12} className=\"my-1\">\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\tlabel=\"Date from\"\n\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy, HH:mm\"\n\t\t\t\t\t\t\t\tvalue={this.state.dateFrom}\n\t\t\t\t\t\t\t\tonChange={this.changeDateHandler(\"dateFrom\")}\n\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"mx-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\tlabel=\"Date to\"\n\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy, HH:mm\"\n\t\t\t\t\t\t\t\tvalue={this.state.dateTo}\n\t\t\t\t\t\t\t\tonChange={this.changeDateHandler(\"dateTo\")}\n\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"mx-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button onClick={this.clickDateFilterHandler} variant=\"outline-secondary\" className=\"mx-2\">Set date</Button>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={6} xs={12} className=\"my-1\">\n\t\t\t\t\t\t<ul className=\"text-center mb-0 pl-0\">\n\t\t\t\t\t\t\t<ul className=\"list-inline\">\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.startDay(), dateUtil.endDay())}>Today </Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.dayToDate(), dateUtil.endDay())}>Last 24 hour</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.lastMonth(), dateUtil.endDay())}>This month</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.lastYear(), dateUtil.endDay())}>This year</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<ul className=\"list-inline\">\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.weekToDate(), dateUtil.endDay())}>Week to date</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.monthToDate(), dateUtil.endDay())}>Month to date</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"list-inline-item mx-2\">\n\t\t\t\t\t\t\t\t\t<Link className=\"h6\" onClick={this.chooseLazyDateHandler(dateUtil.yearToDate(), dateUtil.endDay())}>Year to date</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</MuiPickersUtilsProvider >\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { Accordion, Card, Row, Col } from \"react-bootstrap\";\nimport MerchantsTable from \"./components/MerchantsTable\";\nimport FilterByMerchant, { MerchantsList } from \"../../common/components/FilterByMerchant\";\nimport FilterByDate, { DateFilter } from \"../../common/components/FilterByDate\";\nimport FilterByCurrency, { CurrenciesList } from \"../../common/components/FilterByCurrency\";\nimport PaginationActivity from \"../../common/components/PaginationActivity\";\n\nimport { handleErrorAction } from \"../../../store/ducks/general.duck\";\nimport { getMerchantsSettingsAction, getMerchantsListAction } from \"../../../store/ducks/merchants.duck\";\nimport { RootState } from \"../../../store/rootDuck\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { PaginationData } from \"../../common/components/PaginationActivity/PaginationActivity\";\n\nimport * as helper from \"../../../utils/helper\";\nimport * as dateUtil from \"../../../utils/dateUtil\";\nimport * as _ from \"lodash\";\n\ntype FilterPart = DateFilter\n\t| MerchantsList\n\t| CurrenciesList\n\t| PaginationData;\n\ntype State = {\n\tfilter: models.FilterMerchants\n}\n\ntype Props = RouteComponentProps<{}> & {\n\tmerchants: models.Merchants | null;\n\tsettings: models.FilterSettingsMerchants | null;\n\tgetMerchantsSettingsAction: typeof getMerchantsSettingsAction,\n\tgetMerchantsListAction: typeof getMerchantsListAction,\n\thandleErrorAction: typeof handleErrorAction\n}\n\nexport class Merchants extends Component<Props, State> {\n\n\tprivate readonly defaultFilter: models.FilterMerchants = {\n\t\tmerchants: [],\n\t\tcurrencies: [\"USD\", \"EUR\"],\n\t\tdateFrom: dateUtil.dayToDate(),\n\t\tdateTo: dateUtil.endDay(),\n\t\tcount: 20,\n\t\tpage: 1\n\t}\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilter: this.defaultFilter\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getMerchantsSettingsAction();\n\n\t\tif (this.props.history.location.search !== \"\") {\n\t\t\tconst filter = this.parseQueryParamsToFilter();\n\t\t\tthis.setState({ filter });\n\t\t} else {\n\t\t\tthis.props.history.replace(`/merchants?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\t\t}\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tif (this.props.history.location.search === \"\") {\n\t\t\t// set default filter\n\t\t\tthis.props.history.replace(`/merchants?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\t\t} else {\n\t\t\tconst filterByParams = this.parseQueryParamsToFilter();\n\t\t\tif (!_.isEqual(filterByParams, this.state.filter)) {\n\t\t\t\tthis.setState({ filter: filterByParams });\n\t\t\t}\n\t\t}\n\n\t\t// update filter settings\n\t\tthis.props.getMerchantsSettingsAction();\n\t\t// set default filter\n\t\tthis.props.history.replace(`/merchants?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\n\t\tif (this.state.filter !== prevState.filter) {\n\t\t\tthis.props.getMerchantsListAction(this.state.filter);\n\t\t}\n\t}\n\n\tparseQueryParamsToFilter = (): models.FilterMerchants => {\n\t\tconst searchParams = new URLSearchParams(this.props.history.location.search);\n\n\t\tconst merchantsStr = searchParams.get(\"merchants\");\n\t\tconst currenciesStr = searchParams.get(\"currencies\");\n\t\tconst dateFromStr = searchParams.get(\"dateFrom\");\n\t\tconst dateToStr = searchParams.get(\"dateTo\");\n\t\tconst countStr = searchParams.get(\"count\");\n\t\tconst pageStr = searchParams.get(\"page\");\n\n\t\treturn {\n\t\t\tcurrencies: currenciesStr !== null ? currenciesStr.split(\",\") : undefined,\n\t\t\tmerchants: merchantsStr !== null ? merchantsStr.split(\",\") : undefined,\n\t\t\tdateFrom: (dateFromStr !== null) ? new Date(dateFromStr) : this.defaultFilter.dateFrom,\n\t\t\tdateTo: (dateToStr !== null) ? new Date(dateToStr) : this.defaultFilter.dateTo,\n\t\t\tcount: (countStr !== null) ? Number.parseInt(countStr) : 20,\n\t\t\tpage: (pageStr !== null) ? Number.parseInt(pageStr) : 1,\n\t\t}\n\t}\n\n\tchangeFilterDataHendler = (filterPart: FilterPart) => {\t\t\n\t\tconst filter = {\n\t\t\t...this.state.filter,\n\t\t\t...filterPart\n\t\t};\n\t\tthis.props.history.push(`/merchants?${helper.parseObjectToQueryParams(filter)}`);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Accordion defaultActiveKey=\"0\" className=\"mb-4\">\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t<Row className=\"text-center\">\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"0\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Select Merchants</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"1\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Select Currencies</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} variant=\"link\" eventKey=\"2\" >\n\t\t\t\t\t\t\t\t\t\t<h6>Filter By Date</h6>\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<FilterByMerchant\n\t\t\t\t\t\t\t\t\tmerchants={this.props.settings !== null ? [...this.props.settings.merchants] : []}\n\t\t\t\t\t\t\t\t\tfilterMerchants={this.state.filter.merchants ? this.state.filter.merchants : []}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeFilterDataHendler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<FilterByCurrency\n\t\t\t\t\t\t\t\t\tcurrencies={this.props.settings !== null ? [...this.props.settings.currencies] : []}\n\t\t\t\t\t\t\t\t\tfilterCurrencies={this.state.filter.currencies ? this.state.filter.currencies : []}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeFilterDataHendler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<FilterByDate\n\t\t\t\t\t\t\t\t\tdateFrom={this.state.filter.dateFrom}\n\t\t\t\t\t\t\t\t\tdateTo={this.state.filter.dateTo}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeFilterDataHendler}\n\t\t\t\t\t\t\t\t\tisDateRequired={true}\n\t\t\t\t\t\t\t\t\terrorHandler={this.props.handleErrorAction}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t</Card >\n\t\t\t\t</Accordion>\n\t\t\t\t<MerchantsTable \n\t\t\t\t\tfilterCurrencies={this.state.filter.currencies ? this.state.filter.currencies : []}\n\t\t\t\t\tfilterMerchants={this.state.filter.merchants ? this.state.filter.merchants : []}\n\t\t\t\t/>\n\t\t\t\t<PaginationActivity\n\t\t\t\t\tcountMax={this.props.merchants !== null ? this.props.merchants.countMerchants : 0}\n\t\t\t\t\tcountOnPage={this.state.filter.count}\n\t\t\t\t\tpage={this.state.filter.page}\n\t\t\t\t\titemsLength={3}\n\t\t\t\t\tsubmitPagination={this.changeFilterDataHendler}\n\t\t\t\t/>\n\t\t\t</div >\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tmerchants: state.merchants.merchants,\n\tsettings: state.merchants.settings\n});\n\nconst mapDispatch = {\n\tgetMerchantsSettingsAction,\n\tgetMerchantsListAction,\n\thandleErrorAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Merchants);\n","import React, { Component } from \"react\";\nimport { Col, Row, Container, Badge, ListGroup } from \"react-bootstrap\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport * as order from \"../../../store/ducks/order.duck\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { RootState } from \"../../../store/rootDuck\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\nimport LinkPermissions from \"../../common/components/LinkPermissions\";\n\nimport { getHost } from '../../../api/CryptoPayClient';\n\ninterface ParamsOrderPath {\n\torderId: string;\n}\n\ntype Props = RouteComponentProps<ParamsOrderPath> &\n\tConnectedProps<typeof connector> &\n{\n\tpermissions: Array<DashboardPermission>;\n\torderData: models.WithdrawalOrder | models.DepositOrder | null;\n\tgetOrder: typeof order.getOrderAction;\n}\ntype State = {\n}\n\nexport class Order extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tconst params = props.match.params;\n\t\tprops.getOrder(params.orderId);\n\t}\n\n\tviewBadgeForStatus = (status: string): \"danger\" | \"warning\" | \"success\" | undefined => {\n\t\tswitch (status) {\n\t\t\tcase 'REJECTED':\n\t\t\tcase 'CANCELED':\n\t\t\t\treturn 'danger';\n\t\t\tcase 'PENDING':\n\t\t\tcase 'SLEEPING':\n\t\t\t\treturn 'warning';\n\t\t\tcase 'ACCEPTED':\n\t\t\t\treturn 'success';\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.props.orderData === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst order = this.props.orderData;\n\t\tconst withdrawal: undefined | models.WithdrawalData = (order as models.WithdrawalOrder).withdrawal;\n\t\tconst deposit: undefined | models.DepositData = (order as models.DepositOrder).deposit;\n\n\t\treturn (\n\t\t\t<Container className=\"mb-4\">\n\t\t\t\t<h5 className=\"mb-4\">{order.apiOrderId}</h5>\n\t\t\t\t<h6 className=\"ml-4\">General</h6>\n\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t<Row className=\"mb-4 mt-4\">\n\t\t\t\t\t\t<Col xs={6} md={5} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Order Id</label>\n\t\t\t\t\t\t\t\t\t<div>{order.apiOrderId}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Client Order Id</label>\n\t\t\t\t\t\t\t\t\t<div>{order.clientOrderId}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Client Tag</label>\n\t\t\t\t\t\t\t\t\t<div>{order.clientOrderTag}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Merchant</label>\n\t\t\t\t\t\t\t\t\t<div>{order.merchant}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={6} md={2} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Currency From</label>\n\t\t\t\t\t\t\t\t\t<div>{order.from.currency}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Amount From</label>\n\t\t\t\t\t\t\t\t\t<div>{order.from.amount}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Currency To</label>\n\t\t\t\t\t\t\t\t\t<div>{order.to.currency}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Amount To</label>\n\t\t\t\t\t\t\t\t\t<div>{order.to.amount}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={6} md={3} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Created At</label>\n\t\t\t\t\t\t\t\t\t<div>{new Date(order.createdAt).toISOString()}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Last Updated At</label>\n\t\t\t\t\t\t\t\t\t<div>{new Date(order.updatedAt).toISOString()}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Expired At</label>\n\t\t\t\t\t\t\t\t\t<div>{order.expiredAt !== null && new Date(order.expiredAt).toISOString()}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\torder.rejectReason !== null &&\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Rejection Reason</label>\n\t\t\t\t\t\t\t\t\t\t<div>{order.rejectReason}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={6} md={2} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Status</label>\n\t\t\t\t\t\t\t\t\t<div><Badge variant={this.viewBadgeForStatus(order.status)}>{order.status}</Badge></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">State</label>\n\t\t\t\t\t\t\t\t\t<div>{order.state}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Instrument</label>\n\t\t\t\t\t\t\t\t\t<div>{order.instrument}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Model</label>\n\t\t\t\t\t\t\t\t\t<div>{order.model}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<h6 className=\"ml-4\">Financial</h6>\n\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t<Row className=\"mb-4 mt-4\">\n\t\t\t\t\t\t<Col xs={6} md={{ span: 4, offset: 1 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Account From</label>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<LinkPermissions\n\t\t\t\t\t\t\t\t\t\t\tpermission={DashboardPermission.AccountView}\n\t\t\t\t\t\t\t\t\t\t\tto={`/account/${order.from.accountId}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={order.from.accountId}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Amount From</label>\n\t\t\t\t\t\t\t\t\t<div>{order.from.amount} {order.from.currency}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Account To</label>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<LinkPermissions\n\t\t\t\t\t\t\t\t\t\t\tpermission={DashboardPermission.AccountView}\n\t\t\t\t\t\t\t\t\t\t\tto={`/account/${order.to.accountId}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={order.to.accountId}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Amount To</label>\n\t\t\t\t\t\t\t\t\t<div>{order.to.amount} {order.to.currency}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={6} md={{ span: 2, offset: 1 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Symbol</label>\n\t\t\t\t\t\t\t\t\t<div>{order.rate.symbol}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Initial Rate</label>\n\t\t\t\t\t\t\t\t\t<div>{order.rate.initial}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Exchange Rate</label>\n\t\t\t\t\t\t\t\t\t<div>{order.rate.exchange} 123</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Exchange Rate Fee</label>\n\t\t\t\t\t\t\t\t\t<div>1 %</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Exchange fee</label>\n\t\t\t\t\t\t\t\t\t<div>1</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={6} md={{ span: 3, offset: 1 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Percent Fee</label>\n\t\t\t\t\t\t\t\t\t<div> %</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Fixed Fee</label>\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Order fee</label>\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{\n\t\t\t\t\twithdrawal !== undefined &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h6 className=\"ml-4\">Crypto Withdrawal Data</h6>\n\t\t\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t\t\t<Row className=\"mb-4 mt-4\">\n\t\t\t\t\t\t\t\t<Col xs={12} md={{ span: 4, offset: 2 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Network</label>\n\t\t\t\t\t\t\t\t\t\t<div>{withdrawal.network}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Destination Address</label>\n\t\t\t\t\t\t\t\t\t\t<div><a href={withdrawal.addressExplorerUrl} target=\"_blank\" rel=\"noopener noreferrer\">{withdrawal.address}</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs={6} md={{ span: 4, offset: 2 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Kind</label>\n\t\t\t\t\t\t\t\t\t\t<div>{withdrawal.kind}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Network Fee Level</label>\n\t\t\t\t\t\t\t\t\t\t<div>{withdrawal.networkFeeLevel}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs={12} md={12} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"text-muted\">Transactions: </h6>\n\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t\t\t{withdrawal.transactions.map((transaction, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={`${index}-${transaction.txHash}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={6} md={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Hash: </label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\"><a href={transaction.txHashExplorerUrl} target=\"_blank\" rel=\"noopener noreferrer\">{transaction.txHash}</a></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Withdrawal Id: </label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{transaction.withdrawalId}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={6} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div><label className=\"font-italic text-muted\">Status: </label> {transaction.status}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div><label className=\"font-italic text-muted\">Confirmations: </label> {transaction.confirmations}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tdeposit !== undefined &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h6 className=\"ml-4\">Crypto Deposit Data</h6>\n\t\t\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t\t\t<Row className=\"mb-4 mt-4\">\n\t\t\t\t\t\t\t\t<Col xs={12} md={{ span: 4, offset: 1 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Destination Address</label>\n\t\t\t\t\t\t\t\t\t\t\t<div><a href={deposit.addressExplorerUrl} target=\"_blank\" rel=\"noopener noreferrer\">{deposit.address}</a></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Uri</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>{deposit.uri}</div>\n\t\t\t\t\t\t\t\t\t\t\t<img src={`${getHost()}dashboard/payment-code/svg?payUri=${encodeURIComponent(deposit.uri)}`} alt=\"Payment QR Code\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs={6} md={{ span: 2, offset: 1 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Kind</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>{deposit.kind}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Amount</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>{deposit.amount}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs={6} md={{ span: 3, offset: 1 }} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Network</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>{deposit.network}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t(order as models.DepositOrder).paidStatus &&\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Paid Status</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{(order as models.DepositOrder).paidStatus}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs={12} md={12} className=\"mt-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"text-muted\">Transactions: </h6>\n\t\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t\t\t{deposit.transactions.map((transaction, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={`${index}-${transaction.txHash}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={6} md={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Hash: </label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\"><a href={transaction.txHashExplorerUrl} target=\"_blank\" rel=\"noopener noreferrer\">{transaction.txHash}</a></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Deposit Id: </label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{transaction.depositId}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={6} md={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\"><label className=\"font-italic text-muted\">Amount: </label> {transaction.amount} {deposit.kind}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\"><label className=\"font-Îitalic text-muted\">Status: </label> {transaction.status}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div><label className=\"font-italic text-muted\">Confirmations: </label> {transaction.confirmations}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\torderData: state.order.orderData,\n\tpermissions: []//state.auth.permissions\n});\n\nconst mapDispatch = {\n\tgetOrder: order.getOrderAction,\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Order);\n","import json2csv, { Parser } from \"json2csv\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\n\nexport function dataToCSV<T>(data: Array<T>, options: json2csv.Options<T>): string {\n\tconst json2csvParser = new Parser(options);\n\tconst csv = json2csvParser.parse(data);\n\treturn csv;\n}\n\nexport function downloadCSV<T> (data: Array<T>, options: json2csv.Options<T>, fileName: string) {\n\tvar linkToDownload = document.createElement(\"a\");    \n\tlinkToDownload.style.display = \"none\";\n\n\tconst csv = dataToCSV<T> (data, options);\n\tconst blob = new Blob([csv], {type: \"text/plain\"});\n\n\tlinkToDownload.href = window.URL.createObjectURL(blob);\n\tlinkToDownload.download = fileName;\n\n\tdocument.body.appendChild(linkToDownload);\n\tlinkToDownload.click();\n\tdocument.body.removeChild(linkToDownload);\n}\n\nexport const fieldsCsvForOrder: Array<json2csv.FieldInfo<models.OrderCsvData>> = [\n\t{\n\t\tlabel: \"Merchant\",\n\t\tvalue: \"merchant\",\n\t},\n\t{\n\t\tlabel: \"Order Id\",\n\t\tvalue: \"apiOrderId\",\n\t},\n\t{\n\t\tlabel: \"Client Order Id\",\n\t\tvalue: \"clientOrderId\",\n\t},\n\t{\n\t\tlabel: \"Creation date of operation\",\n\t\tvalue: \"createdAt\",\n\t},\n\t{\n\t\tlabel: \"Date of last operation update\",\n\t\tvalue: \"updatedAt\",\n\t},\n\t{\n\t\tlabel: \"Instrument\",\n\t\tvalue: \"instrument\"\n\t},\n\t{\n\t\tlabel: \"Currency From\",\n\t\tvalue: \"from.currency\"\n\t},\n\t{\n\t\tlabel: \"Amount From\",\n\t\tvalue: \"from.amount\"\n\t},\n\t{\n\t\tlabel: \"Currency To\",\n\t\tvalue: \"to.currency\"\n\t},\n\t{\n\t\tlabel: \"Amount To\",\n\t\tvalue: \"to.amount\"\n\t},\n\t//{\n\t//\tlabel: \"Exchange Input Amount\", // only for Crypto - amount that use for exchange, equals \"Amount Crypto\" +- paid limit\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Order Exchange Rate\",\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Effective Exchange Rate\",\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Symbol\", // BTC/USD or USD/BTC\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Currency Fee\",\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Fx Fee\", // fee from exchange, \"Amount Fiat\" or \"Amount Crypto\" * or / (\"Effective Exchange Rate\" - \"Initial Rate\")\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Fixed Fee\",\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Percent Fee\",\n\t//\tkey: \"???\"\n\t//},\n\t//{\n\t//\tlabel: \"Total Fee\", // \"Amount Fiat\" + \"Total Fee\" = \"Exchange Input Amount\" * or / \"Effective Exchange Rate\"\n\t//\tkey: \"???\"\n\t//},\n\t{\n\t\tlabel: \"Status\",\n\t\tvalue: \"status\"\n\t}\n];","import React, { Component, ChangeEvent, SyntheticEvent } from \"react\";\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField, Box } from \"@material-ui/core\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Button, Row, Col, ButtonGroup } from \"react-bootstrap\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport * as helper from \"../../../../utils/helper\";\nimport { cps } from \"../../../../api/CryptoPayClient\";\nimport * as dataToCsv from \"../../../../utils/dataToCsv\";\nimport * as dateUtil from \"../../../../utils/dateUtil\";\n\n\nexport type FilterForOrders = {\n\tmerchant: models.FilterOrders[\"merchant\"],\n\tinstrument: models.FilterOrders[\"instrument\"],\n\tstatus: models.FilterOrders[\"status\"],\n\tstate: models.FilterOrders[\"state\"],\n\tcurrencyFrom: models.FilterOrders[\"currencyFrom\"],\n\tcurrencyTo: models.FilterOrders[\"currencyTo\"],\n\tapiOrderId: models.FilterOrders[\"apiOrderId\"],\n\tclientOrderId: models.FilterOrders[\"clientOrderId\"],\n\tcryptoAddress: models.FilterOrders[\"cryptoAddress\"],\n\tdateFrom: models.FilterOrders[\"dateFrom\"],\n\tdateTo: models.FilterOrders[\"dateTo\"]\n}\n\ntype State = {\n\tfilter: FilterForOrders;\n\tdownloadCsv: boolean;\n};\n\ntype Props = {\n\tfilter: models.FilterOrders;\n\tfilterSettings: models.FilterSettingsOrders | null;\n\tchangeFilter: (filter: FilterForOrders) => void\n}\n\nexport default class OrdersFilter extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfilter: props.filter,\n\t\t\tdownloadCsv: false,\n\t\t}\n\t}\n\n\tcomponentDidMount() { }\n\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tif (this.state.downloadCsv && prevState.downloadCsv !== this.state.downloadCsv) {\n\t\t\tthis.downloadCsvHandler();\n\t\t}\n\t\tif (this.props.filter !== prevProps.filter) {\n\t\t\tthis.setState ({filter: {...this.props.filter}});\n\t\t}\n\t}\n\n\tonChangeAutocompleteHandler = (name: string) => (event: ChangeEvent<{}>, value: any | null) => {\n\t\tif (value === null) {\n\t\t\tthis.setState({ filter: Object.assign(this.state.filter, { [name]: undefined }) });\n\t\t\treturn;\n\t\t}\n\t\tswitch (name) {\n\t\t\tcase \"currencyTo\":\n\t\t\tcase \"currencyFrom\":\n\t\t\t\tthis.setState({ filter: Object.assign(this.state.filter, { [name]: (value as helper.CurrencyPriority).value }) });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.setState({ filter: Object.assign(this.state.filter, { [name]: value }) });\n\t\t}\n\n\t}\n\tonChangeDateHandler = (name: string) => (date: Date | null) => {\n\t\tswitch (name) {\n\t\t\tcase \"dateFrom\":\n\t\t\t\tthis.setState({ filter: Object.assign(this.state.filter, { [name]: date !== null ? dateUtil.startDay(date) : date }) });\n\t\t\t\tbreak;\n\t\t\tcase \"dateTo\":\n\t\t\t\tthis.setState({ filter: Object.assign(this.state.filter, { [name]: date !== null ? dateUtil.endDay(date) : date }) });\n\t\t\t\tbreak;\n\t\t}\n\n\t};\n\n\tonChangeTextFieldHandler = (name: string) => (event: SyntheticEvent) => {\n\t\tif (event.target instanceof HTMLInputElement) {\n\t\t\tthis.setState({ filter: Object.assign(this.state.filter, { [name]: event.target.value }) });\n\t\t}\n\t};\n\n\tonClickExecuteFilterHandler = () => {\n\t\tthis.props.changeFilter(this.state.filter);\n\t}\n\n\tonClickClearFilterHandler = () => {\n\t\tconst cleanFilter: FilterForOrders = {\n\t\t\tmerchant: undefined,\n\t\t\tinstrument: undefined,\n\t\t\tstatus: undefined,\n\t\t\tstate: undefined,\n\t\t\tcurrencyFrom: undefined,\n\t\t\tcurrencyTo: undefined,\n\t\t\tapiOrderId: undefined,\n\t\t\tclientOrderId: undefined,\n\t\t\tcryptoAddress: undefined,\n\t\t\tdateFrom: undefined,\n\t\t\tdateTo: undefined,\n\t\t};\n\t\tthis.setState({ filter: cleanFilter });\n\t\tthis.props.changeFilter(cleanFilter);\n\t}\n\n\tonClickDownloadCsvHandler = async () => {\n\t\tif (this.state.downloadCsv) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ downloadCsv: true });\n\t}\n\n\tdownloadCsvHandler = async () => {\n\t\ttry {\n\t\t\tconst filter = this.props.filter;\n\t\t\tconst result: Array<models.OrderCsvData> = [];\n\t\t\tlet page = 1;\n\t\t\tlet count = 1000;\n\t\t\twhile (true) {\n\t\t\t\tconst filterToRequest = {\n\t\t\t\t\t...filter,\n\t\t\t\t\tpage,\n\t\t\t\t\tcount\n\t\t\t\t};\n\t\t\t\tconst data = await cps.getOrdersListForCsv(filterToRequest);\n\t\t\t\tif (data.length > 0) {\n\t\t\t\t\tresult.push(...data);\n\t\t\t\t} else {\n\t\t\t\t\tbreak; // exit from loop when orders list is empty\n\t\t\t\t}\n\t\t\t\tpage++;\n\t\t\t}\n\t\t\tawait dataToCsv.downloadCSV<models.OrderCsvData>(result, { fields: dataToCsv.fieldsCsvForOrder }, `${Date.now()}.csv`);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t} finally {\n\t\t\tthis.setState({ downloadCsv: false });\n\t\t}\n\t}\n\n\trender() {\n\n\t\tconst filter: FilterForOrders = this.state.filter;\n\t\tlet filterSettings: models.FilterSettingsOrders;\n\t\tif (this.props.filterSettings === null) {\n\t\t\t// return error\n\t\t\treturn null;\n\t\t}\n\t\tfilterSettings = this.props.filterSettings;\n\n\t\treturn (\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\toptions={[...filterSettings.merchants]}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Merchant\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\tvalue={filter.merchant ? filter.merchant : null}\n\t\t\t\t\t\t\t\tonChange={this.onChangeAutocompleteHandler(\"merchant\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\toptions={[...filterSettings.instruments]}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Instrument\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\tvalue={filter.instrument ? filter.instrument : null}\n\t\t\t\t\t\t\t\tonChange={this.onChangeAutocompleteHandler(\"instrument\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\toptions={[...filterSettings.statuses]}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Status\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\tvalue={filter.status ? filter.status : null}\n\t\t\t\t\t\t\t\tonChange={this.onChangeAutocompleteHandler(\"status\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\toptions={[...filterSettings.states]}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"State\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\tvalue={filter.state ? filter.state : null}\n\t\t\t\t\t\t\t\tonChange={this.onChangeAutocompleteHandler(\"state\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\toptions={helper.convertCurrenciesForAutocomplite([...filterSettings.currencyFrom]).sort((a, b) => { return a.priority - b.priority })}\n\t\t\t\t\t\t\t\tgroupBy={(option) => option.type}\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.value}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Currency from\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\tvalue={filter.currencyFrom ? helper.currenciesPriorityDict[filter.currencyFrom] : null}\n\t\t\t\t\t\t\t\tonChange={this.onChangeAutocompleteHandler(\"currencyFrom\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={4}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\toptions={helper.convertCurrenciesForAutocomplite([...filterSettings.currencyTo]).sort((a, b) => { return a.priority - b.priority })}\n\t\t\t\t\t\t\t\tgroupBy={(option) => option.type}\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.value}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Currency to\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\tvalue={filter.currencyTo ? helper.currenciesPriorityDict[filter.currencyTo] : null}\n\t\t\t\t\t\t\t\tonChange={this.onChangeAutocompleteHandler(\"currencyTo\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t<Col sm={3} xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"outlined\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tlabel=\"Order id\"\n\t\t\t\t\t\t\t\tplaceholder=\"Order id\"\n\t\t\t\t\t\t\t\tonChange={this.onChangeTextFieldHandler(\"apiOrderId\")}\n\t\t\t\t\t\t\t\tvalue={(filter.apiOrderId !== undefined) ? filter.apiOrderId : ''}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={3} xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tlabel=\"Client order id\"\n\t\t\t\t\t\t\t\tplaceholder=\"Client order id\"\n\t\t\t\t\t\t\t\tonChange={this.onChangeTextFieldHandler(\"clientOrderId\")}\n\t\t\t\t\t\t\t\tvalue={(filter.clientOrderId !== undefined) ? filter.clientOrderId : ''}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tlabel=\"Crypto address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Deposit or withdrawal address\"\n\t\t\t\t\t\t\t\tonChange={this.onChangeTextFieldHandler(\"cryptoAddress\")}\n\t\t\t\t\t\t\t\tvalue={(filter.cryptoAddress !== undefined) ? filter.cryptoAddress : ''}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Box textAlign=\"center\">\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t\tlabel=\"Date from\"\n\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t\tvalue={filter.dateFrom ? filter.dateFrom : null}\n\t\t\t\t\t\t\t\t\tonChange={this.onChangeDateHandler(\"dateFrom\")}\n\t\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={2} xs={6}>\n\t\t\t\t\t\t\t<Box textAlign=\"center\">\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t\tlabel=\"Date to\"\n\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\n\t\t\t\t\t\t\t\t\tvalue={filter.dateTo ? filter.dateTo : null}\n\t\t\t\t\t\t\t\t\tonChange={this.onChangeDateHandler(\"dateTo\")}\n\t\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t\t<Col className=\"d-flex flex-row-reverse\" sm={{ span: 4, offset: 8 }} xs={12}>\n\t\t\t\t\t\t\t<ButtonGroup size=\"sm\">\n\t\t\t\t\t\t\t\t<Button onClick={this.onClickExecuteFilterHandler} variant=\"outline-success\">Execute</Button>\n\t\t\t\t\t\t\t\t<Button onClick={this.onClickClearFilterHandler} variant=\"outline-warning\">Clear filter</Button>\n\t\t\t\t\t\t\t\t<Button onClick={this.onClickDownloadCsvHandler} disabled={this.state.downloadCsv} variant=\"outline-secondary\"> Download CSV </Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</MuiPickersUtilsProvider>\n\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport { Accordion, Card } from \"react-bootstrap\";\nimport OrdersFilter, { FilterForOrders } from \"./components/OrdersFilter\";\nimport OrdersTable, { OrdersColumnsArray, OrdersColumnsLabels } from \"./components/OrdersTable\";\nimport PaginationActivity from \"../../common/components/PaginationActivity\";\n\nimport { RootState } from \"../../../store/rootDuck\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\nimport { getOrdersListAction, getOrdersSettingsAction, updateOrdersColumnsAction } from \"../../../store/ducks/orders.duck\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport TableColumnSettings from \"../../common/components/TableColumnSettings\";\nimport { PaginationData } from \"../../common/components/PaginationActivity/PaginationActivity\";\n\nimport * as helper from \"../../../utils/helper\";\nimport * as _ from \"lodash\";\n\ntype FilterPart = PaginationData\n\t| FilterForOrders;\n\ntype State = {\n\tfilter: models.FilterOrders;\n};\n\ntype Props = RouteComponentProps<{}> &\n\tConnectedProps<typeof connector> &\n{\n\tactiveColumns: Array<string>;\n\tfilterSettings: models.FilterSettingsOrders | null;\n\tpermissions: DashboardPermission[];\n\torders: models.Orders | null;\n\tgetOrdersListAction: typeof getOrdersListAction,\n\tgetOrdersSettingsAction: typeof getOrdersSettingsAction,\n\tupdateOrdersColumnsAction: typeof updateOrdersColumnsAction\n}\n\nexport class Orders extends Component<Props, State> {\n\n\tprivate readonly defaultFilter: models.FilterOrders = {\n\t\tmerchant: undefined,\n\t\tinstrument: undefined,\n\t\tstatus: undefined,\n\t\tstate: undefined,\n\t\tcurrencyFrom: undefined,\n\t\tcurrencyTo: undefined,\n\t\tapiOrderId: undefined,\n\t\tclientOrderId: undefined,\n\t\tcryptoAddress: undefined,\n\t\tdateFrom: undefined,\n\t\tdateTo: undefined,\n\t\tcount: 20,\n\t\tpage: 1,\n\t\tsortBy: \"createdAt\",\n\t\tsortIn: \"DESC\"\n\t}\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfilter: this.defaultFilter,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getOrdersSettingsAction();\n\n\t\tif (this.props.history.location.search !== \"\") {\n\t\t\tconst filter = this.parseQueryParamsToFilter();\n\t\t\tthis.setState({ filter });\n\t\t} else {\n\t\t\tthis.props.history.replace(`/orders?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\t\t}\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\n\t\tif (this.props.history.location.search === \"\") {\n\t\t\t// set default filter\n\t\t\tthis.props.history.replace(`/orders?${helper.parseObjectToQueryParams(this.defaultFilter)}`);\n\t\t\tthis.setState({ filter: { ...this.defaultFilter } });\n\t\t} else {\n\t\t\tconst filterByParams = this.parseQueryParamsToFilter();\n\t\t\tif (!_.isEqual(filterByParams, this.state.filter)) {\n\t\t\t\tthis.setState({ filter: filterByParams });\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.filter !== prevState.filter) {\n\t\t\tthis.props.getOrdersListAction(this.state.filter);\n\t\t}\n\t}\n\n\tparseQueryParamsToFilter = (): models.FilterOrders => {\n\t\tconst searchParams = new URLSearchParams(this.props.history.location.search);\n\n\t\tconst merchant = searchParams.get(\"merchant\");\n\t\tconst instrument = searchParams.get(\"instrument\");\n\t\tconst status = searchParams.get(\"status\");\n\t\tconst state = searchParams.get(\"state\");\n\t\tconst currencyFrom = searchParams.get(\"currencyFrom\");\n\t\tconst currencyTo = searchParams.get(\"currencyTo\");\n\t\tconst apiOrderId = searchParams.get(\"apiOrderId\");\n\t\tconst clientOrderId = searchParams.get(\"clientOrderId\");\n\t\tconst cryptoAddress = searchParams.get(\"cryptoAddress\");\n\t\tconst dateFromStr = searchParams.get(\"dateFrom\");\n\t\tconst dateToStr = searchParams.get(\"dateTo\");\n\t\tconst countStr = searchParams.get(\"count\");\n\t\tconst pageStr = searchParams.get(\"page\");\n\n\t\treturn {\n\t\t\tmerchant: merchant !== null ? merchant : undefined,\n\t\t\tinstrument: instrument !== null ? instrument : undefined,\n\t\t\tstatus: status !== null ? status : undefined,\n\t\t\tstate: state !== null ? state : undefined,\n\t\t\tcurrencyFrom: currencyFrom !== null ? currencyFrom : undefined,\n\t\t\tcurrencyTo: currencyTo !== null ? currencyTo : undefined,\n\t\t\tapiOrderId: apiOrderId !== null ? apiOrderId : undefined,\n\t\t\tclientOrderId: clientOrderId !== null ? clientOrderId : undefined,\n\t\t\tcryptoAddress: cryptoAddress !== null ? cryptoAddress : undefined,\n\t\t\tdateFrom: (dateFromStr !== null) ? new Date(dateFromStr) : undefined,\n\t\t\tdateTo: (dateToStr !== null) ? new Date(dateToStr) : undefined,\n\t\t\tcount: (countStr !== null) ? Number.parseInt(countStr) : this.defaultFilter.count,\n\t\t\tpage: (pageStr !== null) ? Number.parseInt(pageStr) : this.defaultFilter.page,\n\t\t\tsortBy: this.defaultFilter.sortBy,\n\t\t\tsortIn: this.defaultFilter.sortIn\n\t\t};\n\t}\n\n\tchangeDataFilterHandler = (filterPart: FilterPart) => {\n\t\tconst filter = {\n\t\t\t...this.state.filter,\n\t\t\t...filterPart\n\t\t};\n\t\tthis.props.history.push(`/orders?${helper.parseObjectToQueryParams(filter)}`);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Accordion defaultActiveKey=\"0\" className=\"mb-4\">\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} eventKey=\"0\" >\n\t\t\t\t\t\t\t<h6>Filter</h6>\n\t\t\t\t\t\t</Accordion.Toggle>\n\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<OrdersFilter\n\t\t\t\t\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\t\t\t\t\tfilterSettings={this.props.filterSettings}\n\t\t\t\t\t\t\t\t\tchangeFilter={this.changeDataFilterHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t</Card >\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Accordion.Toggle className=\"px-4 pt-3 pb-1 bg-light\" as={Card.Header} eventKey=\"1\">\n\t\t\t\t\t\t\t<h6>Table settings</h6>\n\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<TableColumnSettings\n\t\t\t\t\t\t\t\t\tcolumns={OrdersColumnsArray}\n\t\t\t\t\t\t\t\t\tlabels={OrdersColumnsLabels}\n\t\t\t\t\t\t\t\t\tactiveColumns={this.props.activeColumns}\n\t\t\t\t\t\t\t\t\tupdateActiveColumns={this.props.updateOrdersColumnsAction}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t</Card >\n\t\t\t\t</Accordion>\n\n\t\t\t\t<OrdersTable\n\t\t\t\t\torders={this.props.orders !== null ? this.props.orders.orders : []}\n\t\t\t\t\tactiveColumns={this.props.activeColumns}\n\t\t\t\t\tpermissions={this.props.permissions}\n\t\t\t\t/>\n\t\t\t\t<PaginationActivity\n\t\t\t\t\tcountMax={this.props.orders !== null ? this.props.orders.countOrders : 0}\n\t\t\t\t\tcountOnPage={this.state.filter.count}\n\t\t\t\t\tpage={this.state.filter.page}\n\t\t\t\t\titemsLength={3}\n\t\t\t\t\tsubmitPagination={this.changeDataFilterHandler} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tactiveColumns: state.orders.activeColumns,\n\tfilterSettings: state.orders.filterSettings,\n\torders: state.orders.orders,\n\tpermissions: []//state.auth.permissions,\n});\n\nconst mapDispatch = {\n\tgetOrdersListAction,\n\tgetOrdersSettingsAction,\n\tupdateOrdersColumnsAction\n};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Orders);\n","import React, { Component } from \"react\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { cps } from \"../../../../api/CryptoPayClient\";\nimport * as helper from \"../../../../utils/helper\";\n\ninterface ParamsOrderPath {\n\torderId: string;\n}\n\ntype Props = RouteComponentProps<ParamsOrderPath> &\n{\n\n}\ntype State = {\n\tdata: any | null;\n}\n\nexport default class OrderWorkflow extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: null\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.state.data === null) {\n\t\t\ttry {\n\t\t\t\tconst filter = this.parseQueryParamsToFilter(this.props);\n\t\t\t\tconst params = this.props.match.params;\n\n\t\t\t\tcps.getOrderWorkflowTicks(params.orderId, filter).then((data) => {\n\t\t\t\t\tthis.setState({ data });\n\t\t\t\t\tconst json = JSON.stringify(data, null, 2);\n\n\t\t\t\t\twindow.document.write('<html><body><pre>' + json + '</pre></body></html>');\n\t\t\t\t\twindow.document.close();\n\n\t\t\t\t});\n\n\t\t\t\tif (this.props.history.location.search === \"\") {\n\t\t\t\t\tthis.props.history.replace(`/order/${params.orderId}/workflow?${helper.parseObjectToQueryParams(filter)}`);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\tthis.setState({ data: null });\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\n\tparseQueryParamsToFilter = (props: Props): models.FilterOrderWorkflowTick => {\n\t\tconst searchParams = new URLSearchParams(props.history.location.search);\n\n\t\tconst executedFromStr = searchParams.get(\"executedFrom\");\n\t\tconst executedToStr = searchParams.get(\"executedTo\");\n\t\tconst countStr = searchParams.get(\"count\");\n\t\tconst pageStr = searchParams.get(\"page\");\n\n\t\treturn {\n\t\t\texecutedFrom: (executedFromStr !== null) ? new Date(executedFromStr) : undefined,\n\t\t\texecutedTo: (executedToStr !== null) ? new Date(executedToStr) : undefined,\n\t\t\tcount: (countStr !== null) ? Number.parseInt(countStr) : 100,\n\t\t\tpage: (pageStr !== null) ? Number.parseInt(pageStr) : 1,\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>{this.state.data !== null ? \"Data loaded\" : \"Data didn't load\"}</div>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { Button, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../../../../store/rootDuck\";\nimport { getGatewaysListAction } from \"../../../../../store/ducks/gateway.duck\";\n\n\ntype State = {\n\tisShowPopUp: boolean;\n}\ntype Props = {\n\tgatewaysList: models.GatewaysList | null,\n\tgetGatewaysListAction: typeof getGatewaysListAction\n}\n\nexport class GatewaysList extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisShowPopUp: false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getGatewaysListAction();\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tthis.props.getGatewaysListAction();\n\t}\n\n\n\trender() {\n\t\tif (this.props.gatewaysList === null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.props.gatewaysList.map((gateway) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Container key={gateway.gatewayUuid} className=\"card mb-4\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col xs={12} sm={6} className=\"\">\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mt-4 mb-4 ml-4\">Gateway: <Link to={`/settings/gateway/${gateway.gatewayUuid}`}>{gateway.gatewayUuid}</Link></h5>\n\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"ml-4\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"enabled\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={gateway.enabled}\n\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col xs={12} sm={6} >\n\t\t\t\t\t\t\t\t\t\t<div className=\"ml-4 mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted mt-4 mb-4\">Description</label>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{gateway.description}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<Link to={`/settings/gateway/create`} className=\"my-2\"><Button variant=\"outline-primary\">Add Gateway</Button></Link>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tgatewaysList: state.gateway.gatewaysList\n});\n\nconst mapDispatch = {\n\tgetGatewaysListAction: getGatewaysListAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(GatewaysList);","import React, { Component, Fragment } from 'react';\nimport axios from \"axios\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Button, OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport styles from \"./index.module.scss\";\n\nfunction getSteps() {\n\treturn ['Create gate', 'Request an order', 'Show payment page', 'Check result'];\n}\n\nfunction getStepContent(step: number) {\n\tswitch (step) {\n\t\tcase 0:\n\t\t\treturn 'Create gate';\n\t\tcase 1:\n\t\t\treturn 'Request an order';\n\t\tcase 2:\n\t\t\treturn 'Show payment page to customer';\n\t\tcase 3:\n\t\t\treturn 'Check result';\n\t\tdefault:\n\t\t\treturn 'Unknown step';\n\t}\n}\n\nconst REQ_BODY_DEFAULT = {\n\t\"instrument\": \"CRYPTO_SELL\",\n\t\"model\": \"DEFAULT\",\n\t\"to\": {\n\t\t\"currency\": \"USD\",\n\t\t\"amount\": \"20\"\n\t}\n};\n\nconst REQ_BODY_EXAMPLE_STR =\n\t`{\n\t<----Optional, yours unique order identifier, if not specified - generated on our side----->\n\t\"id\": {orderIdentifier},\n\n\t<----Optional, yours not unique order identifier----->\n\t\"tag\": {notUniqueOrderIdentifier},\n\n\t<----Required----->\n\t\"instrument\": \"CRYPTO_SELL\",\n\n\t<----Required, you can manage it into Settings/Limits----->\n\t\"model\": \"DEFAULT\",\n\n\t<----Required----->\n\t\"to\": {\t\n\t\t<----Available currencies by selected \"model\"----->\n\t\t\"currency\": \"USD\",\n\t\t\"amount\": \"20\"\n\t},\n\n\t<-----Optional, Redirect customer when payment is success, uses in case when you redirect customer to our Payment Page----->\n\t\"okRedirect\": \"https://merchantWebSidePage/success\",\n\n\t<-----Optional, Redirect customer when payment is failed, uses in case when you redirect customer to our Payment Page----->\n\t\"failRedirect\": \"https://merchantWebSidePage/fail\",\n\n\t<-----Optional, Uses if you identify your customer by email, we send to customer status by payment----->\n\t\"email\": \"customerEmail@gmail.com\",\n\n\t<-----Optional----->\n\t\"description\": \"Description by payment\",\n}`\n\ntype State = {\n\tactiveStep: number;\n\tgate: {\n\t\tgatewayId: string;\n\t\tallowUnsignedRequests: boolean;\n\t} | null;\n\torder: {\n\t\torderId: string;\n\t} | null;\n\treqBody: string | null;\n\tpassphrase: string | null;\n\ttimestamp: number | null;\n\tsignature: string | null;\n\tgateUrl: string | null;\n\tgateUIPrefix: string | null;\n\treqOrderBody: string | null;\n\tpaymentPageUrl: string | null;\n}\ntype Props = {\n\tonClickClosePopUp: () => void;\n\tgate?: {\n\t\tgatewayId: string;\n\t\tallowUnsignedRequests: boolean;\n\t};\n\torder?: {\n\t\torderId: string;\n\t}\n}\n\nexport default class StepperIntegrationFlow extends Component<Props, State>{\n\n\tprivate _STEPS: Array<string> = getSteps();\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveStep: this.props.order && this.props.gate ? 2 : this.props.gate ? 1 : 0,\n\t\t\tgate: this.props.gate ? this.props.gate : null,\n\t\t\torder: this.props.order ? this.props.order : null,\n\t\t\treqBody: JSON.stringify(REQ_BODY_DEFAULT, undefined, 4),\n\t\t\tpassphrase: null,\n\t\t\ttimestamp: null,\n\t\t\tsignature: null,\n\t\t\tgateUrl: null,\n\t\t\tgateUIPrefix: null,\n\t\t\treqOrderBody: null,\n\t\t\tpaymentPageUrl: null\n\t\t};\n\t}\n\n\tprivate _setUpGateUrl(): void {\n\t\t// const origin = window.location.origin;\n\t\t// if (origin === \"http://localhost:3000\" || origin === \"http://localhost:3001\" || origin === \"http://127.0.0.1:38080\") {\n\t\t// \tthis.setState({ gateUrl: `http://127.0.0.1:38080`, gateUIPrefix: \"/widget/\" });\n\t\t// \treturn;\n\t\t// }\n\n\t\t// if (origin === \"https://dashboard-evolution-cryptopay.dev.kube\") {\n\t\t// \tthis.setState({ gateUrl: `https://gate-evolution-cryptopay.dev.kube`, gateUIPrefix: \"/\" });\n\t\t// \treturn;\n\t\t// }\n\n\t\t// if (origin === \"https://dashboard-testnet.cryptopay.band\") {\n\t\t// \tthis.setState({ gateUrl: \"https://gate-testnet.cryptopay.band\", gateUIPrefix: \"/\" });\n\t\t// \treturn;\n\t\t// }\n\n\t\t// if (origin === \"https://dashboard-presentation-cryptopay.dev.kube\") {\n\t\t// \tthis.setState({ gateUrl: \"https://gate-presentation-cryptopay.dev.kube\", gateUIPrefix: \"/\" });\n\t\t// \treturn;\n\t\t// }\n\n\t\t// if (origin === \"https://sandbox.cryptopay.band\") {\n\t\t// \tthis.setState({ gateUrl: \"https://sandbox.cryptopay.band\", gateUIPrefix: \"/widget/\" });\n\t\t// \treturn;\n\t\t// }\n\n\t\talert(`Gate Url is not resolved by dashboard origin: ${origin}`);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._setUpGateUrl();\n\t}\n\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\n\t}\n\n\tonClickSendRequest = async () => {\n\t\ttry {\n\t\t\t// const reqBody = this.state.reqBody;\n\t\t\t// const passphrase = this.state.passphrase;\n\t\t\t// const gate = this.state.gate;\n\t\t\t// const gateUrl = this.state.gateUrl;\n\t\t\t// if (reqBody !== null && passphrase !== null && gateUrl !== null && gate !== null) {\n\n\t\t\t// \tconsole.log(`Gateway request with gate:${gateUrl}`, reqBody);\n\t\t\t// \tlet data: any = JSON.parse(reqBody);\n\n\t\t\t// \tconst response = await axios.post(`${gateUrl}/v2/gate/${gate.gatewayId}`, data, {\n\t\t\t// \t\theaders: {\n\t\t\t// \t\t\t\"Content-type\": \"application/json\",\n\t\t\t// \t\t\t\"CP-ACCESS-PASSPHRASE\": passphrase\n\t\t\t// \t\t}\n\t\t\t// \t});\n\t\t\t// \tconsole.log(\"Order created by gate\", response.data);\n\t\t\t// \tthis.setState({\n\t\t\t// \t\torder: {\n\t\t\t// \t\t\torderId: response.data.id\n\t\t\t// \t\t}\n\t\t\t// \t});\n\t\t\t// } else {\n\t\t\t// \tconsole.warn(\"Cann't send request for create order by gate.\", gateUrl, reqBody, passphrase, gate);\n\t\t\t// }\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\tshowWidgetHandler = async () => {\n\t\tconst paywidget = (window as any).cryptopay;\n\t\tconst gate = this.state.gate;\n\t\tconst order = this.state.order;\n\t\tconst gateUrl = this.state.gateUrl;\n\t\tconst gateUIPrefix = this.state.gateUIPrefix;\n\t\tif (gate !== null && order !== null && gateUrl !== null) {\n\t\t\tpaywidget.showWidget(gate.gatewayId, order.orderId, gateUrl, gateUIPrefix);\n\t\t}\n\t}\n\n\thandleNext = () => {\n\t\tthis.setState({ activeStep: this.state.activeStep + 1 });\n\t};\n\n\thandleBack = () => {\n\t\tthis.setState({ activeStep: this.state.activeStep - 1 });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.stepper_integration_flow}>\n\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t<Stepper alternativeLabel activeStep={this.state.activeStep}>\n\t\t\t\t\t\t{this._STEPS.map((label) => (\n\t\t\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t\t</Step>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Stepper>\n\t\t\t\t\t{/* --->Step 2 (Request an order)<--- */}\n\t\t\t\t\t{\n\t\t\t\t\t\t(this.state.gate !== null && this.state.activeStep === 1) &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{getStepContent(this.state.activeStep)}</p>\n\t\t\t\t\t\t\t<div className={styles.sif_div_context}><b>Url: </b><i>{this.state.gateUrl}/v2/gate/{this.state.gate.gatewayId}/order</i></div>\n\n\t\t\t\t\t\t\t<div className={styles.sif_div_context}>\n\t\t\t\t\t\t\t\t<div className={styles.sif_div_title_context}>\n\t\t\t\t\t\t\t\t\t<b>Headers:</b>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ul className={styles.sif_inner_div_context}>\n\t\t\t\t\t\t\t\t\t<li className={styles.sif_li_headers}><div className={styles.sif_div_headers_inline}>\"Content-type\": \"application/json\"</div></li>\n\t\t\t\t\t\t\t\t\t<li className={styles.sif_li_headers}>\n\t\t\t\t\t\t\t\t\t\t<div className={styles.sif_div_headers_inline}>\n\t\t\t\t\t\t\t\t\t\t\t<span>\"CP-ACCESS-PASSPHRASE\": </span>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder={\"Required\"}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.passphrase !== null ? this.state.passphrase : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ passphrase: event.target.value })}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t!this.state.gate.allowUnsignedRequests &&\n\t\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<li className={styles.sif_li_headers}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={styles.sif_div_headers_inline}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\"CP-ACCESS-TIMESTAMP\": </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder={\"Generated\"} disabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.timestamp !== null ? this.state.timestamp : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li className={styles.sif_li_headers}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={styles.sif_div_headers_inline}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\"CP-ACCESS-SIGN\": </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder={\"Generated\"} disabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.signature !== null ? this.state.signature : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={styles.sif_div_context}>\n\t\t\t\t\t\t\t\t<div className={styles.sif_div_title_context}>\n\t\t\t\t\t\t\t\t\t<b>Body</b>\n\t\t\t\t\t\t\t\t\t<div className={styles.sif_div_exapmle_popover}>\n\t\t\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\t\t\ttrigger={\"focus\"}\n\t\t\t\t\t\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t\t\t<Popover id={`sif-popover-example`} className={styles.sif_popover_example}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Popover.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{REQ_BODY_EXAMPLE_STR}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Popover.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Button className={styles.sif_btn_example_popover} variant=\"outline-info\">?</Button>\n\t\t\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<b>:</b>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.sif_inner_div_context}>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Request body\" className={styles.sif_textarea_body}\n\t\t\t\t\t\t\t\t\t\trows={8}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.reqBody !== null ? this.state.reqBody : \"\"}\n\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ reqBody: event.target.value })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={styles.sif_div_context}>\n\t\t\t\t\t\t\t\t<div className={styles.sif_inner_div_context}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.order !== null}\n\t\t\t\t\t\t\t\t\t\tonClick={this.onClickSendRequest}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSend POST\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.sif_inner_div_context}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.order !== null &&\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.sif_textarea_body}\n\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Response body\"\n\t\t\t\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.order !== null ? JSON.stringify(this.state.order, undefined, 4) : \"\"}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={`${styles.sif_div_context} ${styles.sif_div_btn_control}`}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={this.state.order === null}\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNext Step\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\tonClick={this.props.onClickClosePopUp}\n\t\t\t\t\t\t\t\t\tclassName={styles.sif_btn_right}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{/* --->Step 3 (Show pament page)<--- */}\n\t\t\t\t\t{\n\t\t\t\t\t\t(this.state.gate !== null && this.state.order !== null && this.state.gateUrl !== null && this.state.activeStep === 2) &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{getStepContent(this.state.activeStep)}</p>\n\t\t\t\t\t\t\t<div className={styles.sif_div_context}>\n\t\t\t\t\t\t\t\t<div className={styles.sif_div_title_context}>\n\t\t\t\t\t\t\t\t\t<b>Redirect to Payment Page</b>\n\t\t\t\t\t\t\t\t\t<div className={styles.sif_div_exapmle_popover}>\n\t\t\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\t\t\ttrigger={\"focus\"}\n\t\t\t\t\t\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t\t\t<Popover id={`sif-popover-example`} className={styles.sif_popover_example}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Popover.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>Url schema: <i>{`${this.state.gateUrl}${this.state.gateUIPrefix}{gateId}/{orderId}`}</i></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Popover.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Button className={styles.sif_btn_example_popover} variant=\"outline-info\">?</Button>\n\t\t\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.sif_inner_div_context}>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<a href={`${this.state.gateUrl}${this.state.gateUIPrefix}${this.state.gate.gatewayId}/${this.state.order.orderId}`} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t{`${this.state.gateUrl}${this.state.gateUIPrefix}${this.state.gate.gatewayId}/${this.state.order.orderId}`}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.sif_div_title_context}>\n\t\t\t\t\t\t\t\t\t<b>Show Payment Page into your site</b>\n\t\t\t\t\t\t\t\t\t<div className={styles.sif_div_exapmle_popover}>\n\t\t\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\t\t\ttrigger={\"focus\"}\n\t\t\t\t\t\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t\t\t<Popover id={`sif-popover-example`} className={styles.sif_popover_example}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Popover.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{`1. Add <link>this script</link> to your webside.`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2. Call function <i><b>window.cryptopay.showWidget(gateId, orderId)</b></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Popover.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Button className={styles.sif_btn_example_popover} variant=\"outline-info\">?</Button>\n\t\t\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.sif_inner_div_context}>\n\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" className={styles.sif_btn_like_link} onClick={this.showWidgetHandler}>Show Widget</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={`${styles.sif_div_context} ${styles.sif_div_btn_control}`}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={this.state.order === null}\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNext Step\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\tonClick={this.props.onClickClosePopUp}\n\t\t\t\t\t\t\t\t\tclassName={styles.sif_btn_right}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{/* --->Step 4 (Check result)<--- */}\n\t\t\t\t\t{\n\t\t\t\t\t\t(this.state.activeStep === 3) &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography>{getStepContent(this.state.activeStep)}</Typography>\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tAfter order complited successfuly:\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>We send callback to url: https://merchantWebSideCallbackUrl.com</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>If you use Payment Page like widget - we send to your web site info about payment (NOT SECURE)</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>You can send Get request to url: https://merchantWebSideCallbackUrl.com/{\"{gatewayId}\"}/{\"{orderId}\"}</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\tonClick={this.props.onClickClosePopUp}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Form, InputGroup, FormControl, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport validator from \"validator\";\n\nimport styles from \"./index.module.scss\";\n\nimport StepperIntegrationFlow from \"../StepperIntegrationFlow/StepperIntegrationFlow\";\nimport GatewaySecretsPopUp from \"../GatewaySecretsPopUp/GatewaySecretsPopUp\";\n\nimport { cps } from \"../../../../../api/CryptoPayClient\";\nimport { getGatewaysListAction } from \"../../../../../store/ducks/gateway.duck\";\nimport { handleErrorAction } from \"../../../../../store/ducks/general.duck\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { RootState } from \"../../../../../store/rootDuck\";\n\ninterface ParamsGatewayPath {\n\tgatewayUuid?: string;\n}\n\nconst URL_VALIDATOR_CONFIG_GATEWAY = {\n\tprotocols: [\"http\", \"https\"],\n\trequire_protocol: true\n}\n\ntype State = {\n\tisEdit: boolean;\n\tshowDemoOrderPopup: boolean;\n\t// secrets after create gateway\n\trespData: models.CreateGatewayResponse | null;\n\t// gateway data\n\tgatewayUuid: string | null;\n\tdescription: string | null;\n\tdirtyDomain: string | null;\n\tenabled: boolean;\n\tdomainWhitelist: Array<string>;\n\tcallbackMethod: models.GatewayCallbackType | null;\n\tcallbackUrl: string | null;\n\tcallbackCaCert: string | null;\n\tallowUnsignedRequests: boolean;\n}\ntype Props = RouteComponentProps<ParamsGatewayPath> & {\n\tgatewaysList: models.GatewaysList | null,\n\thandleErrorAction: typeof handleErrorAction,\n\tgetGatewaysListAction: typeof getGatewaysListAction\n}\n\nexport class GatewayConstruct extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisEdit: false,\n\t\t\tshowDemoOrderPopup: false,\n\t\t\tgatewayUuid: null,\n\t\t\tdescription: null,\n\t\t\tdirtyDomain: null,\n\t\t\tenabled: false,\n\t\t\tdomainWhitelist: [],\n\t\t\tcallbackMethod: null,\n\t\t\tcallbackUrl: null,\n\t\t\tcallbackCaCert: null,\n\t\t\tallowUnsignedRequests: false,\n\t\t\trespData: null\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst params = this.props.match.params;\n\t\tif (params.gatewayUuid && validator.isUUID(params.gatewayUuid)) {\n\t\t\tthis._setGatewayState(params.gatewayUuid);\n\t\t} else {\n\t\t\tthis.setState({ isEdit: true });\n\t\t}\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\n\t\tif (prevProps.gatewaysList !== this.props.gatewaysList && this.state.gatewayUuid !== null) {\n\t\t\tthis._setGatewayState(this.state.gatewayUuid);\n\t\t}\n\t}\n\n\t_setGatewayState = (gatewayUuid: string) => {\n\t\tconst gatewaysList = this.props.gatewaysList;\n\t\tif (gatewaysList !== null) {\n\t\t\tconst gateway = gatewaysList.find((gate) => {\n\t\t\t\tif (gate.gatewayUuid === gatewayUuid) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n\t\t\tif (gateway) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tgatewayUuid: gateway.gatewayUuid,\n\t\t\t\t\tdescription: gateway.description,\n\t\t\t\t\tdirtyDomain: null,\n\t\t\t\t\tenabled: gateway.enabled,\n\t\t\t\t\tdomainWhitelist: gateway.config.domainWhitelist,\n\t\t\t\t\tcallbackMethod: gateway.callbackConfig !== null ? gateway.callbackConfig.type : null,\n\t\t\t\t\tcallbackUrl: gateway.callbackConfig !== null ? gateway.callbackConfig.url : null,\n\t\t\t\t\tcallbackCaCert: gateway.callbackConfig !== null ? gateway.callbackConfig.rootCertificate : null,\n\t\t\t\t\tallowUnsignedRequests: gateway.config.allowUnsignedRequests\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.props.handleErrorAction(`Gateway data is not defined by uuid: ${gatewayUuid}`, null);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.props.handleErrorAction(`Gateways List is not defined.`, null);\n\t\t}\n\t}\n\n\tonBlurDomainHandler = () => {\n\t\tconst dirtyDomain = this.state.dirtyDomain;\n\t\tif (dirtyDomain !== null && !validator.isURL(dirtyDomain, URL_VALIDATOR_CONFIG_GATEWAY)) {\n\t\t\tthis.props.handleErrorAction(`Domain Url: ${dirtyDomain} is not valid`, null);\n\t\t}\n\t}\n\tonBlurCallbackUrlHandler = () => {\n\t\tconst callbackUrl = this.state.callbackUrl;\n\t\tif (callbackUrl !== null && !validator.isURL(callbackUrl, URL_VALIDATOR_CONFIG_GATEWAY)) {\n\t\t\tthis.props.handleErrorAction(`Callback Url: ${callbackUrl} is not valid`, null);\n\t\t}\n\t}\n\n\tonClickAddDomainHandler = () => {\n\t\tconst dirtyDomain = this.state.dirtyDomain;\n\t\tif (dirtyDomain !== null) {\n\t\t\tif (!validator.isURL(dirtyDomain, URL_VALIDATOR_CONFIG_GATEWAY)) {\n\t\t\t\tthis.props.handleErrorAction(`Domain Url: ${dirtyDomain} is not valid`, null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst domainWhitelist = [...this.state.domainWhitelist];\n\t\t\tif (domainWhitelist.includes(dirtyDomain)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdomainWhitelist.push(dirtyDomain);\n\t\t\tthis.setState({\n\t\t\t\tdomainWhitelist,\n\t\t\t\tdirtyDomain: null\n\t\t\t})\n\t\t}\n\t}\n\tonClickDeleteDomainHandler = (domain: string) => () => {\n\t\tconst domainWhitelist = this.state.domainWhitelist.filter((value) => { return value !== domain });\n\t\tthis.setState({ domainWhitelist });\n\t}\n\n\tonClickCreateGateway = async () => {\n\t\tconst description = this.state.description;\n\t\tif (description === null || description.length === 0) {\n\t\t\tthis.props.handleErrorAction(`Description: ${description} is not valid`, null);\n\t\t\treturn;\n\t\t}\n\t\tconst domainWhitelist = this.state.domainWhitelist;\n\t\tif (domainWhitelist.length === 0) {\n\t\t\tthis.props.handleErrorAction(`Domein whitelist is empty`, null);\n\t\t\treturn;\n\t\t}\n\n\t\tlet callbackConfig: models.GatewayCallbackConfig | null = null;\n\t\tconst callbackUrl = this.state.callbackUrl;\n\t\tconst callbackMethod = this.state.callbackMethod;\n\t\tconst callbackCaCert = this.state.callbackCaCert;\n\t\tif (callbackUrl !== null) {\n\t\t\tif (!validator.isURL(callbackUrl, URL_VALIDATOR_CONFIG_GATEWAY)) {\n\t\t\t\tthis.props.handleErrorAction(`Callback url: ${callbackUrl} is not valid`, null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (callbackMethod === null) {\n\t\t\t\tthis.props.handleErrorAction(`Callback method is not defined`, null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallbackConfig = {\n\t\t\t\turl: callbackUrl,\n\t\t\t\ttype: callbackMethod,\n\t\t\t\trootCertificate: callbackCaCert\n\t\t\t}\n\t\t}\n\n\t\tconst gateway: models.CreateGatewayRequest = {\n\t\t\tdescription,\n\t\t\tenabled: true,\n\t\t\tconfig: {\n\t\t\t\tallowUnsignedRequests: this.state.allowUnsignedRequests,\n\t\t\t\tdomainWhitelist\n\t\t\t},\n\t\t\tcallbackConfig\n\t\t}\n\n\t\ttry {\n\t\t\tconst body = await cps.createGateway(gateway);\n\t\t\tthis.setState({ respData: body, gatewayUuid: body.gatewayId, isEdit: false });\n\t\t} catch (e) {\n\t\t\tthis.props.handleErrorAction(`Cann't create new gateway.`, e);\n\t\t}\n\t}\n\n\tonClickGenerateSecretsGateway = async () => {\n\t\tconst gatewayUuid = this.state.gatewayUuid;\n\t\tif (gatewayUuid === null) {\n\t\t\tthis.props.handleErrorAction(`Gateway Uuid is not defined`, null);\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst body = await cps.changeGatewaySecrets(gatewayUuid);\n\t\t\tthis.setState({ respData: body, gatewayUuid: body.gatewayId, isEdit: false });\n\t\t} catch (e) {\n\t\t\tthis.props.handleErrorAction(`Cann't generate new secrets.`, e);\n\t\t}\n\t}\n\n\tonClickDemoOrder = async () => {\n\t\tconst gatewayUuid = this.state.gatewayUuid;\n\t\tif (gatewayUuid === null) {\n\t\t\tthis.props.handleErrorAction(`Gateway Uuid is not defined`, null);\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ showDemoOrderPopup: true });\n\t}\n\n\tonClickUpdateGateway = async () => {\n\t\tconst gatewayUuid = this.state.gatewayUuid;\n\t\tif (gatewayUuid === null) {\n\t\t\tthis.props.handleErrorAction(`Cann't update gateway. GatewayUuid is not defined`, null);\n\t\t\treturn;\n\t\t}\n\t\tconst description = this.state.description;\n\t\tif (description === null || description.length === 0) {\n\t\t\tthis.props.handleErrorAction(`Cann't update gateway. Description: ${description} is not valid`, null);\n\t\t\treturn;\n\t\t}\n\t\tconst domainWhitelist = this.state.domainWhitelist;\n\t\tif (domainWhitelist.length === 0) {\n\t\t\tthis.props.handleErrorAction(`Cann't update gateway. Domain whitelist is empty`, null);\n\t\t\treturn;\n\t\t}\n\n\t\tlet callbackConfig: models.GatewayCallbackConfig | null = null;\n\t\tconst callbackUrl = this.state.callbackUrl;\n\t\tconst callbackMethod = this.state.callbackMethod;\n\t\tconst callbackCaCert = this.state.callbackCaCert;\n\t\tif (callbackUrl !== null) {\n\t\t\tif (!validator.isURL(callbackUrl, URL_VALIDATOR_CONFIG_GATEWAY)) {\n\t\t\t\tthis.props.handleErrorAction(`Cann't update gateway. Callback url: ${callbackUrl} is not valid`, null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (callbackMethod === null) {\n\t\t\t\tthis.props.handleErrorAction(`Cann't update gateway. Callback method is not defined`, null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallbackConfig = {\n\t\t\t\turl: callbackUrl,\n\t\t\t\ttype: callbackMethod,\n\t\t\t\trootCertificate: callbackCaCert\n\t\t\t}\n\t\t}\n\n\t\tconst gateway: models.UpdateGatewayRequest = {\n\t\t\tdescription,\n\t\t\tenabled: this.state.enabled !== null ? this.state.enabled : undefined,\n\t\t\tconfig: {\n\t\t\t\tallowUnsignedRequests: this.state.allowUnsignedRequests,\n\t\t\t\tdomainWhitelist\n\t\t\t},\n\t\t\tcallbackConfig\n\t\t}\n\n\t\ttry {\n\t\t\tawait cps.updateGateway(gatewayUuid, gateway);\n\t\t\tthis.setState({ isEdit: false });\n\t\t\tthis.props.getGatewaysListAction();\n\t\t} catch (e) {\n\t\t\tthis.props.handleErrorAction(`Cann't update gateway by uuid: ${gatewayUuid}.`, e);\n\t\t}\n\t}\n\n\tonClickCloseRespPopUp = () => {\n\t\tthis.setState({\n\t\t\trespData: null\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.gateway_construct}>\n\t\t\t\t{\n\t\t\t\t\t<Container className=\"card mb-4\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs={12} sm={6} >\n\t\t\t\t\t\t\t\t<div className=\"ml-4 mt-4\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.gatewayUuid !== null &&\n\t\t\t\t\t\t\t\t\t\t<h6>{this.state.gatewayUuid}</h6>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted mt-4 mb-4\">Description</label>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.gate_description_textarea}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write gateway description\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.description ? this.state.description : \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ description: event.target.value })}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"enabled\"\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.enabled}\n\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ enabled: event.target.checked })}\n\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mt-4 ml-4\">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted mt-2\">Config</label>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"allowUnsignedRequests\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.allowUnsignedRequests}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ allowUnsignedRequests: event.target.checked })}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mt-4\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Domain Whitelist:</label>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.isEdit &&\n\t\t\t\t\t\t\t\t\t\t\t<InputGroup className=\"mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"gatewayDomainInput\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write your domain url\"\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Domain Input\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.dirtyDomain ? this.state.dirtyDomain : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ dirtyDomain: event.target.value })}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={this.onBlurDomainHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={this.onClickAddDomainHandler}>Add</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.state.domainWhitelist.map((domain) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup key={domain} className=\"mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"gatewayDomainInput\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write your domain url\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Domain Input\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.isEdit &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={this.onClickDeleteDomainHandler(domain)}>Delete</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs={12} sm={6} className=\"mb-4\">\n\t\t\t\t\t\t\t\t<div className=\"mt-4 ml-4 \">\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted\">Callback Config</label>\n\t\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\t\t\t\t\t\tas={InputGroup.Prepend}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t\t\ttitle={this.state.callbackMethod ? this.state.callbackMethod : \"Method\"}\n\t\t\t\t\t\t\t\t\t\t\tid=\"input-group-dropdown-1\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onSelect={() => this.setState({ callbackMethod: models.GatewayCallbackType.Post })}>POST</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onSelect={() => this.setState({ callbackMethod: models.GatewayCallbackType.Get })}>GET</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t</DropdownButton>\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write callback url\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.callbackUrl ? this.state.callbackUrl : \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ callbackUrl: event.target.value })}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={this.onBlurCallbackUrlHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t\t<label className=\"font-italic text-muted mt-4 mb-4\">CA certificate</label>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.gate_ca_cert_textarea}\n\t\t\t\t\t\t\t\t\t\t\trows={7}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"CA certificate\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.isEdit}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.callbackCaCert ? this.state.callbackCaCert : \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event: any) => this.setState({ callbackCaCert: event.target.value })}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs={12} sm={12} className=\"mb-4\">\n\t\t\t\t\t\t\t\t<div className={styles.gate_activity_buttons_div}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.gatewayUuid !== null ?\n\t\t\t\t\t\t\t\t\t\t\tthis.state.isEdit ?\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" className={styles.gate_button} onClick={this.onClickUpdateGateway}>Update</Button> :\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" className={styles.gate_button} onClick={() => this.setState({ isEdit: true })}>Edit</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" className={styles.gate_button} onClick={this.onClickGenerateSecretsGateway}>Generate New Secrets</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" className={styles.gate_button} onClick={this.onClickDemoOrder}>Demo Order</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</> :\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" className={styles.gate_button} onClick={this.onClickCreateGateway}>Create</Button>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.state.respData !== null ?\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t{/* <GatewaySecretsPopUp\n\t\t\t\t\t\t\t\tmerchantName={this.props.}\n\t\t\t\t\t\t\t\trespData={this.state.respData}\n\t\t\t\t\t\t\t\tonClickClosePopUp={this.onClickCloseRespPopUp}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t<h1>GatewaySecretsPopUp Disabled</h1>\n\t\t\t\t\t\t</Fragment> :\n\t\t\t\t\t\t(this.state.showDemoOrderPopup && this.state.gatewayUuid !== null) ?\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<StepperIntegrationFlow\n\t\t\t\t\t\t\t\t\tgate = {\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tgatewayId: this.state.gatewayUuid,\n\t\t\t\t\t\t\t\t\t\t\tallowUnsignedRequests: this.state.allowUnsignedRequests\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClickClosePopUp={() => this.setState({ showDemoOrderPopup: false })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Fragment> :\n\t\t\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tgatewaysList: state.gateway.gatewaysList\n});\n\nconst mapDispatch = {\n\thandleErrorAction: handleErrorAction,\n\tgetGatewaysListAction: getGatewaysListAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(GatewayConstruct);","import React, { Component } from \"react\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\nimport { Button } from \"react-bootstrap\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { RootState } from \"../../../../store/rootDuck\";\nimport { connect } from \"react-redux\";\nimport { getGatewaysListAction } from \"../../../../store/ducks/gateway.duck\";\nimport GatewaysList from \"./GatewaysList/GatewaysList\";\nimport GatewayConstruct from \"./GatewayConstruct/GatewayConstruct\";\n\ntype State = {\n}\ntype Props = {\n\tgatewaysList: models.GatewaysList | null,\n\tgetGatewaysListAction: typeof getGatewaysListAction\n}\n\nexport class Gateway extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tthis.props.getGatewaysListAction();\n\t}\n\n\n\trender() {\n\t\tconst isGatewayExists = (this.props.gatewaysList !== null && this.props.gatewaysList.length > 0);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/settings/gateway/create\" component={GatewayConstruct} />\n\t\t\t\t\t<Route path=\"/settings/gateway/:gatewayUuid\" component={GatewayConstruct} />\n\t\t\t\t\t<Route path=\"/settings/gateway\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!isGatewayExists &&\n\t\t\t\t\t\t\t<Link to={`/settings/gateway/create`} className=\"my-2\"><Button variant=\"outline-primary\">Start Integration</Button></Link>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisGatewayExists &&\n\t\t\t\t\t\t\t<GatewaysList />\n\t\t\t\t\t\t}\n\t\t\t\t\t</ Route>\n\t\t\t\t</Switch>\n\t\t\t</div >\n\t\t)\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tgatewaysList: state.gateway.gatewaysList\n});\n\nconst mapDispatch = {\n\tgetGatewaysListAction: getGatewaysListAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Gateway);","import Gateway from \"./Gateway\";\n\nexport default Gateway;","import General from \"./General\";\n\nexport default General;","import React, { Component } from \"react\";\n\n\ntype State = {}\ntype Props = {}\n\nexport default class General extends Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\tGeneral Settings\n\t\t\t</>\n\t\t)\n\t}\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Table, Button, ButtonGroup } from \"react-bootstrap\";\nimport * as models from \"@cryptopay/dashboard-contract/models\";\n\nimport styles from \"./index.module.scss\";\n\nimport { RootState } from \"../../../../store/rootDuck\";\nimport { connect } from \"react-redux\";\nimport { getMerchantLimitsAction, updateMerchantLimitAction } from \"../../../../store/ducks/limits.duck\";\n\n\ntype State = {\n\teditLimit: models.UpdateLimitData | null;\n\tlimits: models.MerchantLimits | null;\n}\ntype Props = {\n\tpermissions: Array<models.DashboardPermission>;\n\tlimits: models.MerchantLimits | null;\n\tgetMerchantLimitsAction: typeof getMerchantLimitsAction;\n\tupdateMerchantLimitAction: typeof updateMerchantLimitAction;\n}\n\nexport class Limits extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\teditLimit: null,\n\t\t\tlimits: props.limits\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getMerchantLimitsAction();\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tif (this.props.limits !== prevProps.limits) {\n\t\t\tthis.setState({ limits: this.props.limits });\n\t\t}\n\t\tthis.props.getMerchantLimitsAction();\n\t}\n\n\tisEditMode = (instrumentName: string, modelName: string, pairName: string): boolean => {\n\t\tconst editLimit = this.state.editLimit;\n\t\tif (editLimit !== null && editLimit.instrument === instrumentName && editLimit.model === modelName && editLimit.pair === pairName) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tclickEditModeHandler = (instrumentName: string, modelName: string, pairName: string) => (event: any) => {\n\t\tconst limits = this.state.limits;\n\t\tif (limits !== null) {\n\t\t\tconst pair = (limits[instrumentName] && limits[instrumentName][modelName] && limits[instrumentName][modelName][pairName]) ? limits[instrumentName][modelName][pairName] : null;\n\t\t\tif (pair !== null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\teditLimit: {\n\t\t\t\t\t\tinstrument: instrumentName,\n\t\t\t\t\t\tmodel: modelName,\n\t\t\t\t\t\tpair: pairName,\n\t\t\t\t\t\tpairData: pair\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclickChangeLimitHandler = (instrumentName: string, modelName: string, pairName: string) => () => {\n\t\tconst limits = this.state.limits;\n\t\tif (limits !== null) {\n\t\t\tconst pairData = limits[instrumentName] && limits[instrumentName][modelName] && limits[instrumentName][modelName][pairName] ? limits[instrumentName][modelName][pairName] : null;\n\t\t\tif (pairData !== null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\teditLimit: {\n\t\t\t\t\t\tinstrument: instrumentName,\n\t\t\t\t\t\tmodel: modelName,\n\t\t\t\t\t\tpair: pairName,\n\t\t\t\t\t\tpairData\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\n\tclickUpdateLimitHandler = (instrumentName: string, modelName: string, pairName: string) => () => {\n\t\tconst editLimit = this.state.editLimit;\n\n\t\tif (editLimit !== null && editLimit.instrument === instrumentName && editLimit.model === modelName && editLimit.pair === pairName) {\n\t\t\tthis.props.updateMerchantLimitAction(editLimit);\n\t\t\tthis.setState({\n\t\t\t\teditLimit: null\n\t\t\t})\n\t\t}\n\t}\n\n\tclickCancellUpdateLimitHandler = (instrumentName: string, modelName: string, pairName: string) => () => {\n\t\tthis.setState({\n\t\t\teditLimit: null,\n\t\t\tlimits: this.props.limits\n\t\t});\n\t}\n\n\tchangeInputHandler = (key: string) => (event: any) => {\n\t\tconst limits: models.MerchantLimits | null = this.state.limits ? { ...this.state.limits } : null;\n\t\tconst editLimit = this.state.editLimit ? { ...this.state.editLimit } : null;\n\t\tconst value = (event.target.value || event.target.value !== \"-\") ? event.target.value : null;\n\t\tif (limits !== null && editLimit !== null) {\n\t\t\tconst instrumentName = editLimit.instrument;\n\t\t\tconst instrument: models.Instrument | null = limits[instrumentName] ? { ...limits[instrumentName] } : null\n\t\t\tif (instrument !== null) {\n\t\t\t\tconst modelName = editLimit.model;\n\t\t\t\tconst model: models.Model | null = instrument[modelName] ? { ...instrument[modelName] } : null\n\t\t\t\tif (model !== null && editLimit.model === modelName) {\n\t\t\t\t\tconst pairName = editLimit.pair;\n\t\t\t\t\tconst pair: models.Pair | null = model[pairName] ? { ...model[pairName] } : null\n\t\t\t\t\tif (pair !== null && editLimit.pair === pairName) {\n\t\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\t\tcase \"expirationSeconds\":\n\t\t\t\t\t\t\t\tpair.expirationSeconds = Number.parseInt(value); break;\n\t\t\t\t\t\t\tcase \"paidMinFactor\":\n\t\t\t\t\t\t\t\tpair.paidMinFactor = value; break;\n\t\t\t\t\t\t\tcase \"paidMinFixed\":\n\t\t\t\t\t\t\t\tpair.paidMinFixed = value; break;\n\t\t\t\t\t\t\tcase \"paidMaxFactor\":\n\t\t\t\t\t\t\t\tpair.paidMaxFactor = value; break;\n\t\t\t\t\t\t\tcase \"paidMaxFixed\":\n\t\t\t\t\t\t\t\tpair.paidMaxFixed = value; break;\n\t\t\t\t\t\t\tcase \"overpaidFactor\":\n\t\t\t\t\t\t\t\tpair.overpaidFactor = value; break;\n\t\t\t\t\t\t\tcase \"overpaidFixed\":\n\t\t\t\t\t\t\t\tpair.overpaidFixed = value; break;\n\t\t\t\t\t\t\tcase \"from.orderMin\":\n\t\t\t\t\t\t\t\tpair.from.orderMin = value; break;\n\t\t\t\t\t\t\tcase \"from.orderMax\":\n\t\t\t\t\t\t\t\tpair.from.orderMax = value; break;\n\t\t\t\t\t\t\tcase \"from.exchangeFeeFactor\":\n\t\t\t\t\t\t\t\tpair.from.exchangeFeeFactor = value; break;\n\t\t\t\t\t\t\tcase \"from.exchangeFeeFixed\":\n\t\t\t\t\t\t\t\tpair.from.exchangeFeeFixed = value; break;\n\t\t\t\t\t\t\tcase \"from.orderFeeFactor\":\n\t\t\t\t\t\t\t\tpair.from.orderFeeFactor = value; break;\n\t\t\t\t\t\t\tcase \"from.orderFeeFixed\":\n\t\t\t\t\t\t\t\tpair.from.orderFeeFixed = value; break;\n\t\t\t\t\t\t\tcase \"to.orderMin\":\n\t\t\t\t\t\t\t\tpair.to.orderMin = value; break;\n\t\t\t\t\t\t\tcase \"to.orderMax\":\n\t\t\t\t\t\t\t\tpair.to.orderMax = value; break;\n\t\t\t\t\t\t\tcase \"to.exchangeFeeFactor\":\n\t\t\t\t\t\t\t\tpair.to.exchangeFeeFactor = value; break;\n\t\t\t\t\t\t\tcase \"to.exchangeFeeFixed\":\n\t\t\t\t\t\t\t\tpair.to.exchangeFeeFixed = value; break;\n\t\t\t\t\t\t\tcase \"to.orderFeeFactor\":\n\t\t\t\t\t\t\t\tpair.to.orderFeeFactor = value; break;\n\t\t\t\t\t\t\tcase \"to.orderFeeFixed\":\n\t\t\t\t\t\t\t\tpair.to.orderFeeFixed = value; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodel[pairName] = pair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(\"changeInputHandler, unknown pair\", pairName);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tinstrument[modelName] = model;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"changeInputHandler, unknown model\", modelName);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlimits[instrumentName] = instrument;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"changeInputHandler, unknown instrument\", instrumentName);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.setState({ limits });\n\t\t} else {\n\t\t\tconsole.log(\"changeInputHandler, limits is not defined\", limits);\n\t\t\treturn;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst limits = this.props.limits;\n\t\tif (limits === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={styles.merchant_limits}>\n\t\t\t\t<Table responsive className={`table-hover text-center`}>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(limits).map((instrumentName) => {\n\t\t\t\t\t\t\tconst instruments = limits[instrumentName];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Fragment key={instrumentName}>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th colSpan={14}>{instrumentName}</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tObject.keys(instruments).map((modelName) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst models = instruments[modelName];\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Fragment key={`${instrumentName}-${modelName}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*Start Instrument*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={14}>Model: {modelName}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tObject.keys(models).map((pairName) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pair = models[pairName];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Fragment key={`${instrumentName}-${modelName}-${pairName}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Start Pair */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th colSpan={13} className={styles.ml_td_text_center}>{pair.from.currency}-{pair.to.currency}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.isEditMode(instrumentName, modelName, pairName) ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.clickChangeLimitHandler(instrumentName, modelName, pairName)} disabled={this.state.editLimit !== null} variant=\"outline-secondary\">Change</Button> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.clickUpdateLimitHandler(instrumentName, modelName, pairName)} variant=\"outline-secondary\">Update</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.clickCancellUpdateLimitHandler(instrumentName, modelName, pairName)} variant=\"outline-secondary\">Cancel</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2}>Currencies</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2}>Expiration Time</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2}>Order Min Amount</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2}>Order Max Amount</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={2}>Paid Min</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={2}>Paid Max</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={2}>Overpaid</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={2}>Exchange Fee</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan={2}>Order Fee</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Factor</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Fixed</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Factor</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Fixed</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Factor</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Fixed</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Factor</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Fixed</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Factor</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Fixed</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Start pair.from and pair Limits */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr className={styles.ml_tr}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pair.from.currency}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*EXPIRATION*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"expirationSeconds\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.expirationSeconds ? pair.expirationSeconds : \"-\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*ORDER_MIN*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"from.orderMin\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.from.orderMin ? pair.from.orderMin : \"-\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*ORDER_MAX*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"from.orderMax\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.from.orderMax ? pair.from.orderMax : \"-\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*PAID_MIN*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"paidMinFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.paidMinFactor ? pair.paidMinFactor : \"-\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"paidMinFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.paidMinFixed ? pair.paidMinFixed : \"-\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*PAID_MAX*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"paidMaxFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.paidMaxFactor ? pair.paidMaxFactor : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"paidMaxFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.paidMaxFixed ? pair.paidMaxFixed : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*OVERPAID*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"overpaidFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.overpaidFactor ? pair.overpaidFactor : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td rowSpan={2} className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"overpaidFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.overpaidFixed ? pair.overpaidFixed : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*EXCHANGE FEE*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"from.exchangeFeeFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.from.exchangeFeeFactor ? pair.from.exchangeFeeFactor : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"from.exchangeFeeFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.from.exchangeFeeFixed ? pair.from.exchangeFeeFixed : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*ORDER FEE*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"from.orderFeeFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.from.orderFeeFactor ? pair.from.orderFeeFactor : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input} onClick={this.changeInputHandler(\"from.orderFeeFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.from.orderFeeFixed ? pair.from.orderFeeFixed : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* End First Limits */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Start pair.from and pair Limits */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pair.to.currency}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*ORDER_MIN*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"to.orderMin\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.to.orderMin ? pair.to.orderMin : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*ORDER_MAX*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"to.orderMax\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.to.orderMax ? pair.to.orderMax : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*EXCHANGE FEE*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"to.exchangeFeeFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.to.exchangeFeeFactor ? pair.to.exchangeFeeFactor : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"to.exchangeFeeFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.to.exchangeFeeFixed ? pair.to.exchangeFeeFixed : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*ORDER FEE*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"to.orderFeeFactor\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.to.orderFeeFactor ? pair.to.orderFeeFactor : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={`${styles.ml_td_input} ${this.isEditMode(instrumentName, modelName, pairName) && styles.ml_td_active_input}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className={styles.ml_input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.changeInputHandler(\"to.orderFeeFixed\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.isEditMode(instrumentName, modelName, pairName)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={pair.to.orderFeeFixed ? pair.to.orderFeeFixed : \"-\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* End pair.to Limits */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* End Pair */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tpermissions: [],//state.auth.permissions,\n\tlimits: state.limits.limits,\n});\n\nconst mapDispatch = {\n\tgetMerchantLimitsAction,\n\tupdateMerchantLimitAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Limits);","import Limits from \"./Limits\";\n\nexport default Limits;","import { SubscriptionList } from \"@cryptopay/dashboard-contract\";\nimport { RootState } from \"../../../../store/rootDuck\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Table, TableBody, TableHead, TableRow, TableCell} from \"@material-ui/core\";\nimport { loadSubscriptionList, deleteSubscription } from \"../../../../store/ducks/subscriptions.duck\";\nimport { Delete } from \"@material-ui/icons\";\n\n\ntype State = {};\n\ntype Props = {\n\tsubscriptions: SubscriptionList;\n\tloadSubscriptionList: typeof loadSubscriptionList;\n\tdeleteSubscription: typeof deleteSubscription;\n}\nexport class SubscriptionsList extends Component<Props, State> {\n\t\n\thandleDeleteSubscription = (id: string) => {\n\t\tthis.props.deleteSubscription(id);\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t\tthis.props.loadSubscriptionList();\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<Table aria-label=\"Subscriptions list\">\n \t\t\t<TableHead>\n \t\t\t\t<TableRow>\n \t\t\t\t\t<TableCell>Url</TableCell>\n \t\t\t\t\t<TableCell>Topic</TableCell>\n \t\t\t\t\t<TableCell>Id</TableCell>\n \t\t\t\t\t<TableCell>Created At</TableCell>\n \t\t\t\t\t<TableCell>Certificate</TableCell>\n \t\t\t\t\t<TableCell>Action</TableCell>\n \t\t\t\t</TableRow>\n \t\t\t</TableHead>\n \t\t\t<TableBody>\n \t\t\t\t{this.props.subscriptions.map(({ url, topic, subscriptionId, trustedCACertificatePEM, createdAt}) => {\n \t\t\t\t\treturn (\n \t\t\t\t<TableRow key={subscriptionId}>\n \t\t\t\t\t<TableCell>{url}</TableCell>\n \t\t\t\t\t<TableCell>{topic}</TableCell>\n \t\t\t\t\t<TableCell>{subscriptionId}</TableCell>\n \t\t\t\t\t<TableCell>{createdAt.toString()}</TableCell>\n \t\t\t\t\t<TableCell>{trustedCACertificatePEM }</TableCell>\n \t\t\t\t\t<TableCell>\n \t\t\t\t\t\t<Button\n \t\t\t\t\t\t\tvariant=\"contained\"\n \t\t\t\t\t\t\tcolor=\"default\"\n \t\t\t\t\t\t\tstartIcon={<Delete />}\n \t\t\t\t\t\t\tonClick={() => this.handleDeleteSubscription(subscriptionId)}\n \t\t\t\t\t\t>Delete</Button>\n \t\t\t\t\t</TableCell>\n \t\t\t\t</TableRow>);\n \t\t\t\t})}\n \t\t\t</TableBody>\n \t\t</Table>\n\t\t</div>);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\tsubscriptions: state.subscriptions.subscriptionList,\n});\n\nconst mapDispatch = {\n\tloadSubscriptionList,\n\tdeleteSubscription,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(SubscriptionsList);\n","import { SubscriptionData, TopicInfoList } from \"@cryptopay/dashboard-contract\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadNotificationTopicList, createSubscription } from \"../../../../store/ducks/subscriptions.duck\";\nimport { handleErrorAction } from \"../../../../store/ducks/general.duck\";\nimport { RootState } from \"../../../../store/rootDuck\";\nimport {\n\tInputLabel,\n\tFormControl,\n\tSelect,\n\tMenuItem,\n\tTextField,\n\tButton,\n\tTextareaAutosize,\n} from \"@material-ui/core\";\n\ntype State = {\n\tselectedTopic: string;\n\tselectedTopicDescription: string;\n\tcertificate: string;\n\turl: string;\n};\n\ntype Props = {\n\ttopics: TopicInfoList;\n\tloadNotificationTopicList: typeof loadNotificationTopicList;\n\tcreateSubscription: typeof createSubscription;\n\thandleErrorAction: typeof handleErrorAction;\n};\n\nexport class SubscriptionForm extends Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedTopic: \"\",\n\t\t\tcertificate: \"\",\n\t\t\tselectedTopicDescription: \"\",\n\t\t\turl: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.loadNotificationTopicList();\n\t}\n\n\tvalidURL = (str: string) => {\n\t\tvar pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n\t\t  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n\t\t  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n\t\t  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n\t\t  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n\t\t  '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n\t\treturn !!pattern.test(str);\n\t}\n\n\thandleChange = (event: React.ChangeEvent<{value: unknown, name: unknown }>) => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\t[event.target.name as string]: event.target.value as string,\n\t\t})\n\t}\n\n\thandleTopicChange = (event: React.ChangeEvent<{value: unknown}>) => {\n\t\tconst topic = this.props.topics.find(topic => topic.topic === event.target.value);\n\t\tif (topic) {\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tselectedTopic: topic.topic,\n\t\t\t\tselectedTopicDescription: topic.description, \n\t\t\t});\n\t\t}\n\t}\n\n\thandleCreate = () => {\n\t\tif (!this.state.selectedTopic.trim()) {\n\t\t\tthis.props.handleErrorAction(\"Topic must be filled\", null);\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.url.trim()) {\n\t\t\tthis.props.handleErrorAction(\"Url must be filled\", null);\n\t\t\treturn;\n\t\t}\n\t\tif (!this.validURL(this.state.url)) {\n\t\t\tthis.props.handleErrorAction(\"Url must be vaild\", null);\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscription: SubscriptionData = {\n\t\t\ttopic: this.state.selectedTopic,\n\t\t\turl: this.state.url,\n\t\t\ttrustedCACertificatePEM: this.state.certificate,\n\t\t}\n\t\tthis.props.createSubscription(subscription);\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tselectedTopic: \"\",\n\t\t\turl: \"\",\n\t\t\tcertificate: \"\",\n\t\t\tselectedTopicDescription: \"\",\n\t\t})\n\t}\n\n\n\trender() {\n\t\treturn (<div>\n \t\t\t<h5>Create new subscription.</h5>\n\t\t\t<div>\n\t\t\t\t<TextField \n\t\t\t\t\tvalue={this.state.url}\n\t\t\t\t\tname=\"url\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tlabel=\"Url\"\n\t\t\t\t\tstyle={{minWidth: 200}}\t\t\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n \t\t\t<FormControl\n\t\t\t style={{minWidth: 250}}\n\t\t\t className=\"mb-2\"\n\t\t\t >\n \t\t\t\t<InputLabel id=\"subscribtion-topic-label\">Topic</InputLabel>\n \t\t\t\t<Select\n\t\t\t\t\tlabelId=\"subscribtion-topic-label\"\n \t\t\t\t\tid=\"subscribtion-topic-select\"\n \t\t\t\t\tvalue={this.state.selectedTopic}\n \t\t\t\t\tonChange={this.handleTopicChange}\n \t\t\t\t>\n \t\t\t\t\t<MenuItem value=\"\"><em>None</em></MenuItem>\n \t\t\t\t\t{this.props.topics.map(topic => (\n \t\t\t\t\t\t<MenuItem key={topic.topic} value={topic.topic}>{topic.topic}</MenuItem>\n \t\t\t\t\t))}\n \t\t\t\t</Select>\n\t\t\t\t <p>{this.state.selectedTopicDescription}</p>\n       \t\t</FormControl>\n\t\t\t   <p>\n\t\t\t  \t<TextareaAutosize \n\t\t\t   \t\tname=\"certificate\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.state.certificate}\n\t\t\t\t\trowsMin={5}\n\t\t\t\t\tcols={40}\n\t\t\t\t/>\n\t\t\t\t</p>\n\t\t\t <Button\n\t\t\t \tvariant=\"contained\"\n \t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={this.handleCreate}\n\t\t\t\tclassName=\"mb-2\"\n \t\t\t>Create</Button>\n\t\t</div>);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\ttopics: state.subscriptions.notificationTopicList,\n});\n\nconst mapDispatch = {\n\tloadNotificationTopicList,\n\tcreateSubscription,\n\thandleErrorAction,\n};\n\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(SubscriptionForm);\n","import React, { Component } from \"react\";\nimport SubscriptionsList from \"./SubscriptionsList\";\nimport SubscriptionForm from \"./SubscriptionForm\";\nexport default class Subscriptions extends Component {\n\trender() {\n\t\treturn (<div>\n\t\t\t<SubscriptionsList />\n\t\t\t<SubscriptionForm />\n\t\t</div>);\n\t}\n}\n","import Users from \"./Users\";\n\nexport default Users;","import React, { Component } from \"react\";\n\n\ntype State = {}\ntype Props = {}\n\nexport default class Users extends Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\tUsers Settings\n\t\t\t</>\n\t\t)\n\t}\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect, Link, RouteComponentProps } from \"react-router-dom\";\n\nimport styles from \"./index.module.scss\";\n\nimport Gateway from \"./gateway\";\nimport General from \"./general\";\nimport Limits from \"./limits\";\nimport Subscriptions from \"./subscriptions\";\nimport Users from \"./users\";\n\nimport { RootState } from \"../../../store/rootDuck\";\n\n\n\n//interface ParamsMerchantPath {\n//\tmerchantId: string;\n//}\n\ntype State = {\n\n}\n\ntype Props = RouteComponentProps<{}> & {\n}\n\nexport class Settings extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tcomponentDidMount() {\n\t}\n\tcomponentDidUpdate(prevProps: Props, prevState: State) {\n\t}\n\n\tparsePathToActiveMenu(): string | null {\n\t\tconst pathArray = this.props.location.pathname.split(\"/\");\n\t\tif (pathArray[1] !== \"settings\") {\n\t\t\treturn null;\n\t\t}\n\t\treturn pathArray[2];\n\t}\n\n\trender() {\n\n\t\tconst activeMenu = this.parsePathToActiveMenu();\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={styles.direction}>\n\t\t\t\t\tSettings\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.nav_content}>\n\t\t\t\t\t<div className={activeMenu === \"general\" ? styles.nav_item_active : styles.nav_item}>\n\t\t\t\t\t\t<Link key=\"general\" to=\"/settings/general\">General</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={activeMenu === \"limits\" ? styles.nav_item_active : styles.nav_item}>\n\t\t\t\t\t\t<Link key=\"limits\" to=\"/settings/limits\">Limits And Commissions</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={activeMenu === \"gateway\" ? styles.nav_item_active : styles.nav_item}>\n\t\t\t\t\t\t<Link key=\"gateway\" to=\"/settings/gateway\">Gateway</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={activeMenu === \"subscriptions\" ? styles.nav_item_active : styles.nav_item}>\n\t\t\t\t\t\t<Link key=\"subscriptions\" to=\"/settings/subscriptions\">Subscriptions</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={activeMenu === \"users\" ? styles.nav_item_active : styles.nav_item}>\n\t\t\t\t\t\t<Link key=\"users\" to=\"/settings/users\">Users</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.content}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/settings/general\" component={General} />\n\t\t\t\t\t\t<Route path=\"/settings/users\" component={Users} />\n\t\t\t\t\t\t<Route path=\"/settings/limits\" component={Limits} />\n\t\t\t\t\t\t<Route path=\"/settings/subscriptions\" component={Subscriptions} />\n\t\t\t\t\t\t<Route path=\"/settings/gateway\" component={Gateway} />\n\t\t\t\t\t\t<Route path=\"/settings\">\n\t\t\t\t\t\t\t<Redirect to={`/settings/general`} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst mapState = (state: RootState) => ({});\n\nconst mapDispatch = {\n\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Settings);\n","import Settings from \"./Settings\";\n\nexport default Settings;","import React, {\n\tcreateContext,\n\tuseContext,\n\tuseEffect,\n\tuseMemo,\n\tuseReducer\n} from \"react\";\n\n/**\n * Both context used to create inside react `redux`-like global state managed\n * entirely by react.\n *\n * @see https://kentcdodds.com/blog/how-to-use-react-context-effectively\n */\n\nconst LayoutContext = {\n\t/**\n\t * Stores layout state, can be consumed globally.\n\t */\n\tState: createContext(null),\n\n\t/**\n\t * Stores `dispatch` function to update layout state, intended to be internal.\n\t */\n\tDispatch: createContext(null)\n};\n\n/**\n * Layout action types, used to filter out dispatched actions.\n */\nconst actionTypes = {\n\t/**\n\t * Initializes layout state from provided `{ pathname, menuConfig }` action\n\t * payload.\n\t */\n\tINIT: \"INIT\",\n\n\t/**\n\t * Updates current subheader from provided `{ title }` action payload.\n\t */\n\tSET_SUBHEADER: \"SET_SUBHEADER\",\n\n\t/**\n\t * Controls splash screen visibility.\n\t */\n\tSHOW_SPLASH_SCREEN: \"SHOW_SPLASH_SCREEN\",\n\tHIDE_SPLASH_SCREEN: \"HIDE_SPLASH_SCREEN\"\n};\n\n/**\n * Used to lazily create initial layout state.\n */\nfunction init() {\n\tconst state = { splashScreen: { refs: {} } };\n\n\treturn state;\n}\n\nfunction reducer(state, { type, payload }) {\n\tif (type === actionTypes.INIT) {\n\t\t//const nextState = init();\n\t}\n\tif (type === actionTypes.SHOW_SPLASH_SCREEN) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tsplashScreen: {\n\t\t\t\t...state.splashScreen,\n\t\t\t\trefs: { ...state.splashScreen.refs, [payload.id]: true }\n\t\t\t}\n\t\t};\n\t}\n\n\tif (type === actionTypes.HIDE_SPLASH_SCREEN) {\n\t\tconst { [payload.id]: skip, ...nextRefs } = state.splashScreen.refs;\n\t\treturn {\n\t\t\t...state,\n\t\t\tsplashScreen: { ...state.splashScreen, refs: nextRefs }\n\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Creates layout reducer and provides it's `state` and ` dispatch`.\n */\nexport function LayoutContextProvider({ children }) {\n\tconst [state, dispatch] = useReducer(\n\t\treducer,\n\t\t{},\n\t\t// See https://reactjs.org/docs/hooks-reference.html#lazy-initialization\n\t\tinit\n\t);\n\tconst { refs: splashScreenRefs } = state.splashScreen;\n\tconst splashScreenVisible = useMemo(\n\t\t() => Object.keys(splashScreenRefs).length > 0,\n\t\t[splashScreenRefs]\n\t);\n\n\tuseEffect(() => {\n\t\tconst splashScreen = document.getElementById(\"splash-screen\");\n\n\t\tif (splashScreenVisible) {\n\t\t\tsplashScreen.classList.remove(\"hidden\");\n\n\t\t\treturn () => {\n\t\t\t\tsplashScreen.classList.add(\"hidden\");\n\t\t\t};\n\t\t}\n\n\t\tconst timeout = setTimeout(() => {\n\t\t\tsplashScreen.classList.add(\"hidden\");\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeout);\n\t\t};\n\t}, [splashScreenVisible]);\n\n\t// Pass state and dispatch to it's contexts.\n\treturn (\n\t\t<LayoutContext.State.Provider value={state}>\n\t\t\t<LayoutContext.Dispatch.Provider value={dispatch}>\n\t\t\t\t{children}\n\t\t\t</LayoutContext.Dispatch.Provider>\n\t\t</LayoutContext.State.Provider>\n\t);\n}\n\n/**\n * Hook to access latest layout context state.\n *\n * @example\n *\n * export function Subheader() {\n *   const { subheader: { title } } = useLayoutContext();\n *\n *   return <h1>{title}</h1>;\n * }\n */\nexport function useLayoutContext() {\n\tconst context = useContext(LayoutContext.State);\n\n\tif (!context) {\n\t\tthrow new Error(\"\");\n\t}\n\n\treturn context;\n}\n\nexport function LayoutSplashScreen({ visible = false }) {\n\tconst dispatch = useContext(LayoutContext.Dispatch);\n\n\tuseEffect(() => {\n\t\tif (!visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = Math.random();\n\t\tdispatch({ type: actionTypes.SHOW_SPLASH_SCREEN, payload: { id } });\n\n\t\treturn () => {\n\t\t\tdispatch({ type: actionTypes.HIDE_SPLASH_SCREEN, payload: { id } });\n\t\t};\n\t}, [visible, dispatch]);\n\n\treturn null;\n}\n","import React, { Suspense, Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Account from \"./account/Account\";\nimport Accounts from \"./accounts/Accounts\";\nimport Merchant from \"./merchant/Merchant\";\nimport Merchants from \"./merchants/Merchants\";\nimport Order from \"./order/Order\";\nimport Orders from \"./orders/Orders\";\nimport OrderWorkflow from \"./order/components/OrderWorkflow\";\nimport Settings from \"./settings\";\nimport { LayoutSplashScreen } from \"../../layout/LayoutContext\";\nimport { DashboardPermission } from \"@cryptopay/dashboard-contract/models\";\nimport { RootState } from \"../../store/rootDuck\";\nimport { connect } from \"react-redux\";\n\n\ntype State = {};\n\ntype Props = {\n\tpermissions: DashboardPermission[];\n}\n\nexport class HomePage extends Component<Props, State> {\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Suspense fallback={<LayoutSplashScreen />}> \n\t\t\t\t<Switch>\n\n\t\t\t\t\t<Route path=\"/order/:orderId/workflow\" component={OrderWorkflow} />\n\t\t\t\t\t<Route path=\"/order/:orderId\" component={Order} />\n\t\t\t\t\t<Route path=\"/orders\" component={Orders} />\n\t\t\t\t\t<Route path=\"/account/:accountId\" component={Account} />\n\t\t\t\t\t<Route path=\"/accounts\" component={Accounts} />\n\t\t\t\t\t<Route path=\"/merchant\" component={Merchant} />\n\t\t\t\t\t\n\t\t\t\t\t<Route path=\"/settings\" component={Settings} />\n\n\t\t\t\t\t<Route path=\"/merchants\" component={Merchants} />\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.permissions.includes(DashboardPermission.OrderList) ?\n\t\t\t\t\t\t\t<Redirect from=\"/\" to={`/orders`} /> :\n\t\t\t\t\t\t\tthis.props.permissions.includes(DashboardPermission.MerchantView) ?\n\t\t\t\t\t\t\t<Redirect from=\"/\" to={`/merchant`} /> :\n\t\t\t\t\t\t\t<Redirect from=\"/\" to={`/orders`} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Redirect to=\"/error/error-v1\" />\n\t\t\t\t</Switch>\n\n\t\t\t</Suspense>\n\t\t);\n\t}\n\n}\n\nconst mapState = (state: RootState) => ({\n\tpermissions: []//state.auth.permissions\n});\n\nconst mapDispatch = {};\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(HomePage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport Cookies from \"js-cookie\";\n\nimport styles from \"./index.module.scss\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n// import UserMenuPopover from \"./UserMenuPopover\";\n\nimport { RootState } from \"../../store/rootDuck\";\n// import { UserState } from \"../../store/ducks/auth.duck\";\nimport { NavElement } from \"../../store/ducks/layout.duck\";\n\nexport type Props = RouteComponentProps<{}> & {\n\t// user: UserState | null;\n\t// merchantChildren: Array<string> | null;\n\tnavElements: Array<NavElement>;\n}\n\nexport type State = {\n\tactiveMenu: NavElement | null;\n}\n\n\nexport class NavbarMenu extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tconst activeMenu = this.parsePathToActiveMenu(this.props.location.pathname);\n\t\tthis.state = {\n\t\t\tactiveMenu\n\t\t};\n\t}\n\n\tpriorityNavElements: Array<NavElement> =\n\t\t[NavElement.HOME, NavElement.ACCOUNTS, NavElement.ORDERS, NavElement.MERCHANTS, NavElement.SETTINGS];\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\n\t\t\tconst newActiveMenu = this.parsePathToActiveMenu(this.props.location.pathname);\n\t\t\tif (newActiveMenu !== this.state.activeMenu) {\n\t\t\t\tthis.setState({ activeMenu: newActiveMenu });\n\t\t\t}\n\t\t}\n\t}\n\n\tparsePathToActiveMenu(pathname: string): NavElement | null {\n\t\tconst pathArray = this.props.location.pathname.split(\"/\");\n\t\tswitch (pathArray[1]) {\n\t\t\tcase \"merchant\":\n\t\t\t\treturn NavElement.HOME;\n\t\t\tcase \"orders\":\n\t\t\t\treturn NavElement.ORDERS;\n\t\t\tcase \"merchants\":\n\t\t\t\treturn NavElement.MERCHANTS;\n\t\t\tcase \"accounts\":\n\t\t\t\treturn NavElement.ACCOUNTS;\n\t\t\tcase \"settings\":\n\t\t\t\treturn NavElement.SETTINGS;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\trender() {\n\n\t\tconst impersonateMerchant: string | undefined = Cookies.get(\"XSRF-TOKEN\");\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={`d-flex justify-content-center align-items-center ${styles.brand_div}`}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt=\"Logo\"\n\t\t\t\t\t\t\tsrc=\"images/logo_white_41x48.png\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Navbar className={`${styles.navbar_menu}`} expand=\"md\">\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t<Link className={`${styles.nav_link} ${this.state.activeMenu === NavElement.ORDERS ? styles.nav_link_active : styles.nav_link_passive}`} to=\"/orders\">Orders</Link>\n\t\t\t\t\t\t\t<a className={`${styles.nav_link} ${styles.nav_link_passive}`} href=\"https://dashboard-next.cryptopay.band/\" target=\"_blank\">Manage</a>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t<Navbar.Collapse className=\"justify-content-end\">\n\t\t\t\t\t\t{/* <DropdownButton\n\t\t\t\t\t\t\talignRight\n\t\t\t\t\t\t\ttitle={this.props.impersonateMerchant ? this.props.impersonateMerchant : \"Select Merchant\"}\n\t\t\t\t\t\t\tclassName={styles.dropdown_merchant}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.merchantChildren !== null &&\n\t\t\t\t\t\t\t\tthis.props.merchantChildren.map((value, index) => {\n\t\t\t\t\t\t\t\t\treturn <Dropdown.Item key={`${index}-${value}`} className={styles.dropdown_item}>{value}</Dropdown.Item>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DropdownButton> */}\n\t\t\t\t\t</Navbar.Collapse>\n\n\t\t\t\t</Navbar>\n\t\t\t</>\n\t\t);\n\t}\n\n}\n\nconst mapState = (state: RootState) => ({\n\tnavElements: state.layout.navElements\n});\n\nconst mapDispatch = {\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default withRouter(connector(NavbarMenu));\n\n","import NavbarMenu from \"./NavbarMenu\";\n\nexport default NavbarMenu;","import React from \"react\";\n\nexport function CopyRight() {\n\treturn (<div className=\"kt-login__copyright\">&copy; 2022 CEX Pay v{process.env.REACT_APP_VERSION}</div>);\n}\nexport default CopyRight;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport styles from \"./index.module.scss\";\n\nimport CopyRight from \"../../pages/common/components/CopyRight\";\n\nimport { RootState } from \"../../store/rootDuck\";\n\n\n\nexport type Props = {\n}\n\nexport type State = {\n\n}\n\n\nexport class Footer extends Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={`${styles.footer_content}`}>\n\t\t\t\t<CopyRight />\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nconst mapState = (state: RootState) => ({\n});\n\nconst mapDispatch = {\n\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Footer);","import FooterLayout from \"./FooterLayout\";\n\nexport default FooterLayout;","import React, { Component } from \"react\";\nimport styles from \"./index.module.scss\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../store/rootDuck\";\nimport NavbarMenu from \"./NavbarMenu\";\nimport FooterLayout from \"./FooterLayout\";\nimport { Container } from \"react-bootstrap\";\n\n\nexport type Props = {\n\tchildren: React.ReactNode;\n}\n\nexport type State = {\n\n}\n\n\nexport class Layout extends Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.layout}>\n\t\t\t\t<div className={styles.context}>\n\t\t\t\t\t<NavbarMenu />\n\t\t\t\t\t<Container className={styles.content}>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.footer}>\n\t\t\t\t\t<FooterLayout />\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nconst mapState = (state: RootState) => ({\n});\n\nconst mapDispatch = {\n\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(Layout);","export function removeCSSClass(ele, cls) {\n  const reg = new RegExp(\"(\\\\s|^)\" + cls + \"(\\\\s|$)\");\n  ele.className = ele.className.replace(reg, \" \");\n}\n\nexport function addCSSClass(ele, cls) {\n  ele.classList.add(cls);\n}\n\nexport function setupAxios(axios, store) {\n  axios.interceptors.request.use(\n    config => {\n      const {\n        auth: { authToken }\n      } = store.getState();\n\n      if (authToken) {\n        config.headers.Authorization = `Bearer ${authToken}`;\n      }\n\n      return config;\n    },\n    err => Promise.reject(err)\n  );\n}\n\n/*  removeStorage: removes a key from localStorage and its sibling expiracy key\n    params:\n        key <string>     : localStorage key to remove\n    returns:\n        <boolean> : telling if operation succeeded\n */\nexport function removeStorage(key) {\n  try {\n    localStorage.setItem(key, \"\");\n    localStorage.setItem(key + \"_expiresIn\", \"\");\n  } catch (e) {\n    console.log(\n      \"removeStorage: Error removing key [\" +\n        key +\n        \"] from localStorage: \" +\n        JSON.stringify(e)\n    );\n    return false;\n  }\n  return true;\n}\n\n/*  getStorage: retrieves a key from localStorage previously set with setStorage().\n    params:\n        key <string> : localStorage key\n    returns:\n        <string> : value of localStorage key\n        null : in case of expired key or failure\n */\nexport function getStorage(key) {\n  const now = Date.now(); //epoch time, lets deal only with integer\n  // set expiration for storage\n  let expiresIn = localStorage.getItem(key + \"_expiresIn\");\n  if (expiresIn === undefined || expiresIn === null) {\n    expiresIn = 0;\n  }\n\n  expiresIn = Math.abs(expiresIn);\n  if (expiresIn < now) {\n    // Expired\n    removeStorage(key);\n    return null;\n  } else {\n    try {\n      const value = localStorage.getItem(key);\n      return value;\n    } catch (e) {\n      console.log(\n        \"getStorage: Error reading key [\" +\n          key +\n          \"] from localStorage: \" +\n          JSON.stringify(e)\n      );\n      return null;\n    }\n  }\n}\n/*  setStorage: writes a key into localStorage setting a expire time\n    params:\n        key <string>     : localStorage key\n        value <string>   : localStorage value\n        expires <number> : number of seconds from now to expire the key\n    returns:\n        <boolean> : telling if operation succeeded\n */\nexport function setStorage(key, value, expires) {\n  if (expires === undefined || expires === null) {\n    expires = 24 * 60 * 60; // default: seconds for 1 day\n  }\n\n  const now = Date.now(); //millisecs since epoch time, lets deal only with integer\n  const schedule = now + expires * 1000;\n  try {\n    localStorage.setItem(key, value);\n    localStorage.setItem(key + \"_expiresIn\", schedule);\n  } catch (e) {\n    console.log(\n      \"setStorage: Error setting key [\" +\n        key +\n        \"] in localStorage: \" +\n        JSON.stringify(e)\n    );\n    return false;\n  }\n  return true;\n}\n\n\n","import * as utils from \"../utils/utils\";\n\nconst localStorageLastLocationKey = \"demo2-lastLocation\";\n\nfunction acceptLocation(lastLocation) {\n  if (\n    lastLocation &&\n    lastLocation.pathname &&\n    lastLocation.pathname !== \"/\" &&\n    lastLocation.pathname.indexOf(\"auth\") === -1 &&\n    lastLocation.pathname !== \"/logout\"\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function saveLastLocation(lastLocation) {\n  const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\n  let _useLocations = localStorateLocations\n    ? JSON.parse(localStorateLocations)\n    : [];\n\n  if (acceptLocation(lastLocation)) {\n    _useLocations.push(`${lastLocation.pathname}${lastLocation.search}`);\n    utils.setStorage(\n      localStorageLastLocationKey,\n      JSON.stringify(_useLocations),\n      120\n    );\n  }\n}\n\nexport function forgotLastLocation() {\n  utils.removeStorage(localStorageLastLocationKey);\n}\n\nexport function getLastLocation() {\n  const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\n  if (!localStorateLocations) {\n    return \"/\";\n  }\n\n  const _userLocations = JSON.parse(localStorateLocations);\n  const result = _userLocations.length > 0 ? _userLocations.pop() : \"/\";\n  return result;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nimport styles from \"./index.module.scss\";\n\nimport { ErrorData } from \"../../../../store/ducks/general.duck\";\nimport { RootState } from \"../../../../store/rootDuck\";\n\n\ntype State = {\n\tisActive: boolean;\n\terror: ErrorData | null;\n}\n\ntype Props = {\n\terror: ErrorData | null;\n}\n\nexport class ErrorRender extends Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tisActive: false,\n\t\t\terror: this.props.error,\n\t\t}\t\n\t}\n\n\tcomponentDidUpdate (prevProps: Props) {\n\t\tif (this.state.isActive) {\n\t\t\tthis.hideTimer(10000); // 10 sec\n\t\t}\n\t\tif (this.props.error !== null && prevProps.error !== this.props.error) {\n\t\t\tthis.setState({isActive: true});\t\n\t\t}\n\t}\n\n\tcloseErrorHandler = () => {\n\t\tthis.setState({isActive: false});\n\t}\n\n\thideTimer = (ms: number) => {\n\t\tsetTimeout(() => {this.setState({isActive: false})}, ms);\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={`${styles.err_render} ${!this.state.isActive ? styles.hide_err_render : \"\"}`}>\n\t\t\t\t<div >\n\t\t\t\t\t<h6>Error</h6>\n\t\t\t\t\t<p>{this.props.error?.message}</p>\n\t\t\t\t\t<HighlightOffIcon \n\t\t\t\t\t\tclassName={styles.cl_err_render}\n\t\t\t\t\t\tonClick={this.closeErrorHandler}\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapState = (state: RootState) => ({\n\terror: state.general.error\n});\n\nconst mapDispatch = {\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(ErrorRender);","import ErrorRender from \"./ErrorRender\";\n\nexport default ErrorRender;","import React from \"react\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useLastLocation } from \"react-router-last-location\";\nimport HomePage from \"../pages/home/HomePage\";\n// import ErrorsPage from \"../pages/errors/ErrorsPage\";\n// import LogoutPage from \"../pages/auth/logout/Logout\";\nimport { LayoutContextProvider } from \"../layout/LayoutContext\";\nimport Layout from \"../layout/Layout\"\nimport * as routerHelpers from \"./RouterHelpers\";\n//import AuthPage from \"../pages/auth/AuthPage\";\n//import { AuthStatus } from \"../store/ducks/auth.duck\";\nimport ErrorRender from \"./../pages/common/components/ErrorRender\";\n\n\nexport const Routes = withRouter(() => {\n\n\tconst lastLocation = useLastLocation();\n\trouterHelpers.saveLastLocation(lastLocation);\n\tconst { userLastLocation } = useSelector(\n\t\t({ auth }) => ({\n\t\t\t//authStatus: auth.authStatus,\n\t\t\tuserLastLocation: routerHelpers.getLastLocation()\n\t\t}),\n\t\tshallowEqual\n\t);\n\treturn (\n\t\t<>\n\t\t\t<LayoutContextProvider>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Layout>\n\t\t\t\t\t\t<HomePage userLastLocation={userLastLocation} />\n\t\t\t\t\t</Layout>\n\t\t\t\t</Switch>\n\t\t\t</LayoutContextProvider>\n\t\t\t<ErrorRender />\n\t\t</>\n\t);\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/en\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/de\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/es\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/fr\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/ja\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/zh\";\n\nimport deMessages from \"./messages/de\";\nimport enMessages from \"./messages/en\";\nimport esMessages from \"./messages/es\";\nimport frMessages from \"./messages/fr\";\nimport jaMessages from \"./messages/ja\";\nimport zhMessages from \"./messages/zh\";\n\nconst allMessages = {\n    de: deMessages,\n    en: enMessages,\n    es: esMessages,\n    fr: frMessages,\n    ja: jaMessages,\n    zh: zhMessages\n};\n\nexport default function I18nProvider({ children }) {\n    const locale = useSelector(({ i18n }) => i18n.lang);\n    const messages = allMessages[locale];\n\n    return (\n        <IntlProvider locale={locale} messages={messages}>\n            {children}\n        </IntlProvider>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../store/rootDuck\";\nimport { checkAppVersionAction, handleErrorAction } from \"../store/ducks/general.duck\";\n\n\nexport type Props = {\n\tchildren: React.ReactNode;\n\tappVersion: string | undefined;\n\tcheckAppVersionAction: typeof checkAppVersionAction;\n\thandleErrorAction: typeof handleErrorAction;\n};\n\nexport type State = {};\n\n\nexport class InitialLayout extends Component<Props, State> {\n\n\tcomponentDidMount() {\n\t\tthis._checkAppVersion();\n\t}\n\n\tprivate _checkAppVersion = () => {\n\t\tif (this.props.appVersion) {\n\t\t\tthis.props.checkAppVersionAction(this.props.appVersion);\n\t\t} else {\n\t\t\tthis.props.handleErrorAction(\"Application version is not defined\", null);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.props.children}\n\t\t\t</>\n\t\t);\n\t}\n\n}\n\nconst mapState = (state: RootState) => ({\n});\n\nconst mapDispatch = {\n\tcheckAppVersionAction,\n\thandleErrorAction\n}\n\nconst connector = connect(mapState, mapDispatch);\n\nexport default connector(InitialLayout);","/**\n * Entry application component used to compose providers and render Routes.\n *\n * Note: Because of\n */\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { LastLocationProvider } from \"react-router-last-location\";\nimport { Routes } from \"./app/router/Routes\";\nimport { LayoutSplashScreen } from \"./app/layout/LayoutContext\";\nimport I18nProvider from \"./app/i18n/I18nProvider\";\nimport InitialLayout from \"./app/layout/InitialLayout\";\n\nexport default function App({ store, persistor }: { store: any, persistor: any/*, basename: string */ }) {\n\n\treturn (\n\t\t/* Provide Redux store */\n\t\t/* Provider has no property loading, so I have remove it and nothing changed - maybe some day we will foundout what was that. */\n\t\t<Provider store={store} /*loading={<LayoutSplashScreen />}*/>\n\t\t\t{/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\n\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t{/* Add high level `Suspense` in case if was not handled inside the React tree. */}\n\t\t\t\t<React.Suspense fallback={<LayoutSplashScreen />}>\n\t\t\t\t\t<InitialLayout appVersion={process.env.REACT_APP_VERSION}>\n\t\t\t\t\t\t{/* Override `basename` (e.g: `homepage` in `package.json`) */}\n\t\t\t\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t\t\t{/*This library only returns the location that has been active before the recent location change in the current window lifetime.*/}\n\t\t\t\t\t\t\t<LastLocationProvider>\n\t\t\t\t\t\t\t\t{/* Provide Metronic theme overrides. */}\n\t\t\t\t\t\t\t\t{/*<ThemeProvider>*/}\n\t\t\t\t\t\t\t\t{/* Provide `react-intl` context synchronized with Redux state.  */}\n\t\t\t\t\t\t\t\t<I18nProvider>\n\t\t\t\t\t\t\t\t\t{/* Render routes with provided `Layout`. */}\n\t\t\t\t\t\t\t\t\t<Routes />\n\t\t\t\t\t\t\t\t</I18nProvider>\n\t\t\t\t\t\t\t\t{/*</ThemeProvider>*/}\n\t\t\t\t\t\t\t</LastLocationProvider>\n\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t</InitialLayout>\n\t\t\t\t</React.Suspense>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n","/**\n * Create React App entry point. This and `public/index.html` files can not be\n * changed or moved.\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store, { persistor } from \"./app/store/store\";\nimport App from './App';\nimport \"./index.scss\"; // Standard version\n// import \"./sass/style.react.rtl.css\"; // RTL version\n// IE 11 polyfills\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n// Fonts\n//import \"socicon/css/socicon.css\";\n//import \"@fortawesome/fontawesome-free/css/all.min.css\";\n//import \"./_metronic/_assets/plugins/line-awesome/css/line-awesome.css\";\n//import \"./_metronic/_assets/plugins/flaticon/flaticon.css\";\n//import \"./_metronic/_assets/plugins/flaticon2/flaticon.css\";\n\n/**\n * Inject metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n//setupAxios(axios, store);\n\n\nif (process.env.REACT_APP_BUILD_CONFIGURATION === 'release') {\n\t// Release - is a full operation WITHOUT any delevelopment artifacts. In other words: IT IS FOR PRODUCTION\n\tReactDOM.render(\n\t\t<App store={store} persistor={persistor} />,\n\t\tdocument.getElementById(\"root\")\n\t);\n} else if (process.env.REACT_APP_BUILD_CONFIGURATION === 'snapshot') {\n\t// Snapshot - is a full operation build with real API backend and allows to include devel features like performance tools, advanced logging etc.\n\t// This may is used\n\t// - ALWAYS, in evolution, presentation, test zones\n\t// - RARELY, in production zone to debug hard issues.\n\tReactDOM.render(\n\t\t<App store={store} persistor={persistor} />,\n\t\tdocument.getElementById(\"root\")\n\t);\n} else if (process.env.REACT_APP_BUILD_CONFIGURATION === 'snapshot-mockup') {\n\t// Snapshot Mockup - is a backend less build for UI demo (uses mocked API Service)\n\t// This may is used as GitPages for the project\n\tReactDOM.render(\n\t\t<App store={store} persistor={persistor} />,\n\t\tdocument.getElementById(\"root\")\n\t);\n} else if (process.env.REACT_APP_BUILD_CONFIGURATION === 'local') {\n\t// Local - is a build used in delevelopment purposes\n\tReactDOM.render(\n\t\t<App store={store} persistor={persistor} />,\n\t\tdocument.getElementById(\"root\")\n\t);\n} else {\n\tthrow new Error(`Unsupported value of REACT_APP_BUILD_CONFIGURATION variable: ${process.env.REACT_APP_BUILD_CONFIGURATION}`);\n}\n"],"sourceRoot":""}